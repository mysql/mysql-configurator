//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MySql.Configurator.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MySql.Configurator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap AboutButton {
            get {
                object obj = ResourceManager.GetObject("AboutButton", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action &apos;{1}&apos; for product &apos;{0}&apos; was cancelled by the user..
        /// </summary>
        public static string ActionCancelledText {
            get {
                return ResourceManager.GetString("ActionCancelledText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionCurrent {
            get {
                object obj = ResourceManager.GetObject("ActionCurrent", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionDone {
            get {
                object obj = ResourceManager.GetObject("ActionDone", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionError {
            get {
                object obj = ResourceManager.GetObject("ActionError", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action &apos;{1}&apos; for product &apos;{0}&apos; failed..
        /// </summary>
        public static string ActionFailedText {
            get {
                return ResourceManager.GetString("ActionFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionOpen {
            get {
                object obj = ResourceManager.GetObject("ActionOpen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action &apos;{1}&apos; for product &apos;{0}&apos; completed successfully..
        /// </summary>
        public static string ActionSucceededText {
            get {
                return ResourceManager.GetString("ActionSucceededText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one instance of MySQL Configurator for Windows can be run at a time..
        /// </summary>
        public static string AppAlreadyRunning {
            get {
                return ResourceManager.GetString("AppAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Thrown by: {1}.{2}.
        /// </summary>
        public static string ApplicationExceptionForLog {
            get {
                return ResourceManager.GetString("ApplicationExceptionForLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception message:
        ///{2}
        ///
        ///Exception thrown by:
        ///{0}.{1}
        ///
        ///Stack trace:
        ///{3}.
        /// </summary>
        public static string ApplicationExceptionForMoreInfo {
            get {
                return ResourceManager.GetString("ApplicationExceptionForMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Exception.
        /// </summary>
        public static string ApplicationExceptionText {
            get {
                return ResourceManager.GetString("ApplicationExceptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Thrown by: {1}.{2}
        ///Exception message: {3}.
        /// </summary>
        public static string ApplicationExceptionWithCustomMessageForLog {
            get {
                return ResourceManager.GetString("ApplicationExceptionWithCustomMessageForLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Configurator.
        /// </summary>
        public static string AppName {
            get {
                return ResourceManager.GetString("AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to retrieve the authorization rules for file &apos;{0}&apos;..
        /// </summary>
        public static string AuthorizationRulesRetrievalFailed {
            get {
                return ResourceManager.GetString("AuthorizationRulesRetrievalFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt; &amp;Back.
        /// </summary>
        public static string BackButtonDefaultText {
            get {
                return ResourceManager.GetString("BackButtonDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back.
        /// </summary>
        public static string BackButtonText {
            get {
                return ResourceManager.GetString("BackButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Configurator was not launched properly. Try re-installing an installer bundle..
        /// </summary>
        public static string BadLaunchWrongArguments {
            get {
                return ResourceManager.GetString("BadLaunchWrongArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap BigWarning {
            get {
                object obj = ResourceManager.GetObject("BigWarning", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to the binary log must not have an extension..
        /// </summary>
        public static string BinLogPathExtensionError {
            get {
                return ResourceManager.GetString("BinLogPathExtensionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Cancel.
        /// </summary>
        public static string CancelButtonDefaultText {
            get {
                return ResourceManager.GetString("CancelButtonDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel configuring your product(s)?.
        /// </summary>
        public static string CancelConfigurationQuestion {
            get {
                return ResourceManager.GetString("CancelConfigurationQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelled.
        /// </summary>
        public static string Cancelled {
            get {
                return ResourceManager.GetString("Cancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel?.
        /// </summary>
        public static string CancelQuestionText {
            get {
                return ResourceManager.GetString("CancelQuestionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel upgrading your server installation?.
        /// </summary>
        public static string CancelUpgradingProductsDetailText {
            get {
                return ResourceManager.GetString("CancelUpgradingProductsDetailText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} method is not supported..
        /// </summary>
        public static string CheckMethodNotSupported {
            get {
                return ResourceManager.GetString("CheckMethodNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want to remove a connection, please close MySQL Workbench..
        /// </summary>
        public static string CloseWBAdviceToDelete {
            get {
                return ResourceManager.GetString("CloseWBAdviceToDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate keys found..
        /// </summary>
        public static string CommandLineOptionDuplicateKeysError {
            get {
                return ResourceManager.GetString("CommandLineOptionDuplicateKeysError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;{0}&apos; is invalid or not recognized..
        /// </summary>
        public static string CommandLineOptionInvalidArgumentError {
            get {
                return ResourceManager.GetString("CommandLineOptionInvalidArgumentError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keys cannot contain any the following characters: {0}..
        /// </summary>
        public static string CommandLineOptionInvalidCharactersError {
            get {
                return ResourceManager.GetString("CommandLineOptionInvalidCharactersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is invalid for the command line option &apos;{1}&apos;..
        /// </summary>
        public static string CommandLineOptionInvalidValueError {
            get {
                return ResourceManager.GetString("CommandLineOptionInvalidValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command line option &apos;{0}&apos; requires a value..
        /// </summary>
        public static string CommandLineOptionRequiresValueError {
            get {
                return ResourceManager.GetString("CommandLineOptionRequiresValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Commercial {
            get {
                object obj = ResourceManager.GetObject("Commercial", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed.
        /// </summary>
        public static string Completed {
            get {
                return ResourceManager.GetString("Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed (with errors).
        /// </summary>
        public static string CompletedWithErrors {
            get {
                return ResourceManager.GetString("CompletedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap config_win_integration {
            get {
                object obj = ResourceManager.GetObject("config_win_integration", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error trying to delete {0}, the file seems to be in use..
        /// </summary>
        public static string ConfigFileDeleteError {
            get {
                return ResourceManager.GetString("ConfigFileDeleteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating example databases....
        /// </summary>
        public static string ConfigInfoCreatingRemovingExamplesData {
            get {
                return ResourceManager.GetString("ConfigInfoCreatingRemovingExamplesData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No sample databases were found to configure..
        /// </summary>
        public static string ConfigInfoNoSampleDbsToConfigure {
            get {
                return ResourceManager.GetString("ConfigInfoNoSampleDbsToConfigure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dedicated Computer.
        /// </summary>
        public static string ConfigMachineTypeDedicated {
            get {
                return ResourceManager.GetString("ConfigMachineTypeDedicated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This computer is dedicated to running the MySQL database server.  No other servers, such as web servers, will be run.  MySQL will make use of all available memory..
        /// </summary>
        public static string ConfigMachineTypeDedicateDescription {
            get {
                return ResourceManager.GetString("ConfigMachineTypeDedicateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Development Computer.
        /// </summary>
        public static string ConfigMachineTypeDeveloper {
            get {
                return ResourceManager.GetString("ConfigMachineTypeDeveloper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a development computer, and many other applications will be installed on it.  A minimal amount of memory will be used by MySQL..
        /// </summary>
        public static string ConfigMachineTypeDeveloperDescription {
            get {
                return ResourceManager.GetString("ConfigMachineTypeDeveloperDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual.
        /// </summary>
        public static string ConfigMachineTypeManual {
            get {
                return ResourceManager.GetString("ConfigMachineTypeManual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep the default configuration file values. If the values need any changes they must be manually updated by editing the configuration file..
        /// </summary>
        public static string ConfigMachineTypeManualDescription {
            get {
                return ResourceManager.GetString("ConfigMachineTypeManualDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Computer.
        /// </summary>
        public static string ConfigMachineTypeServer {
            get {
                return ResourceManager.GetString("ConfigMachineTypeServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Several server applications will be running on this computer.  Choose this option for web or application servers.  MySQL will have medium memory usage..
        /// </summary>
        public static string ConfigMachineTypeServerDescription {
            get {
                return ResourceManager.GetString("ConfigMachineTypeServerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration cancelled.
        /// </summary>
        public static string ConfigOverviewConfigurationCancelledText {
            get {
                return ResourceManager.GetString("ConfigOverviewConfigurationCancelledText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring.
        /// </summary>
        public static string ConfigOverviewConfiguringText {
            get {
                return ResourceManager.GetString("ConfigOverviewConfiguringText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Step Bullet.
        /// </summary>
        public static string ConfigStepBulletAccessibleName {
            get {
                return ResourceManager.GetString("ConfigStepBulletAccessibleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Step Caption.
        /// </summary>
        public static string ConfigStepCaptionAccessibleName {
            get {
                return ResourceManager.GetString("ConfigStepCaptionAccessibleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following configuration steps are being executed..
        /// </summary>
        public static string ConfigStepsAreExecuting {
            get {
                return ResourceManager.GetString("ConfigStepsAreExecuting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration operation has completed..
        /// </summary>
        public static string ConfigStepsFinished {
            get {
                return ResourceManager.GetString("ConfigStepsFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration step [{0}] is taking longer than expected.
        ///It is advised to not cancel the configuration and wait..
        /// </summary>
        public static string ConfigStepTakingTooLong {
            get {
                return ResourceManager.GetString("ConfigStepTakingTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *WARNING*: A deprecated configuration setting is being used(&apos;{0}&apos;) and will be removed in a future release. Use any of the following keywords instead: {1}..
        /// </summary>
        public static string ConfigurationSettingDeprecatedKeyword {
            get {
                return ResourceManager.GetString("ConfigurationSettingDeprecatedKeyword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Steps.
        /// </summary>
        public static string ConfigurationSteps {
            get {
                return ResourceManager.GetString("ConfigurationSteps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration for {0} has been cancelled.
        ///You can start the configure process again by clicking Retry..
        /// </summary>
        public static string ConfigureCancelled {
            get {
                return ResourceManager.GetString("ConfigureCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration for {0} has failed.
        ///You can find more information about the failures in the &apos;Log&apos; tab..
        /// </summary>
        public static string ConfigureFailed {
            get {
                return ResourceManager.GetString("ConfigureFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to continue waiting or cancel the configuration?.
        /// </summary>
        public static string ConfigureHasTimedOutDetail {
            get {
                return ResourceManager.GetString("ConfigureHasTimedOutDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you keep waiting, you may get this message again..
        /// </summary>
        public static string ConfigureHasTimedOutSubDetail {
            get {
                return ResourceManager.GetString("ConfigureHasTimedOutSubDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} configuration is taking longer than expected.
        /// </summary>
        public static string ConfigureHasTimedOutTitle {
            get {
                return ResourceManager.GetString("ConfigureHasTimedOutTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration for {0} was successful.
        ///Click Finish to continue..
        /// </summary>
        public static string ConfigureSuccess {
            get {
                return ResourceManager.GetString("ConfigureSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ConfigUserMySQL241 {
            get {
                object obj = ResourceManager.GetObject("ConfigUserMySQL241", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration of {0} has not been successfully completed.  Are you sure you want to close the wizard?.
        /// </summary>
        public static string ConfirmFinishWithFailingConfig {
            get {
                return ResourceManager.GetString("ConfirmFinishWithFailingConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection attempt failed..
        /// </summary>
        public static string ConnectFailedWarningTitle {
            get {
                return ResourceManager.GetString("ConnectFailedWarningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MySQL server is using SSL and requires a secure connection, but the client connection has SSL turned off..
        /// </summary>
        public static string ConnectionInsecureError {
            get {
                return ResourceManager.GetString("ConnectionInsecureError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This connection is not set to use SSL, but the MySQL server requires a secure connection..
        /// </summary>
        public static string ConnectionIsInsecureAndRequiresRsaKeyRetrievalDetail {
            get {
                return ResourceManager.GetString("ConnectionIsInsecureAndRequiresRsaKeyRetrievalDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieval of the RSA public key is not enabled for insecure connections.
        /// </summary>
        public static string ConnectionIsInsecureAndRequiresRsaKeyRetrievalError {
            get {
                return ResourceManager.GetString("ConnectionIsInsecureAndRequiresRsaKeyRetrievalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MySQL server is using SSL and it requires a secure connection from the client.
        ///This connection is explicitly turning off the use of SSL (Use SSL = No).
        ///
        ///It is advised that the connection is set to use the &quot;Preferred&quot; or &quot;Required&quot; SSL mode in order to connect to this server.
        ///
        ///If, for some reason, using SSL is not an option, the password can still be sent to the server after encrypting it with a RSA key. The client can request the public key from the server, however this could be prone to man-in-the [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ConnectionIsInsecureAndRequiresRsaKeyRetrievalMoreInfo {
            get {
                return ResourceManager.GetString("ConnectionIsInsecureAndRequiresRsaKeyRetrievalMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you trust the server to send an RSA key to encrypt the password?.
        /// </summary>
        public static string ConnectionIsInsecureAndRequiresRsaKeyRetrievalSubDetail {
            get {
                return ResourceManager.GetString("ConnectionIsInsecureAndRequiresRsaKeyRetrievalSubDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MySQL server requires a secure connection.
        /// </summary>
        public static string ConnectionIsInsecureAndRequiresRsaKeyRetrievalTitle {
            get {
                return ResourceManager.GetString("ConnectionIsInsecureAndRequiresRsaKeyRetrievalTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the password for the connection:.
        /// </summary>
        public static string ConnectionPasswordLabelText {
            get {
                return ResourceManager.GetString("ConnectionPasswordLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection passwords were migrated successfully..
        /// </summary>
        public static string ConnectionPasswordsMigratedText {
            get {
                return ResourceManager.GetString("ConnectionPasswordsMigratedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following error was thrown when trying to migrate connection passwords:.
        /// </summary>
        public static string ConnectionPasswordsNotMigratedText {
            get {
                return ResourceManager.GetString("ConnectionPasswordsNotMigratedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Password.
        /// </summary>
        public static string ConnectionPasswordWindowTitleText {
            get {
                return ResourceManager.GetString("ConnectionPasswordWindowTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} database connections were processed for migration..
        /// </summary>
        public static string ConnectionsMigratedDetail {
            get {
                return ResourceManager.GetString("ConnectionsMigratedDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following {0} connections were renamed before migrating them since Workbench connections already existed with those names:.
        /// </summary>
        public static string ConnectionsMigratedRenamedMoreInfo {
            get {
                return ResourceManager.GetString("ConnectionsMigratedRenamedMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following {0} connections were migrated to the MySQL Workbench connections file:.
        /// </summary>
        public static string ConnectionsMigratedSuccessfullyMoreInfo {
            get {
                return ResourceManager.GetString("ConnectionsMigratedSuccessfullyMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already migrated.
        /// </summary>
        public static string ConnectionsMigrationAlreadyText {
            get {
                return ResourceManager.GetString("ConnectionsMigrationAlreadyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local database connections could not be migrated..
        /// </summary>
        public static string ConnectionsMigrationErrorDetail {
            get {
                return ResourceManager.GetString("ConnectionsMigrationErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database connections were not migrated because the following error ocurred:.
        /// </summary>
        public static string ConnectionsMigrationErrorMoreInfo {
            get {
                return ResourceManager.GetString("ConnectionsMigrationErrorMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error migrating connections..
        /// </summary>
        public static string ConnectionsMigrationErrorTitle {
            get {
                return ResourceManager.GetString("ConnectionsMigrationErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indefinite, migrate manually.
        /// </summary>
        public static string ConnectionsMigrationIndefiniteText {
            get {
                return ResourceManager.GetString("ConnectionsMigrationIndefiniteText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No migration needed.
        /// </summary>
        public static string ConnectionsMigrationNotNeededText {
            get {
                return ResourceManager.GetString("ConnectionsMigrationNotNeededText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connections and passwords migrated successfully..
        /// </summary>
        public static string ConnectionsMigrationSuccessTitle {
            get {
                return ResourceManager.GetString("ConnectionsMigrationSuccessTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connections migrated successfully, but not passwords..
        /// </summary>
        public static string ConnectionsMigrationWarningTitle {
            get {
                return ResourceManager.GetString("ConnectionsMigrationWarningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following {0} connections were not migrated since identical connections already existed in the Workbench connections file:.
        /// </summary>
        public static string ConnectionsNotMigratedMoreInfo {
            get {
                return ResourceManager.GetString("ConnectionsNotMigratedMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refusing Connections.
        /// </summary>
        public static string ConnectionStatusBad {
            get {
                return ResourceManager.GetString("ConnectionStatusBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accepting Connections.
        /// </summary>
        public static string ConnectionStatusGood {
            get {
                return ResourceManager.GetString("ConnectionStatusGood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string ConnectionStatusNA {
            get {
                return ResourceManager.GetString("ConnectionStatusNA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting....
        /// </summary>
        public static string ConnectionTestingText {
            get {
                return ResourceManager.GetString("ConnectionTestingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A possible fail reason could be that your user requires a SSL connection that is not currently supported.
        ///
        ///Please check with the Administrator if you require a SSL Connection and if he can authorize your user to login without a SSL connection..
        /// </summary>
        public static string ConnectSSLFailedDetailWarning {
            get {
                return ResourceManager.GetString("ConnectSSLFailedDetailWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Installer will restart your system. Do you want to continue?.
        /// </summary>
        public static string ContinueRebootSystem {
            get {
                return ResourceManager.GetString("ContinueRebootSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade operation cannot continue because the files in the data directory are in use.
        /// </summary>
        public static string DataDirectoryInUse {
            get {
                return ResourceManager.GetString("DataDirectoryInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap dedicated_machine {
            get {
                object obj = ResourceManager.GetObject("dedicated_machine", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap developer_machine {
            get {
                object obj = ResourceManager.GetObject("developer_machine", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap error_sign {
            get {
                object obj = ResourceManager.GetObject("error_sign", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string ErrorText {
            get {
                return ResourceManager.GetString("ErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] example_databases {
            get {
                object obj = ResourceManager.GetObject("example_databases", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password for the MySQL account has expired.
        ///Please enter a new password:.
        /// </summary>
        public static string ExpiredPasswordLabelText {
            get {
                return ResourceManager.GetString("ExpiredPasswordLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password Expired.
        /// </summary>
        public static string ExpiredPasswordWindowTitleText {
            get {
                return ResourceManager.GetString("ExpiredPasswordWindowTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed.
        /// </summary>
        public static string Failed {
            get {
                return ResourceManager.GetString("Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the list of running mysqld processes..
        /// </summary>
        public static string FailedToRetrieveMySqldProcesses {
            get {
                return ResourceManager.GetString("FailedToRetrieveMySqldProcesses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the value of the {0} variable..
        /// </summary>
        public static string FailedToRetrieveVariable {
            get {
                return ResourceManager.GetString("FailedToRetrieveVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Workbench failed to launch with an error (see more information for details)..
        /// </summary>
        public static string FailureToLaunchWorkbench {
            get {
                return ResourceManager.GetString("FailureToLaunchWorkbench", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; does not exist..
        /// </summary>
        public static string FileDoesNotExist {
            get {
                return ResourceManager.GetString("FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Button1.
        /// </summary>
        public static string GenericButton1DefaultText {
            get {
                return ResourceManager.GetString("GenericButton1DefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Button2.
        /// </summary>
        public static string GenericButton2DefaultText {
            get {
                return ResourceManager.GetString("GenericButton2DefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Button3.
        /// </summary>
        public static string GenericButton3DefaultText {
            get {
                return ResourceManager.GetString("GenericButton3DefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Error Ocurred.
        /// </summary>
        public static string GenericErrorTitle {
            get {
                return ResourceManager.GetString("GenericErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Error {0}:{1}.
        /// </summary>
        public static string GenericMySQLError {
            get {
                return ResourceManager.GetString("GenericMySQLError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You still have warnings with your selected options.  Are you sure you want to continue?.
        /// </summary>
        public static string HasOptionWarnings {
            get {
                return ResourceManager.GetString("HasOptionWarnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You still have warnings with your selected paths.  Are you sure you want to continue?.
        /// </summary>
        public static string HasPathWarnings {
            get {
                return ResourceManager.GetString("HasPathWarnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide {0}.
        /// </summary>
        public static string HidePrefixText {
            get {
                return ResourceManager.GetString("HidePrefixText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High Severity Error.
        /// </summary>
        public static string HighSeverityError {
            get {
                return ResourceManager.GetString("HighSeverityError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information.
        /// </summary>
        public static string InformationText {
            get {
                return ResourceManager.GetString("InformationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Enterprise Firewall script could not be found..
        /// </summary>
        public static string InstallEnterpriseFirewallScriptNotFound {
            get {
                return ResourceManager.GetString("InstallEnterpriseFirewallScriptNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid command line argument &apos;{0}&apos;.
        /// </summary>
        public static string InvalidCommandLineArguments {
            get {
                return ResourceManager.GetString("InvalidCommandLineArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not recognized as a valid keyword..
        /// </summary>
        public static string InvalidPropertyGiven {
            get {
                return ResourceManager.GetString("InvalidPropertyGiven", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid server template.
        /// </summary>
        public static string InvalidServerTemplate {
            get {
                return ResourceManager.GetString("InvalidServerTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is an invalid service name..
        /// </summary>
        public static string InvalidServiceName {
            get {
                return ResourceManager.GetString("InvalidServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not opening MySQL Workbench because the executable file ({0}) is not found..
        /// </summary>
        public static string LaunchWorkbenchCancelledExeNotFound {
            get {
                return ResourceManager.GetString("LaunchWorkbenchCancelledExeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not opening MySQL Workbench because an empty connection name was specified..
        /// </summary>
        public static string LaunchWorkbenchCancelledNoConnectionName {
            get {
                return ResourceManager.GetString("LaunchWorkbenchCancelledNoConnectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not opening MySQL Workbench because the install location is not defined..
        /// </summary>
        public static string LaunchWorkbenchCancelledNoInstallLocation {
            get {
                return ResourceManager.GetString("LaunchWorkbenchCancelledNoInstallLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not opening MySQL Workbench because no server instance was specified..
        /// </summary>
        public static string LaunchWorkbenchCancelledNoServerInstance {
            get {
                return ResourceManager.GetString("LaunchWorkbenchCancelledNoServerInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have selected for install packages with a {0} license.  You must accept the following license agreement to complete that installation..
        /// </summary>
        public static string LicenseAgreementSubcaption {
            get {
                return ResourceManager.GetString("LicenseAgreementSubcaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap link_arrow {
            get {
                object obj = ResourceManager.GetObject("link_arrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Logger properties that define a log file path and name have not been set..
        /// </summary>
        public static string LogFileNotDefinedError {
            get {
                return ResourceManager.GetString("LogFileNotDefinedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log file {0} does not exist.
        /// </summary>
        public static string LogFileNotExistsErrorText {
            get {
                return ResourceManager.GetString("LogFileNotExistsErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap logo {
            get {
                object obj = ResourceManager.GetObject("logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MainLogo {
            get {
                object obj = ResourceManager.GetObject("MainLogo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MainLogo_Error {
            get {
                object obj = ResourceManager.GetObject("MainLogo_Error", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MainLogo_Security {
            get {
                object obj = ResourceManager.GetObject("MainLogo_Security", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MainLogo_Success {
            get {
                object obj = ResourceManager.GetObject("MainLogo_Success", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MainLogo_Warn {
            get {
                object obj = ResourceManager.GetObject("MainLogo_Warn", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is a mandatory upgrade available for MySQL Configurator.
        ///To continue receiving product catalog updates, you must apply this upgrade.
        ///
        ///Do you want to apply this upgrade now?.
        /// </summary>
        public static string MandatoryUpgradeAvailableConsoleText {
            get {
                return ResourceManager.GetString("MandatoryUpgradeAvailableConsoleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To continue receiving product catalog updates, you must apply this upgrade..
        /// </summary>
        public static string MandatoryUpgradeAvailableGuiDetailText {
            get {
                return ResourceManager.GetString("MandatoryUpgradeAvailableGuiDetailText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mandatory MySQL Configurator Upgrade Available.
        /// </summary>
        public static string MandatoryUpgradeAvailableGuiTitleText {
            get {
                return ResourceManager.GetString("MandatoryUpgradeAvailableGuiTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A shared memory object with the name &apos;{0}&apos; already existis..
        /// </summary>
        public static string MemoryAlreadyExists {
            get {
                return ResourceManager.GetString("MemoryAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connections will be migrated to use MySQL Workbench&apos;s connections file..
        /// </summary>
        public static string MigrateConnectionsToWorkbenchInfoDetail {
            get {
                return ResourceManager.GetString("MigrateConnectionsToWorkbenchInfoDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} now works with the connections file used by MySQL Workbench if it is installed.
        ///
        ///{0} will attempt to merge all existing connections with MySQL Workbench and in order to do this MySQLWorkbench must not be running.
        ///
        ///Please make sure MySQL Workbench is closed to continue with the merging operation.
        ///If you choose not to migrate connections now, you will be prompted later to perform the migration..
        /// </summary>
        public static string MigrateConnectionsToWorkbenchInfoMoreInfo {
            get {
                return ResourceManager.GetString("MigrateConnectionsToWorkbenchInfoMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to migrate connections now?.
        /// </summary>
        public static string MigrateConnectionsToWorkbenchInfoSubDetail {
            get {
                return ResourceManager.GetString("MigrateConnectionsToWorkbenchInfoSubDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database connections will be migrated.
        /// </summary>
        public static string MigrateConnectionsToWorkbenchInfoTitle {
            get {
                return ResourceManager.GetString("MigrateConnectionsToWorkbenchInfoTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap minus_sign {
            get {
                object obj = ResourceManager.GetObject("minus_sign", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum value for this field should be {0}.
        /// </summary>
        public static string MinValueRequired {
            get {
                return ResourceManager.GetString("MinValueRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; was not provided..
        /// </summary>
        public static string MissingParameterGenericError {
            get {
                return ResourceManager.GetString("MissingParameterGenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More information.
        /// </summary>
        public static string MoreInfoText {
            get {
                return ResourceManager.GetString("MoreInfoText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## MySQL Server Instance Configuration File Template
        ///## ----------------------------------------------------------------------
        ///## Version 1.0.10
        ///##
        ///## &lt;-- Indicates Template comment.  These lines will not be in the output
        ///##
        ///## Replaceable things must be like:
        ///## 
        ///## # [VARIABLE_NAME]=&quot;Formula&quot;
        ///## parameter=default value
        ///##
        ///##  For example:
        ///##
        ///##  # [PORT]=&quot;port&quot;
        ///##  port=3306
        ///##
        ///## Note - In the example, the formula consists of a variable named &apos;port&apos; which must be defined before processing [rest of string was truncated]&quot;;.
        /// </summary>
        public static string my_template_5_6 {
            get {
                return ResourceManager.GetString("my_template_5_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## MySQL Server Instance Configuration File Template
        ///## ----------------------------------------------------------------------
        ///## Version 1.0.10
        ///##
        ///## &lt;-- Indicates Template comment.  These lines will not be in the output
        ///##
        ///## Replaceable things must be like:
        ///## 
        ///## # [VARIABLE_NAME]=&quot;Formula&quot;
        ///## parameter=default value
        ///##
        ///##  For example:
        ///##
        ///##  # [PORT]=&quot;port&quot;
        ///##  port=3306
        ///##
        ///## Note - In the example, the formula consists of a variable named &apos;port&apos; which must be defined before processing [rest of string was truncated]&quot;;.
        /// </summary>
        public static string my_template_5_7 {
            get {
                return ResourceManager.GetString("my_template_5_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## MySQL Server Instance Configuration File Template
        ///## ----------------------------------------------------------------------
        ///## Version 1.0.0
        ///##
        ///## &lt;-- Indicates Template comment.  These lines will not be in the output
        ///##
        ///## Replaceable things must be like:
        ///## 
        ///## # [VARIABLE_NAME]=&quot;Formula&quot;
        ///## parameter=default value
        ///##
        ///##  For example:
        ///##
        ///##  # [PORT]=&quot;port&quot;
        ///##  port=3306
        ///##
        ///## Note - In the example, the formula consists of a variable named &apos;port&apos; which must be defined before processing. [rest of string was truncated]&quot;;.
        /// </summary>
        public static string my_template_8_0 {
            get {
                return ResourceManager.GetString("my_template_8_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## MySQL Server Instance Configuration File Template
        ///## ----------------------------------------------------------------------
        ///## Version 1.0.0
        ///##
        ///## &lt;-- Indicates Template comment.  These lines will not be in the output
        ///##
        ///## Replaceable things must be like:
        ///## 
        ///## # [VARIABLE_NAME]=&quot;Formula&quot;
        ///## parameter=default value
        ///##
        ///##  For example:
        ///##
        ///##  # [PORT]=&quot;port&quot;
        ///##  port=3306
        ///##
        ///## Note - In the example, the formula consists of a variable named &apos;port&apos; which must be defined before processing. [rest of string was truncated]&quot;;.
        /// </summary>
        public static string my_template_8_x {
            get {
                return ResourceManager.GetString("my_template_8_x", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] MySql_Data {
            get {
                object obj = ResourceManager.GetObject("MySql_Data", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon mysql_server {
            get {
                object obj = ResourceManager.GetObject("mysql_server", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon MySQLInstallerConfig_DoneIcon {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerConfig_DoneIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon MySQLInstallerConfig_ErrorIcon {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerConfig_ErrorIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon MySQLInstallerConfig_InProgress {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerConfig_InProgress", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot consist of only digits..
        /// </summary>
        public static string MySqlSchemaTableNameAllDigitsError {
            get {
                return ResourceManager.GetString("MySqlSchemaTableNameAllDigitsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot be empty or consist of only white space characters..
        /// </summary>
        public static string MySqlSchemaTableNameEmptyOrWhiteSpaceError {
            get {
                return ResourceManager.GetString("MySqlSchemaTableNameEmptyOrWhiteSpaceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot end with white space characters..
        /// </summary>
        public static string MySqlSchemaTableNameEndsWithWhiteSpaceError {
            get {
                return ResourceManager.GetString("MySqlSchemaTableNameEndsWithWhiteSpaceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot exceed the maximum allowed length of {0} characters..
        /// </summary>
        public static string MySqlSchemaTableNameExceedsMaxLengthError {
            get {
                return ResourceManager.GetString("MySqlSchemaTableNameExceedsMaxLengthError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script executed successfully..
        /// </summary>
        public static string MySqlServerInstanceInfoExecuteScriptExecutionSuccess {
            get {
                return ResourceManager.GetString("MySqlServerInstanceInfoExecuteScriptExecutionSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect to {0} at port {1}..
        /// </summary>
        public static string MySqlServerInstanceInfoExecuteScriptsCannotConnectError {
            get {
                return ResourceManager.GetString("MySqlServerInstanceInfoExecuteScriptsCannotConnectError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following error ocurred attempting to execute script:{1}{0}{1}.
        /// </summary>
        public static string MySqlServerInstanceInfoExecuteScriptsExecutionError {
            get {
                return ResourceManager.GetString("MySqlServerInstanceInfoExecuteScriptsExecutionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing script:.
        /// </summary>
        public static string MySqlServerInstanceInfoExecutingScript {
            get {
                return ResourceManager.GetString("MySqlServerInstanceInfoExecutingScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The host name or IP address is not well formed..
        /// </summary>
        public static string MySqlServerInstanceInvalidHostOrIpError {
            get {
                return ResourceManager.GetString("MySqlServerInstanceInvalidHostOrIpError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host name or IP address is required..
        /// </summary>
        public static string MySqlServerInstanceRequiredHostOrIpError {
            get {
                return ResourceManager.GetString("MySqlServerInstanceRequiredHostOrIpError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port number is outside valid range of {0} and {1}..
        /// </summary>
        public static string MySqlServerInvalidPortRange {
            get {
                return ResourceManager.GetString("MySqlServerInvalidPortRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password does not meet the minimum length requirement of 4 characters..
        /// </summary>
        public static string MySqlServerPasswordNotGoodEnough {
            get {
                return ResourceManager.GetString("MySqlServerPasswordNotGoodEnough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password is required..
        /// </summary>
        public static string MySqlServerPasswordRequired {
            get {
                return ResourceManager.GetString("MySqlServerPasswordRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified port is already in use..
        /// </summary>
        public static string MySqlServerPortInUse {
            get {
                return ResourceManager.GetString("MySqlServerPortInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value is not valid..
        /// </summary>
        public static string MySqlServerPortNumberInvalid {
            get {
                return ResourceManager.GetString("MySqlServerPortNumberInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port number is required.
        /// </summary>
        public static string MySqlServerPortNumberRequired {
            get {
                return ResourceManager.GetString("MySqlServerPortNumberRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a valid user name..
        /// </summary>
        public static string MySqlServerUsernameInvalid {
            get {
                return ResourceManager.GetString("MySqlServerUsernameInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name &quot;root&quot; is reserved and cannot be used..
        /// </summary>
        public static string MySqlServerUserNameInvalidRoot {
            get {
                return ResourceManager.GetString("MySqlServerUserNameInvalidRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name must not exceed 32 characters..
        /// </summary>
        public static string MySqlServerUsernameMaxLengthExceeded {
            get {
                return ResourceManager.GetString("MySqlServerUsernameMaxLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name is required..
        /// </summary>
        public static string MySqlServerUsernameRequired {
            get {
                return ResourceManager.GetString("MySqlServerUsernameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Next &gt;.
        /// </summary>
        public static string NextButtonDefaultText {
            get {
                return ResourceManager.GetString("NextButtonDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string NoButtonText {
            get {
                return ResourceManager.GetString("NoButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No connection was detected, local IP addresses could not be loaded..
        /// </summary>
        public static string NoNetworkConnectionNoIpAddressesLoadedText {
            get {
                return ResourceManager.GetString("NoNetworkConnectionNoIpAddressesLoadedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be used as a boolean value..
        /// </summary>
        public static string NotProperValueForBool {
            get {
                return ResourceManager.GetString("NotProperValueForBool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be used as an integer value..
        /// </summary>
        public static string NotProperValueForInt {
            get {
                return ResourceManager.GetString("NotProperValueForInt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a proper value for type {1}.
        /// </summary>
        public static string NotProperValueForType {
            get {
                return ResourceManager.GetString("NotProperValueForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be used as an unsigned integer value..
        /// </summary>
        public static string NotProperValueForUInt {
            get {
                return ResourceManager.GetString("NotProperValueForUInt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ok_sign {
            get {
                object obj = ResourceManager.GetObject("ok_sign", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string OkButtonDefaultText2 {
            get {
                return ResourceManager.GetString("OkButtonDefaultText2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old Password:.
        /// </summary>
        public static string OldPasswordLabelText {
            get {
                return ResourceManager.GetString("OldPasswordLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Windows Firewall port for network access.
        /// </summary>
        public static string OpenFirewallPort {
            get {
                return ResourceManager.GetString("OpenFirewallPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Windows Firewall ports for network access.
        /// </summary>
        public static string OpenFirewallPorts {
            get {
                return ResourceManager.GetString("OpenFirewallPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package has already been queued..
        /// </summary>
        public static string PackageAlreadyQueued {
            get {
                return ResourceManager.GetString("PackageAlreadyQueued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a {0} Login.
        /// </summary>
        public static string PasswordDialogLargeTitle {
            get {
                return ResourceManager.GetString("PasswordDialogLargeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password cannot be empty and is required..
        /// </summary>
        public static string PasswordDialogRequiredError {
            get {
                return ResourceManager.GetString("PasswordDialogRequiredError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password:.
        /// </summary>
        public static string PasswordLabelText {
            get {
                return ResourceManager.GetString("PasswordLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error resetting password..
        /// </summary>
        public static string PasswordResetErrorDetail {
            get {
                return ResourceManager.GetString("PasswordResetErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error ocurred trying to reset the password for the current user.
        ///Please select your MySQL connection again to retry..
        /// </summary>
        public static string PasswordResetErrorDetailText {
            get {
                return ResourceManager.GetString("PasswordResetErrorDetailText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password Reset Error.
        /// </summary>
        public static string PasswordResetErrorTitleText {
            get {
                return ResourceManager.GetString("PasswordResetErrorTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The passwords do not match..
        /// </summary>
        public static string PasswordsDoNotMatch {
            get {
                return ResourceManager.GetString("PasswordsDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading password&apos;s vault file..
        /// </summary>
        public static string PasswordsFileLoadError {
            get {
                return ResourceManager.GetString("PasswordsFileLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error saving password&apos;s vault file..
        /// </summary>
        public static string PasswordsFileSaveError {
            get {
                return ResourceManager.GetString("PasswordsFileSaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new password and its confirmation do not match. Please enter them again and make sure they match..
        /// </summary>
        public static string PasswordsMismatchErrorText {
            get {
                return ResourceManager.GetString("PasswordsMismatchErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected path is already being used by a pending installation or change..
        /// </summary>
        public static string PathAlreadyUsed {
            get {
                return ResourceManager.GetString("PathAlreadyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path &apos;{0}&apos; does not exist..
        /// </summary>
        public static string PathDoesNotExist {
            get {
                return ResourceManager.GetString("PathDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected path already exists..
        /// </summary>
        public static string PathExistsWarning {
            get {
                return ResourceManager.GetString("PathExistsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path contains invalid characters..
        /// </summary>
        public static string PathInvalidBadCharactersError {
            get {
                return ResourceManager.GetString("PathInvalidBadCharactersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drive does not exist..
        /// </summary>
        public static string PathInvalidDriveNotFoundError {
            get {
                return ResourceManager.GetString("PathInvalidDriveNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path cannot end with a \&quot;.\&quot;. character..
        /// </summary>
        public static string PathInvalidEndsInDotError {
            get {
                return ResourceManager.GetString("PathInvalidEndsInDotError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected path is not valid..
        /// </summary>
        public static string PathInvalidError {
            get {
                return ResourceManager.GetString("PathInvalidError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path does not conform to an absolute path starting with \&quot;&lt;drive letter&gt;:\\.\&quot;.
        /// </summary>
        public static string PathInvalidFormatError {
            get {
                return ResourceManager.GetString("PathInvalidFormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum length for a path is three characters..
        /// </summary>
        public static string PathInvalidMinimumLengthError {
            get {
                return ResourceManager.GetString("PathInvalidMinimumLengthError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path is not an absolute path..
        /// </summary>
        public static string PathInvalidNotAbsoluteError {
            get {
                return ResourceManager.GetString("PathInvalidNotAbsoluteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the drives in this machine. Check that you have the correct permissions..
        /// </summary>
        public static string PathInvalidUnableToGetDrivesError {
            get {
                return ResourceManager.GetString("PathInvalidUnableToGetDrivesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A named pipe with the name &apos;{0}&apos; already exists..
        /// </summary>
        public static string PipeAlreadyExists {
            get {
                return ResourceManager.GetString("PipeAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} name cannot contain back slashes (&apos;\&apos;)..
        /// </summary>
        public static string PipeOrSharedMemoryNameBackSlashesError {
            get {
                return ResourceManager.GetString("PipeOrSharedMemoryNameBackSlashesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entire {0} name string cannot be more than 256 characters long..
        /// </summary>
        public static string PipeOrSharedMemoryNameLengthError {
            get {
                return ResourceManager.GetString("PipeOrSharedMemoryNameLengthError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} name is required, it cannot be null, empty or contain only white spaces..
        /// </summary>
        public static string PipeOrSharedMemoryNameRequiredError {
            get {
                return ResourceManager.GetString("PipeOrSharedMemoryNameRequiredError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap plus_sign {
            get {
                object obj = ResourceManager.GetObject("plus_sign", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port {0} is not currently available..
        /// </summary>
        public static string PortNotAvailable {
            get {
                return ResourceManager.GetString("PortNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process for {0} is not running..
        /// </summary>
        public static string ProcessNotRunningText {
            get {
                return ResourceManager.GetString("ProcessNotRunningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some products, including MySQL Configurator, might not work properly until you restart your system..
        /// </summary>
        public static string RebootWarning {
            get {
                return ResourceManager.GetString("RebootWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The removal for some products has failed or was cancelled by the user.
        ///You can find more information about the failures in the &apos;Log&apos; tab..
        /// </summary>
        public static string RemoveFailed {
            get {
                return ResourceManager.GetString("RemoveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel removing products?.
        /// </summary>
        public static string RemoveProductsWizardCancelConfirmationText {
            get {
                return ResourceManager.GetString("RemoveProductsWizardCancelConfirmationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Steps.
        /// </summary>
        public static string RemoveSteps {
            get {
                return ResourceManager.GetString("RemoveSteps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration removal operation has completed..
        /// </summary>
        public static string RemoveStepsFinished {
            get {
                return ResourceManager.GetString("RemoveStepsFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration removal operation was successful.
        ///Click Finish to continue..
        /// </summary>
        public static string RemoveSuccess {
            get {
                return ResourceManager.GetString("RemoveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration removal operation was successful, however, some errors were identified that may require manual intervention. Please review the log for more details.
        ///Click Finish to continue..
        /// </summary>
        public static string RemoveSuccessWithErrors {
            get {
                return ResourceManager.GetString("RemoveSuccessWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the server configuration file..
        /// </summary>
        public static string RemovingConfigurationFileText {
            get {
                return ResourceManager.GetString("RemovingConfigurationFileText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the server data directory..
        /// </summary>
        public static string RemovingDataDirectoryText {
            get {
                return ResourceManager.GetString("RemovingDataDirectoryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the Firewall rule created for port {0}..
        /// </summary>
        public static string RemovingFirewallRuleText {
            get {
                return ResourceManager.GetString("RemovingFirewallRuleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting the existing service..
        /// </summary>
        public static string RemovingServiceText {
            get {
                return ResourceManager.GetString("RemovingServiceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the Windows service created for this server installation..
        /// </summary>
        public static string RemovingWindowsServiceText {
            get {
                return ResourceManager.GetString("RemovingWindowsServiceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to recreate the {0} file....
        /// </summary>
        public static string RepositoryFileAttemptingToRecreate {
            get {
                return ResourceManager.GetString("RepositoryFileAttemptingToRecreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load repository XML file..
        /// </summary>
        public static string RepositoryFileLoadingErrorDetail {
            get {
                return ResourceManager.GetString("RepositoryFileLoadingErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XML file could not be loaded, but it does exist. Possible causes include: the file is malformed, the file was tampered with, or the file is empty. MySQL Workbench maintains the file and can perhaps repair or recreate it.
        ///
        ///To attempt a repair of the file:
        ///
        ///1. Close this program.
        ///2. Start MySQL Workbench.
        ///3. If MySQL Workbench starts and no error occurs, close MySQL Workbench and proceed to the next step. Otherwise, use the onscreen instructions in MySQL Workbench (if any) to troubleshoot or contact [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RepositoryFileLoadingErrorMoreInfo {
            get {
                return ResourceManager.GetString("RepositoryFileLoadingErrorMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Workbench maintains the file and can perhaps repair or recreate it..
        /// </summary>
        public static string RepositoryFileMaintainedByWorkbench {
            get {
                return ResourceManager.GetString("RepositoryFileMaintainedByWorkbench", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Workbench maintains the {0} file. Start MySQL Workbench to determine if the file can be repaired or recreated..
        /// </summary>
        public static string RepositoryFileMaintainedByWorkbenchSuggestion {
            get {
                return ResourceManager.GetString("RepositoryFileMaintainedByWorkbenchSuggestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load the {0} file. The file may be empty or malformed..
        /// </summary>
        public static string RepositoryFileMaybeEmptyOrMalformed {
            get {
                return ResourceManager.GetString("RepositoryFileMaybeEmptyOrMalformed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository XML file could not be loaded and it may be corrupt..
        /// </summary>
        public static string RepositoryFileRecreateDetail {
            get {
                return ResourceManager.GetString("RepositoryFileRecreateDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully recreated the {0} file, proceeding to reload it..
        /// </summary>
        public static string RepositoryFileRecreatedNowReloading {
            get {
                return ResourceManager.GetString("RepositoryFileRecreatedNowReloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to recreate the XML file from scratch?.
        /// </summary>
        public static string RepositoryFileRecreateSubDetail {
            get {
                return ResourceManager.GetString("RepositoryFileRecreateSubDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recreate file.
        /// </summary>
        public static string RepositoryFileRecreateTitle {
            get {
                return ResourceManager.GetString("RepositoryFileRecreateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to recreate repository XML file..
        /// </summary>
        public static string RepositoryFileRecreatingErrorDetail {
            get {
                return ResourceManager.GetString("RepositoryFileRecreatingErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can retry the loading of the XML file (up to {0} time{1}).
        ///If you choose not to retry or the number of retries hits the limit, you will be given the option to attempt to re-create the XML file from scratch, since it may be corrupt.
        ///
        ///Error message:
        ///{2}.
        /// </summary>
        public static string RepositoryFileRetryMoreInfo {
            get {
                return ResourceManager.GetString("RepositoryFileRetryMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to retry loading the file?.
        /// </summary>
        public static string RepositoryFileRetrySubDetail {
            get {
                return ResourceManager.GetString("RepositoryFileRetrySubDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry?.
        /// </summary>
        public static string RepositoryFileRetryTitle {
            get {
                return ResourceManager.GetString("RepositoryFileRetryTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to save repository XML file..
        /// </summary>
        public static string RepositoryFileSavingErrorDetail {
            get {
                return ResourceManager.GetString("RepositoryFileSavingErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Revert {
            get {
                object obj = ResourceManager.GetObject("Revert", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All rights just the same as the root user..
        /// </summary>
        public static string RootRoleDescription {
            get {
                return ResourceManager.GetString("RootRoleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Port and the X Protocol Port cannot be the same..
        /// </summary>
        public static string SameCSPortXPort {
            get {
                return ResourceManager.GetString("SameCSPortXPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saved {0} configuration file..
        /// </summary>
        public static string SavedConfigurationFile {
            get {
                return ResourceManager.GetString("SavedConfigurationFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving {0} configuration file....
        /// </summary>
        public static string SavingConfigurationFile {
            get {
                return ResourceManager.GetString("SavingConfigurationFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap server_machine {
            get {
                object obj = ResourceManager.GetObject("server_machine", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Server_Reflection {
            get {
                object obj = ResourceManager.GetObject("Server_Reflection", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjusting process.
        /// </summary>
        public static string ServerAdjustProcessStep {
            get {
                return ResourceManager.GetString("ServerAdjustProcessStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjusting Windows service.
        /// </summary>
        public static string ServerAdjustServiceStep {
            get {
                return ResourceManager.GetString("ServerAdjustServiceStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying security settings.
        /// </summary>
        public static string ServerApplySecurityStep {
            get {
                return ResourceManager.GetString("ServerApplySecurityStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ServerCategoryIcon {
            get {
                object obj = ResourceManager.GetObject("ServerCategoryIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No account name was provided..
        /// </summary>
        public static string ServerConfigAccountNameMissing {
            get {
                return ResourceManager.GetString("ServerConfigAccountNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add a duplicate user..
        /// </summary>
        public static string ServerConfigAddedDuplicateUser {
            get {
                return ResourceManager.GetString("ServerConfigAddedDuplicateUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user root@{0} already exists and may not be added again..
        /// </summary>
        public static string ServerConfigAddedExistingRootUserText {
            get {
                return ResourceManager.GetString("ServerConfigAddedExistingRootUserText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add root@{0} as a new user..
        /// </summary>
        public static string ServerConfigAddedExistingRootUserTitle {
            get {
                return ResourceManager.GetString("ServerConfigAddedExistingRootUserTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding new service.
        /// </summary>
        public static string ServerConfigAddingService {
            get {
                return ResourceManager.GetString("ServerConfigAddingService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to create the directory for the backup data file..
        /// </summary>
        public static string ServerConfigBackupDatabaseBackupDirectoryError {
            get {
                return ResourceManager.GetString("ServerConfigBackupDatabaseBackupDirectoryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running mysqldump tool to backup the database....
        /// </summary>
        public static string ServerConfigBackupDatabaseDumpRunning {
            get {
                return ResourceManager.GetString("ServerConfigBackupDatabaseDumpRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished backing up database with mysqldump tool..
        /// </summary>
        public static string ServerConfigBackupDatabaseDumpRunSuccess {
            get {
                return ResourceManager.GetString("ServerConfigBackupDatabaseDumpRunSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to start MySQL Server in order to run the mysqldump tool..
        /// </summary>
        public static string ServerConfigBackupDatabaseServerStartError {
            get {
                return ResourceManager.GetString("ServerConfigBackupDatabaseServerStartError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backing up MySQL database.
        /// </summary>
        public static string ServerConfigBackupDatabaseStep {
            get {
                return ResourceManager.GetString("ServerConfigBackupDatabaseStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set the correct permissions to access the log files..
        /// </summary>
        public static string ServerConfigCheckAccessToLogsFailed {
            get {
                return ResourceManager.GetString("ServerConfigCheckAccessToLogsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking access to the server logs....
        /// </summary>
        public static string ServerConfigCheckingAccessToLogs {
            get {
                return ResourceManager.GetString("ServerConfigCheckingAccessToLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to convert inherited permissions to explicit permissions..
        /// </summary>
        public static string ServerConfigConvertToExplicitPermissionsFailed {
            get {
                return ResourceManager.GetString("ServerConfigConvertToExplicitPermissionsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inherited permissions have been converted to explicit permissions..
        /// </summary>
        public static string ServerConfigConvertToExplicitPermissionsSuccess {
            get {
                return ResourceManager.GetString("ServerConfigConvertToExplicitPermissionsSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to convert rule &apos;{0}&apos; into an NT account..
        /// </summary>
        public static string ServerConfigConvertToNTAccountFailed {
            get {
                return ResourceManager.GetString("ServerConfigConvertToNTAccountFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to obtain SID for the &apos;{0}&apos; NT account..
        /// </summary>
        public static string ServerConfigCouldNotObtainSid {
            get {
                return ResourceManager.GetString("ServerConfigCouldNotObtainSid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a temporary user account for connecting with new authentication plugin during the step that updates security settings that runs later on (to avoid updating the root user account at this early stage where intermediate configuration steps might fail)....
        /// </summary>
        public static string ServerConfigCreatingTemporaryUser {
            get {
                return ResourceManager.GetString("ServerConfigCreatingTemporaryUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to create the temporary user account..
        /// </summary>
        public static string ServerConfigCreatingTemporaryUserError {
            get {
                return ResourceManager.GetString("ServerConfigCreatingTemporaryUserError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created temporary {0} user account to use for updating security settings in a later step..
        /// </summary>
        public static string ServerConfigCreatingTemporaryUserSuccess {
            get {
                return ResourceManager.GetString("ServerConfigCreatingTemporaryUserSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect user name or password..
        /// </summary>
        public static string ServerConfigCustomUserInvalidCredentials {
            get {
                return ResourceManager.GetString("ServerConfigCustomUserInvalidCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user doesn&apos;t have sufficent file permissions to the data directory..
        /// </summary>
        public static string ServerConfigCustomUserInvalidPermissions {
            get {
                return ResourceManager.GetString("ServerConfigCustomUserInvalidPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user doesn&apos;t have the &quot;Log on as a service&quot; permission, you need to assign this using the &quot;Local Security Policy&quot; tool under the options &quot;Local Policies&quot; and &quot;User Rights Assignment&quot;..
        /// </summary>
        public static string ServerConfigCustomUserInvalidRights {
            get {
                return ResourceManager.GetString("ServerConfigCustomUserInvalidRights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown error occured while validating the service account. Consider choosing a different service account user type. Please examine the logs for more information..
        /// </summary>
        public static string ServerConfigCustomUserUnknowError {
            get {
                return ResourceManager.GetString("ServerConfigCustomUserUnknowError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data directory does not exist..
        /// </summary>
        public static string ServerConfigDataDirectoryDoesNotExist {
            get {
                return ResourceManager.GetString("ServerConfigDataDirectoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting existing service....
        /// </summary>
        public static string ServerConfigDeletingExistingService {
            get {
                return ResourceManager.GetString("ServerConfigDeletingExistingService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting temporary user account {0}....
        /// </summary>
        public static string ServerConfigDeletingTemporaryUser {
            get {
                return ResourceManager.GetString("ServerConfigDeletingTemporaryUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to delete the temporary user account..
        /// </summary>
        public static string ServerConfigDeletingTemporaryUserError {
            get {
                return ResourceManager.GetString("ServerConfigDeletingTemporaryUserError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleted temporary user account {0} successfully....
        /// </summary>
        public static string ServerConfigDeletingTemporaryUserSuccess {
            get {
                return ResourceManager.GetString("ServerConfigDeletingTemporaryUserSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected Duplicate.
        /// </summary>
        public static string ServerConfigDuplicateTitle {
            get {
                return ResourceManager.GetString("ServerConfigDuplicateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This edit would create a duplicate user.
        /// </summary>
        public static string ServerConfigEditedDuplicateUser {
            get {
                return ResourceManager.GetString("ServerConfigEditedDuplicateUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty or blank passwords are considered insecure.
        ///Provide a more complex password for stronger security..
        /// </summary>
        public static string ServerConfigEmptyOrBlankPasswordWarning {
            get {
                return ResourceManager.GetString("ServerConfigEmptyOrBlankPasswordWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No security tokens were provided..
        /// </summary>
        public static string ServerConfigEmptySecurityTokens {
            get {
                return ResourceManager.GetString("ServerConfigEmptySecurityTokens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Enterprise Firewall is not currently supported when setting up InnoDB Cluster..
        /// </summary>
        public static string ServerConfigEnterpriseFirewallNotSupportedWithInnoDbCluster {
            get {
                return ResourceManager.GetString("ServerConfigEnterpriseFirewallNotSupportedWithInnoDbCluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred trying to add new users to the MySQL database (see log)..
        /// </summary>
        public static string ServerConfigEventAddNewUsersError {
            get {
                return ResourceManager.GetString("ServerConfigEventAddNewUsersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to Add New MySQL Users.
        /// </summary>
        public static string ServerConfigEventAddNewUsersInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventAddNewUsersInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added new users to the MySQL database successfully..
        /// </summary>
        public static string ServerConfigEventAddNewUsersSuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventAddNewUsersSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to configure MySQL Enterprise Firewall.  The error is:.
        /// </summary>
        public static string ServerConfigEventConfigureEnterpriseFirewallError {
            get {
                return ResourceManager.GetString("ServerConfigEventConfigureEnterpriseFirewallError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to configure MySQL Enterprise Firewall.
        /// </summary>
        public static string ServerConfigEventConfigureEnterpriseFirewallInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventConfigureEnterpriseFirewallInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured MySQL Enterprise Firewall.
        /// </summary>
        public static string ServerConfigEventConfigureEnterpriseFirewallSuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventConfigureEnterpriseFirewallSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add the Windows Firewall rule..
        /// </summary>
        public static string ServerConfigEventFirewallSettingFailed {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding a Windows Firewall rule for {0} on port {1}..
        /// </summary>
        public static string ServerConfigEventFirewallSettingInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to {0} a Windows Firewall rule with command: netsh.exe {1}.
        /// </summary>
        public static string ServerConfigEventFirewallSettingNetshCmd {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingNetshCmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred running netsh.exe {0}:.
        /// </summary>
        public static string ServerConfigEventFirewallSettingNetshCmdResults {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingNetshCmdResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The netsh.exe process did not return any error. Review the application log to see if there is a trace of the error..
        /// </summary>
        public static string ServerConfigEventFirewallSettingNetshCmdUnknownError {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingNetshCmdUnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attempt to {0} a Windows Firewall rule failed..
        /// </summary>
        public static string ServerConfigEventFirewallSettingsTip {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingsTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully added the Windows Firewall rule..
        /// </summary>
        public static string ServerConfigEventFirewallSettingSucceeded {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to update security settings. {0}.
        /// </summary>
        public static string ServerConfigEventSecuritySettingsError {
            get {
                return ResourceManager.GetString("ServerConfigEventSecuritySettingsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to update security settings..
        /// </summary>
        public static string ServerConfigEventSecuritySettingsInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventSecuritySettingsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated security settings..
        /// </summary>
        public static string ServerConfigEventSecuritySettingsSuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventSecuritySettingsSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update permissions for the data folder and related server files..
        /// </summary>
        public static string ServerConfigEventServerSecurityFailed {
            get {
                return ResourceManager.GetString("ServerConfigEventServerSecurityFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to update the permissions for the data folder and related server files....
        /// </summary>
        public static string ServerConfigEventServerSecurityInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventServerSecurityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Permissions for the data folder and related server files are updated correctly..
        /// </summary>
        public static string ServerConfigEventServerSecuritySuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventServerSecuritySuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to verify command-line client shortcut..
        /// </summary>
        public static string ServerConfigEventShortcutError {
            get {
                return ResourceManager.GetString("ServerConfigEventShortcutError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to verify command-line client shortcut..
        /// </summary>
        public static string ServerConfigEventShortcutInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventShortcutInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verified command-line client shortcut..
        /// </summary>
        public static string ServerConfigEventShortcutSucceeded {
            get {
                return ResourceManager.GetString("ServerConfigEventShortcutSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start service {0}..
        /// </summary>
        public static string ServerConfigEventStartServiceError {
            get {
                return ResourceManager.GetString("ServerConfigEventStartServiceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to start service {0}....
        /// </summary>
        public static string ServerConfigEventStartServiceInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventStartServiceInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully started service {0}..
        /// </summary>
        public static string ServerConfigEventStartServiceSuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventStartServiceSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get the authorization rules for: {0}..
        /// </summary>
        public static string ServerConfigFailedToGetAuthorizationRules {
            get {
                return ResourceManager.GetString("ServerConfigFailedToGetAuthorizationRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error when attempting to retrieve the local {0}..
        /// </summary>
        public static string ServerConfigFailedToRetrieveLocalPrincipals {
            get {
                return ResourceManager.GetString("ServerConfigFailedToRetrieveLocalPrincipals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the value of the super_read_only variable..
        /// </summary>
        public static string ServerConfigGetSuperReadOnlyVariableValueFailed {
            get {
                return ResourceManager.GetString("ServerConfigGetSuperReadOnlyVariableValueFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to grant full control permissions to: {0}..
        /// </summary>
        public static string ServerConfigGrantedFullControlFailed {
            get {
                return ResourceManager.GetString("ServerConfigGrantedFullControlFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full control permissions granted to: {0}..
        /// </summary>
        public static string ServerConfigGrantedFullControlSuccess {
            get {
                return ResourceManager.GetString("ServerConfigGrantedFullControlSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Granted permissions to the data directory..
        /// </summary>
        public static string ServerConfigGrantedPermissionsToDataDirectory {
            get {
                return ResourceManager.GetString("ServerConfigGrantedPermissionsToDataDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Granted permissions to access the &apos;{0}&apos; log file..
        /// </summary>
        public static string ServerConfigGrantedPermissionsToLogFile {
            get {
                return ResourceManager.GetString("ServerConfigGrantedPermissionsToLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to grant the required filesystem permissions to the &apos;{0}&apos; account..
        /// </summary>
        public static string ServerConfigGrantingPermissionsToAccount {
            get {
                return ResourceManager.GetString("ServerConfigGrantingPermissionsToAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found existing data directory, no need to initialize the database..
        /// </summary>
        public static string ServerConfigInitializeDatabaseDataDirExistsText {
            get {
                return ResourceManager.GetString("ServerConfigInitializeDatabaseDataDirExistsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting the data directory from a previous (failed) configuration....
        /// </summary>
        public static string ServerConfigInitializeDatabaseDeletingDataDirText {
            get {
                return ResourceManager.GetString("ServerConfigInitializeDatabaseDeletingDataDirText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database initialization failed..
        /// </summary>
        public static string ServerConfigInitializeDatabaseFailedText {
            get {
                return ResourceManager.GetString("ServerConfigInitializeDatabaseFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initialize is only compatible for MySQL Server 5.7.7 or higher, no need to initialize the database for this version ({0})..
        /// </summary>
        public static string ServerConfigInitializeDatabaseIncompatibleVersionText {
            get {
                return ResourceManager.GetString("ServerConfigInitializeDatabaseIncompatibleVersionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to run MySQL Server with --initialize-insecure option....
        /// </summary>
        public static string ServerConfigInitializeDatabaseRunningInitializeInsecureText {
            get {
                return ResourceManager.GetString("ServerConfigInitializeDatabaseRunningInitializeInsecureText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} intialized the database successfully..
        /// </summary>
        public static string ServerConfigInitializeDatabaseSuccessText {
            get {
                return ResourceManager.GetString("ServerConfigInitializeDatabaseSuccessText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MySQL server instance is currently running. Cannot proceed with the operation..
        /// </summary>
        public static string ServerConfigInstanceRunning {
            get {
                return ResourceManager.GetString("ServerConfigInstanceRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more of the given security tokens is not valid. Please verify the list entered:.
        /// </summary>
        public static string ServerConfigInvalidWindowsSecurityTokens {
            get {
                return ResourceManager.GetString("ServerConfigInvalidWindowsSecurityTokens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected local group no longer exists. Please refresh the list\n and select an existing local group..
        /// </summary>
        public static string ServerConfigLocalGroupDoesNotExist {
            get {
                return ResourceManager.GetString("ServerConfigLocalGroupDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No log path was provided..
        /// </summary>
        public static string ServerConfigLogPathMissing {
            get {
                return ResourceManager.GetString("ServerConfigLogPathMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Table names are stored in lowercase on disk and name comparisons are not case-sensitive. MySQL converts all table names to lowercase on storage and lookup..
        /// </summary>
        public static string ServerConfigLowerCaseTableNamesSupported {
            get {
                return ResourceManager.GetString("ServerConfigLowerCaseTableNamesSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature is disabled because the required resources are missing..
        /// </summary>
        public static string ServerConfigMissingResources {
            get {
                return ResourceManager.GetString("ServerConfigMissingResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running mysql_upgrade tool failed.  Please examine the log file for more details..
        /// </summary>
        public static string ServerConfigMySqlUpgradeRunError {
            get {
                return ResourceManager.GetString("ServerConfigMySqlUpgradeRunError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running mysql_upgrade tool....
        /// </summary>
        public static string ServerConfigMySqlUpgradeRunning {
            get {
                return ResourceManager.GetString("ServerConfigMySqlUpgradeRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished running mysql_upgrade tool..
        /// </summary>
        public static string ServerConfigMySqlUpgradeRunSuccess {
            get {
                return ResourceManager.GetString("ServerConfigMySqlUpgradeRunSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to start MySQL Server in order to run the mysql_upgrade tool..
        /// </summary>
        public static string ServerConfigMySqlUpgradeServerStartError {
            get {
                return ResourceManager.GetString("ServerConfigMySqlUpgradeServerStartError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutting down MySQL Server so that any changes made to the system tables take effect in the next start..
        /// </summary>
        public static string ServerConfigMySqlUpgradeShutdownServer {
            get {
                return ResourceManager.GetString("ServerConfigMySqlUpgradeShutdownServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting MySQL Server in order to run the mysql_upgrade tool..
        /// </summary>
        public static string ServerConfigMySqlUpgradeStartServer {
            get {
                return ResourceManager.GetString("ServerConfigMySqlUpgradeStartServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No name was assigned to the rule..
        /// </summary>
        public static string ServerConfigNameMissingForRule {
            get {
                return ResourceManager.GetString("ServerConfigNameMissingForRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a directory to obtain the base permissions from..
        /// </summary>
        public static string ServerConfigNoValidBaseDirectoryFound {
            get {
                return ResourceManager.GetString("ServerConfigNoValidBaseDirectoryFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value was not assigned to the data directory..
        /// </summary>
        public static string ServerConfigNoValueAssignedToDataDirectory {
            get {
                return ResourceManager.GetString("ServerConfigNoValueAssignedToDataDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided list view item has not been initialized..
        /// </summary>
        public static string ServerConfigNullListView {
            get {
                return ResourceManager.GetString("ServerConfigNullListView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified port is already in use..
        /// </summary>
        public static string ServerConfigPortInUse {
            get {
                return ResourceManager.GetString("ServerConfigPortInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Table and database names are stored on disk using the letter case specified in the CREATE TABLE or CREATE DATABASE statement, but MySQL converts them to lowercase on lookup..
        /// </summary>
        public static string ServerConfigPreserveGivenCaseSupported {
            get {
                return ResourceManager.GetString("ServerConfigPreserveGivenCaseSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully started process for {0}..
        /// </summary>
        public static string ServerConfigProcessStartedSuccessfullyText {
            get {
                return ResourceManager.GetString("ServerConfigProcessStartedSuccessfullyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start process for {0}..
        /// </summary>
        public static string ServerConfigProcessStartFailedText {
            get {
                return ResourceManager.GetString("ServerConfigProcessStartFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting process for {0}....
        /// </summary>
        public static string ServerConfigProcessStartingText {
            get {
                return ResourceManager.GetString("ServerConfigProcessStartingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to remove access to the data directory for the {0} {1}..
        /// </summary>
        public static string ServerConfigRemovedAccessFailed {
            get {
                return ResourceManager.GetString("ServerConfigRemovedAccessFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to the data directory is removed for the {0} {1}..
        /// </summary>
        public static string ServerConfigRemovedAccessSuccess {
            get {
                return ResourceManager.GetString("ServerConfigRemovedAccessSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating the server ID is not supported during InnoDB Cluster reconfiguration..
        /// </summary>
        public static string ServerConfigServerIdDuringInnoDbClusterReconfigurationNotSupported {
            get {
                return ResourceManager.GetString("ServerConfigServerIdDuringInnoDbClusterReconfigurationNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported..
        /// </summary>
        public static string ServerConfigServerIdDuringInnoDbClusterReconfigurationSupported {
            get {
                return ResourceManager.GetString("ServerConfigServerIdDuringInnoDbClusterReconfigurationSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please type an empty, 0 or positive value..
        /// </summary>
        public static string ServerConfigServerIdError {
            get {
                return ResourceManager.GetString("ServerConfigServerIdError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New service added.
        /// </summary>
        public static string ServerConfigServiceAdded {
            get {
                return ResourceManager.GetString("ServerConfigServiceAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing service updated.
        /// </summary>
        public static string ServerConfigServiceUpdated {
            get {
                return ResourceManager.GetString("ServerConfigServiceUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set the instance as writable. Retrying the configuration is recommended. If the retry attempt continues to fail, set the super_read_only variable to OFF explicitly before retrying..
        /// </summary>
        public static string ServerConfigSetInstanceAsWritableFail {
            get {
                return ResourceManager.GetString("ServerConfigSetInstanceAsWritableFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The instance is already configured as writable. No action needed..
        /// </summary>
        public static string ServerConfigSetInstanceAsWritableNotRequired {
            get {
                return ResourceManager.GetString("ServerConfigSetInstanceAsWritableNotRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The instance has been configured to be writable..
        /// </summary>
        public static string ServerConfigSetInstanceAsWritableSuccess {
            get {
                return ResourceManager.GetString("ServerConfigSetInstanceAsWritableSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the SID for the &apos;{0}&apos; principal..
        /// </summary>
        public static string ServerConfigSidRetrievalFailure {
            get {
                return ResourceManager.GetString("ServerConfigSidRetrievalFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL failed to start because of the following error(s):.
        /// </summary>
        public static string ServerConfigStartServerFailedWithErrors {
            get {
                return ResourceManager.GetString("ServerConfigStartServerFailedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL failed to start due to an unknown cause. Review the logs and the validity of the values in the options file for more details..
        /// </summary>
        public static string ServerConfigStartServerFailedWIthUnknownError {
            get {
                return ResourceManager.GetString("ServerConfigStartServerFailedWIthUnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade of system tables did not complete successfully. Check for errors in the log..
        /// </summary>
        public static string ServerConfigStartUpgradeFailed {
            get {
                return ResourceManager.GetString("ServerConfigStartUpgradeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server did not start successfully. Check for errors in the log..
        /// </summary>
        public static string ServerConfigStartUpgradeNotAcceptingConnections {
            get {
                return ResourceManager.GetString("ServerConfigStartUpgradeNotAcceptingConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is suggested to specify a Server ID if binary logging is enabled..
        /// </summary>
        public static string ServerConfigSuggestServerId {
            get {
                return ResourceManager.GetString("ServerConfigSuggestServerId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating the Table Names Case is not supported during reconfigurations or for server versions lower than 8.0..
        /// </summary>
        public static string ServerConfigTableNamesNotSupported {
            get {
                return ResourceManager.GetString("ServerConfigTableNamesNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unspecified error.
        /// </summary>
        public static string ServerConfigUnspecifiedError {
            get {
                return ResourceManager.GetString("ServerConfigUnspecifiedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating existing service....
        /// </summary>
        public static string ServerConfigUpdatingExistingService {
            get {
                return ResourceManager.GetString("ServerConfigUpdatingExistingService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to access the Active Directory of the domain. Confirm that.
        /// </summary>
        public static string ServerConfigUserFriendlyUnspecifiedError {
            get {
                return ResourceManager.GetString("ServerConfigUserFriendlyUnspecifiedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to {0} after {1} attempts..
        /// </summary>
        public static string ServerConfigWaitingForSuccesfulConnectionFailedText {
            get {
                return ResourceManager.GetString("ServerConfigWaitingForSuccesfulConnectionFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry {0}: Attempting to connect to {1} with user {2} with {3} password....
        /// </summary>
        public static string ServerConfigWaitingForSuccesfulConnectionRetryText {
            get {
                return ResourceManager.GetString("ServerConfigWaitingForSuccesfulConnectionRetryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting {0} seconds before the next connection attempt....
        /// </summary>
        public static string ServerConfigWaitingForSuccesfulConnectionRetryWaitText {
            get {
                return ResourceManager.GetString("ServerConfigWaitingForSuccesfulConnectionRetryWaitText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully connected to {0}..
        /// </summary>
        public static string ServerConfigWaitingForSuccesfulConnectionSuccessText {
            get {
                return ResourceManager.GetString("ServerConfigWaitingForSuccesfulConnectionSuccessText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting until a connection to {0} can be established (with a maximum of {1} attempts)....
        /// </summary>
        public static string ServerConfigWaitingForSuccesfulConnectionText {
            get {
                return ResourceManager.GetString("ServerConfigWaitingForSuccesfulConnectionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user or group name could not be found..
        /// </summary>
        public static string ServerConfigWindowsUserOrGroupNotFound {
            get {
                return ResourceManager.GetString("ServerConfigWindowsUserOrGroupNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating user accounts.
        /// </summary>
        public static string ServerCreateUsersStep {
            get {
                return ResourceManager.GetString("ServerCreateUsersStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the server configuration file.
        /// </summary>
        public static string ServerDeleteConfigurationFileStep {
            get {
                return ResourceManager.GetString("ServerDeleteConfigurationFileStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the data directory.
        /// </summary>
        public static string ServerDeleteDataDirectoryStep {
            get {
                return ResourceManager.GetString("ServerDeleteDataDirectoryStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the MySQL Windows service.
        /// </summary>
        public static string ServerDeleteServiceStep {
            get {
                return ResourceManager.GetString("ServerDeleteServiceStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating MySQL Enterprise Firewall plugin.
        /// </summary>
        public static string ServerEnableEnterpriseFirewallStep {
            get {
                return ResourceManager.GetString("ServerEnableEnterpriseFirewallStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing database (may take a long time).
        /// </summary>
        public static string ServerInitializeDatabaseStep {
            get {
                return ResourceManager.GetString("ServerInitializeDatabaseStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when trying to retrieve the group replication member role:.
        /// </summary>
        public static string ServerInstanceGetGroupReplicationMemberRoleError {
            get {
                return ResourceManager.GetString("ServerInstanceGetGroupReplicationMemberRoleError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following error occurred when trying to retrieve the server ID:.
        /// </summary>
        public static string ServerInstanceGetServerIdError {
            get {
                return ResourceManager.GetString("ServerInstanceGetServerIdError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following error occurred when trying to retrieve the server version number:.
        /// </summary>
        public static string ServerInstanceGetServerVersionError {
            get {
                return ResourceManager.GetString("ServerInstanceGetServerVersionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the value of {0}..
        /// </summary>
        public static string ServerInstanceGetVariableFail {
            get {
                return ResourceManager.GetString("ServerInstanceGetVariableFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to reset the persistence of variable {0}..
        /// </summary>
        public static string ServerInstanceResetPersistenceFail {
            get {
                return ResourceManager.GetString("ServerInstanceResetPersistenceFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set the variable {0}..
        /// </summary>
        public static string ServerInstanceSetVariableFail {
            get {
                return ResourceManager.GetString("ServerInstanceSetVariableFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Server instance is still running. Retrying count {0}....
        /// </summary>
        public static string ServerInstanceStillRunningRetryText {
            get {
                return ResourceManager.GetString("ServerInstanceStillRunningRetryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL service stopped successfully....
        /// </summary>
        public static string ServerInstanceStoppedWindowsServiceText {
            get {
                return ResourceManager.GetString("ServerInstanceStoppedWindowsServiceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found Windows service for the server instance. Stopping MySQL service....
        /// </summary>
        public static string ServerInstanceStoppingWindowsServiceText {
            get {
                return ResourceManager.GetString("ServerInstanceStoppingWindowsServiceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preparing authentication plugin change.
        /// </summary>
        public static string ServerPrepareAuthenticationPluginChangeStep {
            get {
                return ResourceManager.GetString("ServerPrepareAuthenticationPluginChangeStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check and Upgrade Database.
        /// </summary>
        public static string ServerReconfigCheckAndUpgradeDatabase {
            get {
                return ResourceManager.GetString("ServerReconfigCheckAndUpgradeDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing Windows Firewall rules.
        /// </summary>
        public static string ServerRemoveFirewallRulesStep {
            get {
                return ResourceManager.GetString("ServerRemoveFirewallRulesStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing InnoDB Cluster Setup.
        /// </summary>
        public static string ServerRemovePageReconfigurationTitle {
            get {
                return ResourceManager.GetString("ServerRemovePageReconfigurationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Data.
        /// </summary>
        public static string ServerRemovePageRemoveTitle {
            get {
                return ResourceManager.GetString("ServerRemovePageRemoveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No service exists for this server installation..
        /// </summary>
        public static string ServerServiceNotFoundText {
            get {
                return ResourceManager.GetString("ServerServiceNotFoundText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing mysqladmin shutdown to do a clean shutdown..
        /// </summary>
        public static string ServerShutdownMySqlAdminShutDown {
            get {
                return ResourceManager.GetString("ServerShutdownMySqlAdminShutDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error trying to perform a clean shutdown..
        /// </summary>
        public static string ServerShutdownMySqlAdminShutDownError {
            get {
                return ResourceManager.GetString("ServerShutdownMySqlAdminShutDownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully performed a clean shutdown..
        /// </summary>
        public static string ServerShutdownMySqlAdminShutDownSuccess {
            get {
                return ResourceManager.GetString("ServerShutdownMySqlAdminShutDownSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting innodb_fast_shutdown to do a clean shutdown (a full purge and a change buffer merge before shutting down)..
        /// </summary>
        public static string ServerShutdownSettingInnoDbFastShutdown {
            get {
                return ResourceManager.GetString("ServerShutdownSettingInnoDbFastShutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error trying to set innodb_fast_shutdown to do a clean shutdown..
        /// </summary>
        public static string ServerShutdownSettingInnoDbFastShutdownError {
            get {
                return ResourceManager.GetString("ServerShutdownSettingInnoDbFastShutdownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully set innodb_fast_shutdown to do a clean shutdown..
        /// </summary>
        public static string ServerShutdownSettingInnoDbFastShutdownSuccess {
            get {
                return ResourceManager.GetString("ServerShutdownSettingInnoDbFastShutdownSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the server and upgrading system tables (may take a long time).
        /// </summary>
        public static string ServerStartAndUpgradeProcessStep {
            get {
                return ResourceManager.GetString("ServerStartAndUpgradeProcessStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: The system tables upgrade was skipped after upgrading MySQL Server. The server will be started now with the --upgrade=MINIMAL option, but then each time the server is started it will attempt to upgrade the system tables, unless you modify the {0} to add --upgrade=MINIMAL to bypass the upgrade..
        /// </summary>
        public static string ServerStartingWithMinimalUpgradeWarning {
            get {
                return ResourceManager.GetString("ServerStartingWithMinimalUpgradeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the server while skipping system tables upgrade (not recommended).
        /// </summary>
        public static string ServerStartMinimalUpgradeStep {
            get {
                return ResourceManager.GetString("ServerStartMinimalUpgradeStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the server.
        /// </summary>
        public static string ServerStartProcessStep {
            get {
                return ResourceManager.GetString("ServerStartProcessStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping the server.
        /// </summary>
        public static string ServerStopProcessStep {
            get {
                return ResourceManager.GetString("ServerStopProcessStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating permissions for the data folder and related server files.
        /// </summary>
        public static string ServerUpdateServerFilePermissions {
            get {
                return ResourceManager.GetString("ServerUpdateServerFilePermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data folder and related server files have already been updated..
        /// </summary>
        public static string ServerUpdateServerFilePermissionsNotNeeded {
            get {
                return ResourceManager.GetString("ServerUpdateServerFilePermissionsNotNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating the Start menu link.
        /// </summary>
        public static string ServerUpdateStartMenuLinkStep {
            get {
                return ResourceManager.GetString("ServerUpdateStartMenuLinkStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating Windows Firewall rules.
        /// </summary>
        public static string ServerUpdateWindowsFirewallStep {
            get {
                return ResourceManager.GetString("ServerUpdateWindowsFirewallStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking and upgrading system tables (may take a long time).
        /// </summary>
        public static string ServerUpgradeStep {
            get {
                return ResourceManager.GetString("ServerUpgradeStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A default anonymous user account exists that takes precedence over any user account created with a &apos;%&apos; host wildcard..
        /// </summary>
        public static string ServerUserAnonymousAccountWithAllHostsWarning {
            get {
                return ResourceManager.GetString("ServerUserAnonymousAccountWithAllHostsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid server authentication type: .
        /// </summary>
        public static string ServerUserInvalidAuthenticationType {
            get {
                return ResourceManager.GetString("ServerUserInvalidAuthenticationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown value given for user block: .
        /// </summary>
        public static string ServerUserInvalidUserBlock {
            get {
                return ResourceManager.GetString("ServerUserInvalidUserBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An authentication plugin must be specified for new users..
        /// </summary>
        public static string ServerUserMissingAuthenticationPlugin {
            get {
                return ResourceManager.GetString("ServerUserMissingAuthenticationPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name must be given for new users..
        /// </summary>
        public static string ServerUserMissingUserName {
            get {
                return ResourceManager.GetString("ServerUserMissingUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A role must be specified for each new user added..
        /// </summary>
        public static string ServerUserMissingUserRole {
            get {
                return ResourceManager.GetString("ServerUserMissingUserRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows authorization requires a token list..
        /// </summary>
        public static string ServerUserMissingWindowsTokensList {
            get {
                return ResourceManager.GetString("ServerUserMissingWindowsTokensList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find role: .
        /// </summary>
        public static string ServerUserRoleNotFound {
            get {
                return ResourceManager.GetString("ServerUserRoleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing configuration file.
        /// </summary>
        public static string ServerWriteConfigFileStep {
            get {
                return ResourceManager.GetString("ServerWriteConfigFileStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete the service. Please delete it manually..
        /// </summary>
        public static string ServiceManualRemoveRequiredText {
            get {
                return ResourceManager.GetString("ServiceManualRemoveRequiredText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The existing service will be removed after the reboot..
        /// </summary>
        public static string ServiceRemoveAfterRebootText {
            get {
                return ResourceManager.GetString("ServiceRemoveAfterRebootText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The existing service has been deleted..
        /// </summary>
        public static string ServiceRemovedText {
            get {
                return ResourceManager.GetString("ServiceRemovedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting the instance as writable.
        /// </summary>
        public static string SetLocalInstanceAsWritableStep {
            get {
                return ResourceManager.GetString("SetLocalInstanceAsWritableStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting up product configuration controller for new installation..
        /// </summary>
        public static string SettingUpNewInstallation {
            get {
                return ResourceManager.GetString("SettingUpNewInstallation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting up product configuration controller for reconfiguration..
        /// </summary>
        public static string SettingUpReconfiguration {
            get {
                return ResourceManager.GetString("SettingUpReconfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting up product configuration controller for upgrade..
        /// </summary>
        public static string SettingUpUpgrade {
            get {
                return ResourceManager.GetString("SettingUpUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show {0}.
        /// </summary>
        public static string ShowPrefixText {
            get {
                return ResourceManager.GetString("ShowPrefixText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap SidebarBackground {
            get {
                object obj = ResourceManager.GetObject("SidebarBackground", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid SID instance was provided..
        /// </summary>
        public static string SidNotProvided {
            get {
                return ResourceManager.GetString("SidNotProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t set a value if the singleton is already instantiated..
        /// </summary>
        public static string SingletonPropertySetError {
            get {
                return ResourceManager.GetString("SingletonPropertySetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap SplashScreen {
            get {
                object obj = ResourceManager.GetObject("SplashScreen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process for {0}, with ID {1}, was run successfully and exited with code {2}..
        /// </summary>
        public static string StartedAndExitedProcessSuccessfullyText {
            get {
                return ResourceManager.GetString("StartedAndExitedProcessSuccessfullyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process for {0}, with ID {1}, has been started successfully and is running..
        /// </summary>
        public static string StartedAndRunningProcessSuccessfullyText {
            get {
                return ResourceManager.GetString("StartedAndRunningProcessSuccessfullyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StartedProcessErrorText.
        /// </summary>
        public static string StartedProcessErrorText {
            get {
                return ResourceManager.GetString("StartedProcessErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting process with command: {0} {1}....
        /// </summary>
        public static string StartingProcessDetailsText {
            get {
                return ResourceManager.GetString("StartingProcessDetailsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the server and attempting a connection....
        /// </summary>
        public static string StartingServerAndTestingConnection {
            get {
                return ResourceManager.GetString("StartingServerAndTestingConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to start the MySQL Server instance..
        /// </summary>
        public static string StartingServerInstanceErrorText {
            get {
                return ResourceManager.GetString("StartingServerInstanceErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start value is greater than end value.
        /// </summary>
        public static string StartValueGreaterThanEndValueExceptionText {
            get {
                return ResourceManager.GetString("StartValueGreaterThanEndValueExceptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Killed process for {0}, with ID {1}..
        /// </summary>
        public static string StoppedProcessText {
            get {
                return ResourceManager.GetString("StoppedProcessText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Killing process for {0}, with ID {1}....
        /// </summary>
        public static string StoppingProcessText {
            get {
                return ResourceManager.GetString("StoppingProcessText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to stop the MySQL Server instance:.
        /// </summary>
        public static string StoppingServerInstanceErrorText {
            get {
                return ResourceManager.GetString("StoppingServerInstanceErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping MySQL Server instance....
        /// </summary>
        public static string StoppingServerInstanceText {
            get {
                return ResourceManager.GetString("StoppingServerInstanceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        public static string SuccessText {
            get {
                return ResourceManager.GetString("SuccessText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter TEnum must be an Enum.
        /// </summary>
        public static string TEnumNotEnumTypeException {
            get {
                return ResourceManager.GetString("TEnumNotEnumTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to remove connection..
        /// </summary>
        public static string UnableToDeleteConnectionErrorDetail {
            get {
                return ResourceManager.GetString("UnableToDeleteConnectionErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting connections is not allowed while MySQL Workbench is running..
        /// </summary>
        public static string UnableToDeleteConnectionsWhenWBRunning {
            get {
                return ResourceManager.GetString("UnableToDeleteConnectionsWhenWBRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to merge existing connections with MySQL Workbench..
        /// </summary>
        public static string UnableToMergeConnectionsErrorDetail {
            get {
                return ResourceManager.GetString("UnableToMergeConnectionsErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} now works with the connections file used by MySQL Workbench if it is installed.
        ///
        ///{0} attempted to merge all existing connections with MySQL Workbench but is unable to do that if MySQLWorkbench is running.
        ///
        ///Please close MySQL Workbench and restart {0} to perform the merge..
        /// </summary>
        public static string UnableToMergeConnectionsErrorMoreInfo {
            get {
                return ResourceManager.GetString("UnableToMergeConnectionsErrorMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. ({0}) The installer will now close..
        /// </summary>
        public static string UnhandledException {
            get {
                return ResourceManager.GetString("UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled Exception.
        /// </summary>
        public static string UnhandledExceptionText {
            get {
                return ResourceManager.GetString("UnhandledExceptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Copyright (c) 2016, 2020, Oracle and/or its affiliates.
        ///# Uninstall firewall tables, functions and procedures.
        ///USE mysql;
        ///DELIMITER //
        ///CREATE PROCEDURE uninstall_enterprise_firewall()
        ///BEGIN
        ///set @m1 = (SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = &apos;MYSQL_FIREWALL_USERS&apos;);
        ///set @m2 = (SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = &apos;MYSQL_FIREWALL_WHITELIST&apos;);
        ///set @m3 = (SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = &apos;MYSQL_FIREWALL&apos;);
        ///I [rest of string was truncated]&quot;;.
        /// </summary>
        public static string UninstallEnterpriseFirewall {
            get {
                return ResourceManager.GetString("UninstallEnterpriseFirewall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap upgrade_logo {
            get {
                object obj = ResourceManager.GetObject("upgrade_logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;RoleDefinitions xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; version=&quot;1&quot; format=&quot;1&quot;&gt;
        ///  &lt;Privileges&gt;
        ///    &lt;Privilege name=&quot;SELECT&quot; column=&quot;Select_priv&quot; description=&quot;The SELECT privilege enables you to select rows from tables in a database. SELECT statements require the SELECT privilege only if they actually retrieve rows from a table. Some SELECT statements do not access tables and can be executed without permissi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string user_roles {
            get {
                return ResourceManager.GetString("user_roles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The passwords do not match..
        /// </summary>
        public static string UsernamePasswordConfirmationPasswordDoNotMatch {
            get {
                return ResourceManager.GetString("UsernamePasswordConfirmationPasswordDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password does not meet the minimum length requirement of 4 characters..
        /// </summary>
        public static string UsernamePasswordConfirmationPasswordNotGoodEnough {
            get {
                return ResourceManager.GetString("UsernamePasswordConfirmationPasswordNotGoodEnough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to extract the version number for the {0} variable. Format of the version entry must be of type: &lt;var_name&gt;=&quot;&lt;version_number&gt;&quot;..
        /// </summary>
        public static string VersionProcessingFailed {
            get {
                return ResourceManager.GetString("VersionProcessingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap warning_sign {
            get {
                object obj = ResourceManager.GetObject("warning_sign", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon warning_sign_icon {
            get {
                object obj = ResourceManager.GetObject("warning_sign_icon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string WarningsText {
            get {
                return ResourceManager.GetString("WarningsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string WarningText {
            get {
                return ResourceManager.GetString("WarningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is running already..
        /// </summary>
        public static string WindowsServiceAlreadyRunning {
            get {
                return ResourceManager.GetString("WindowsServiceAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows service name cannot contain characters from the ASCII character set that are less than decimal value 32..
        /// </summary>
        public static string WindowsServiceNameContainsInvalidCharactersError {
            get {
                return ResourceManager.GetString("WindowsServiceNameContainsInvalidCharactersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows service name cannot contain forward or backward slashes (&apos;/&apos; or &apos;\&apos;)..
        /// </summary>
        public static string WindowsServiceNameContainsSlashesError {
            get {
                return ResourceManager.GetString("WindowsServiceNameContainsSlashesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows service name is already used..
        /// </summary>
        public static string WindowsServiceNameInUseError {
            get {
                return ResourceManager.GetString("WindowsServiceNameInUseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows service name cannot be null or have zero length..
        /// </summary>
        public static string WindowsServiceNameNullOrEmptyError {
            get {
                return ResourceManager.GetString("WindowsServiceNameNullOrEmptyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} service has not yet been deleted..
        /// </summary>
        public static string WindowsServiceNotYetDeleted {
            get {
                return ResourceManager.GetString("WindowsServiceNotYetDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} service was started successfully..
        /// </summary>
        public static string WindowsServiceStarted {
            get {
                return ResourceManager.GetString("WindowsServiceStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} service failed to start..
        /// </summary>
        public static string WindowsServiceStartFailed {
            get {
                return ResourceManager.GetString("WindowsServiceStartFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to start the {0} service....
        /// </summary>
        public static string WindowsServiceStarting {
            get {
                return ResourceManager.GetString("WindowsServiceStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is stopped or paused, so it can be started..
        /// </summary>
        public static string WindowsServiceStoppedOrPaused {
            get {
                return ResourceManager.GetString("WindowsServiceStoppedOrPaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for the {0} service to be deleted. Retry count {1}..
        /// </summary>
        public static string WindowsServiceWaitingToBeDeleted {
            get {
                return ResourceManager.GetString("WindowsServiceWaitingToBeDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is being paused. Waiting until the status changes....
        /// </summary>
        public static string WindowsServiceWaitingToPause {
            get {
                return ResourceManager.GetString("WindowsServiceWaitingToPause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is being started. Waiting until the status changes....
        /// </summary>
        public static string WindowsServiceWaitingToStart {
            get {
                return ResourceManager.GetString("WindowsServiceWaitingToStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is being stopped. Waiting until the status changes....
        /// </summary>
        public static string WindowsServiceWaitingToStop {
            get {
                return ResourceManager.GetString("WindowsServiceWaitingToStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap WizardSelection {
            get {
                object obj = ResourceManager.GetObject("WizardSelection", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string YesButtonText {
            get {
                return ResourceManager.GetString("YesButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Y]es or [N]o?:  .
        /// </summary>
        public static string YesOrNoForConsoleText {
            get {
                return ResourceManager.GetString("YesOrNoForConsoleText", resourceCulture);
            }
        }
    }
}
