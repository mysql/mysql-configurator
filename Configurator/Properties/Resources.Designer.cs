//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MySql.Configurator.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MySql.Configurator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap about_mysql_light {
            get {
                object obj = ResourceManager.GetObject("about_mysql_light", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap AboutBanner {
            get {
                object obj = ResourceManager.GetObject("AboutBanner", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR: The license file has not been found in the installation directory.
        ///
        ///Please repair the installation of MySQL Configurator so the file is installed again..
        /// </summary>
        public static string AboutLicenseFileNotFoundError {
            get {
                return ResourceManager.GetString("AboutLicenseFileNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionAbout {
            get {
                object obj = ResourceManager.GetObject("ActionAbout", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action &apos;{1}&apos; for product &apos;{0}&apos; was cancelled by the user..
        /// </summary>
        public static string ActionCancelledText {
            get {
                return ResourceManager.GetString("ActionCancelledText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionCurrent {
            get {
                object obj = ResourceManager.GetObject("ActionCurrent", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionCurrent1 {
            get {
                object obj = ResourceManager.GetObject("ActionCurrent1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionCurrent2 {
            get {
                object obj = ResourceManager.GetObject("ActionCurrent2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionDone {
            get {
                object obj = ResourceManager.GetObject("ActionDone", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionDone1 {
            get {
                object obj = ResourceManager.GetObject("ActionDone1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionDone2 {
            get {
                object obj = ResourceManager.GetObject("ActionDone2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionError {
            get {
                object obj = ResourceManager.GetObject("ActionError", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionError1 {
            get {
                object obj = ResourceManager.GetObject("ActionError1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionError2 {
            get {
                object obj = ResourceManager.GetObject("ActionError2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action &apos;{1}&apos; for product &apos;{0}&apos; failed..
        /// </summary>
        public static string ActionFailedText {
            get {
                return ResourceManager.GetString("ActionFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionItemAbout {
            get {
                object obj = ResourceManager.GetObject("ActionItemAbout", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionItemAddModify {
            get {
                object obj = ResourceManager.GetObject("ActionItemAddModify", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionItemAddRemove {
            get {
                object obj = ResourceManager.GetObject("ActionItemAddRemove", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionItemInstall {
            get {
                object obj = ResourceManager.GetObject("ActionItemInstall", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionItemRemove {
            get {
                object obj = ResourceManager.GetObject("ActionItemRemove", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionItemResources {
            get {
                object obj = ResourceManager.GetObject("ActionItemResources", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionOpen {
            get {
                object obj = ResourceManager.GetObject("ActionOpen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionOpen1 {
            get {
                object obj = ResourceManager.GetObject("ActionOpen1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionOpen2 {
            get {
                object obj = ResourceManager.GetObject("ActionOpen2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action Required.
        /// </summary>
        public static string ActionRequiredText {
            get {
                return ResourceManager.GetString("ActionRequiredText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action Required.
        /// </summary>
        public static string ActionRequiredText1 {
            get {
                return ResourceManager.GetString("ActionRequiredText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action &apos;{1}&apos; for product &apos;{0}&apos; completed successfully..
        /// </summary>
        public static string ActionSucceededText {
            get {
                return ResourceManager.GetString("ActionSucceededText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ActionWarning {
            get {
                object obj = ResourceManager.GetObject("ActionWarning", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon Add {
            get {
                object obj = ResourceManager.GetObject("Add", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Commercial.
        /// </summary>
        public static string AddCommercialTitle {
            get {
                return ResourceManager.GetString("AddCommercialTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add GPL.
        /// </summary>
        public static string AddGPLTitle {
            get {
                return ResourceManager.GetString("AddGPLTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap AddIn_Icon {
            get {
                object obj = ResourceManager.GetObject("AddIn_Icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap AddIn_Icon24 {
            get {
                object obj = ResourceManager.GetObject("AddIn_Icon24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add.
        /// </summary>
        public static string AddTitle {
            get {
                return ResourceManager.GetString("AddTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a valid URL to be added..
        /// </summary>
        public static string AddUrlTextboxTooltip {
            get {
                return ResourceManager.GetString("AddUrlTextboxTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a new URL to the validation list..
        /// </summary>
        public static string AddUrlTooltip {
            get {
                return ResourceManager.GetString("AddUrlTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All MySQL Products.
        /// </summary>
        public static string AllMySQLProducts {
            get {
                return ResourceManager.GetString("AllMySQLProducts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another version ({0}) of this package is already installed or scheduled to be installed..
        /// </summary>
        public static string AnotherVersionInstalled {
            get {
                return ResourceManager.GetString("AnotherVersionInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one instance of MySQL Configurator for Windows can be run at a time..
        /// </summary>
        public static string AppAlreadyRunning {
            get {
                return ResourceManager.GetString("AppAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Application_Icon {
            get {
                object obj = ResourceManager.GetObject("Application_Icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Application_Icon24 {
            get {
                object obj = ResourceManager.GetObject("Application_Icon24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Thrown by: {1}.{2}.
        /// </summary>
        public static string ApplicationExceptionForLog {
            get {
                return ResourceManager.GetString("ApplicationExceptionForLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception message:
        ///{2}
        ///
        ///Exception thrown by:
        ///{0}.{1}
        ///
        ///Stack trace:
        ///{3}.
        /// </summary>
        public static string ApplicationExceptionForMoreInfo {
            get {
                return ResourceManager.GetString("ApplicationExceptionForMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Exception.
        /// </summary>
        public static string ApplicationExceptionText {
            get {
                return ResourceManager.GetString("ApplicationExceptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Thrown by: {1}.{2}
        ///Exception message: {3}.
        /// </summary>
        public static string ApplicationExceptionWithCustomMessageForLog {
            get {
                return ResourceManager.GetString("ApplicationExceptionWithCustomMessageForLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying product catalog updates..
        /// </summary>
        public static string ApplyingCatalogUpdates {
            get {
                return ResourceManager.GetString("ApplyingCatalogUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying new manifest from old home directory..
        /// </summary>
        public static string ApplyingNewManfiestFromOldDir {
            get {
                return ResourceManager.GetString("ApplyingNewManfiestFromOldDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying new manifest..
        /// </summary>
        public static string ApplyingNewManifest {
            get {
                return ResourceManager.GetString("ApplyingNewManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Configurator.
        /// </summary>
        public static string AppName {
            get {
                return ResourceManager.GetString("AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Configurator - Commercial Edition.
        /// </summary>
        public static string AppNameCommercial {
            get {
                return ResourceManager.GetString("AppNameCommercial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one feature must be selected. .
        /// </summary>
        public static string AtLeastOneFeatureForInstall {
            get {
                return ResourceManager.GetString("AtLeastOneFeatureForInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one feature must remain enabled. To completely remove a product, please select the Remove option from the dashboard..
        /// </summary>
        public static string AtLeastOneFeatureForModify {
            get {
                return ResourceManager.GetString("AtLeastOneFeatureForModify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to connect to the product update url..
        /// </summary>
        public static string AttemptingToConnect {
            get {
                return ResourceManager.GetString("AttemptingToConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication cancelled by the user..
        /// </summary>
        public static string AuthenticationCancelledMessage {
            get {
                return ResourceManager.GetString("AuthenticationCancelledMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication failed. Please try again or leave empty user name to cancel..
        /// </summary>
        public static string AuthenticationFailedMessage {
            get {
                return ResourceManager.GetString("AuthenticationFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to retrieve the authorization rules for file &apos;{0}&apos;..
        /// </summary>
        public static string AuthorizationRulesRetrievalFailed {
            get {
                return ResourceManager.GetString("AuthorizationRulesRetrievalFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last response text does not have an automatic body tag attempting to auto-post a form..
        /// </summary>
        public static string AutomaticBodyTagNotFound {
            get {
                return ResourceManager.GetString("AutomaticBodyTagNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform the internet connection validation
        ///by checking the default URLs..
        /// </summary>
        public static string AutomaticInternetConnectionValidationTooltip {
            get {
                return ResourceManager.GetString("AutomaticInternetConnectionValidationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt; &amp;Back.
        /// </summary>
        public static string BackButtonDefaultText {
            get {
                return ResourceManager.GetString("BackButtonDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back.
        /// </summary>
        public static string BackButtonText {
            get {
                return ResourceManager.GetString("BackButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Configurator was not launched properly. Try re-installing an installer bundle..
        /// </summary>
        public static string BadLaunchWrongArguments {
            get {
                return ResourceManager.GetString("BadLaunchWrongArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap BigWarning {
            get {
                object obj = ResourceManager.GetObject("BigWarning", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap BigWarning1 {
            get {
                object obj = ResourceManager.GetObject("BigWarning1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to the binary log must not have an extension..
        /// </summary>
        public static string BinLogPathExtensionError {
            get {
                return ResourceManager.GetString("BinLogPathExtensionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap BottomDivider1 {
            get {
                object obj = ResourceManager.GetObject("BottomDivider1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel adding products?.
        /// </summary>
        public static string CancelAddingProductsDetailText {
            get {
                return ResourceManager.GetString("CancelAddingProductsDetailText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Cancel.
        /// </summary>
        public static string CancelButtonDefaultText {
            get {
                return ResourceManager.GetString("CancelButtonDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Cancel.
        /// </summary>
        public static string CancelButtonDefaultText1 {
            get {
                return ResourceManager.GetString("CancelButtonDefaultText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel configuring your product(s)?.
        /// </summary>
        public static string CancelConfigurationQuestion {
            get {
                return ResourceManager.GetString("CancelConfigurationQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelled.
        /// </summary>
        public static string Cancelled {
            get {
                return ResourceManager.GetString("Cancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel modifying your products?.
        /// </summary>
        public static string CancelModificationQuestion {
            get {
                return ResourceManager.GetString("CancelModificationQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel?.
        /// </summary>
        public static string CancelQuestionText {
            get {
                return ResourceManager.GetString("CancelQuestionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel upgrading your products?.
        /// </summary>
        public static string CancelUpgradingProductsDetailText {
            get {
                return ResourceManager.GetString("CancelUpgradingProductsDetailText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can only call InstallerConfiguration.Load once..
        /// </summary>
        public static string CanOnlyLoadConfigOnce {
            get {
                return ResourceManager.GetString("CanOnlyLoadConfigOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry values can only be loaded for installed products..
        /// </summary>
        public static string CanOnlyLoadRegistryForInstalledProducts {
            get {
                return ResourceManager.GetString("CanOnlyLoadRegistryForInstalledProducts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading of updated product catalog has failed with the error: {0}.
        ///
        ///You can retry the download by clicking the Execute button..
        /// </summary>
        public static string CatalogFetchFailed {
            get {
                return ResourceManager.GetString("CatalogFetchFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully downloaded new product catalog,.
        /// </summary>
        public static string CatalogFetchSucceeded {
            get {
                return ResourceManager.GetString("CatalogFetchSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid product catalog URL was found, skipping operation..
        /// </summary>
        public static string CatalogUrlNotFound {
            get {
                return ResourceManager.GetString("CatalogUrlNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting product catalog URL to &apos;{0}&apos;..
        /// </summary>
        public static string CatalogUrlOverriden {
            get {
                return ResourceManager.GetString("CatalogUrlOverriden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We have encountered a non-recoverable error while checking for the latest product catalog. You can try checking again however you may have to uninstall and reinstall MySQL Configurator..
        /// </summary>
        public static string CatastrophicErrorCheckingCatalog {
            get {
                return ResourceManager.GetString("CatastrophicErrorCheckingCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Categorizing product catalog..
        /// </summary>
        public static string CategorizingManifest {
            get {
                return ResourceManager.GetString("CategorizingManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap check_mark {
            get {
                object obj = ResourceManager.GetObject("check_mark", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing response text to check if extra authentication steps are needed....
        /// </summary>
        public static string CheckForExtraAuthSteps {
            get {
                return ResourceManager.GetString("CheckForExtraAuthSteps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for product updates.
        /// </summary>
        public static string CheckForUpdatesDescription {
            get {
                return ResourceManager.GetString("CheckForUpdatesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to c|check.
        /// </summary>
        public static string CheckForUpdatesOptions {
            get {
                return ResourceManager.GetString("CheckForUpdatesOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for product packages in the bundle..
        /// </summary>
        public static string CheckingPackagesBundle {
            get {
                return ResourceManager.GetString("CheckingPackagesBundle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking session cookies for authentication....
        /// </summary>
        public static string CheckingSessionCookies {
            get {
                return ResourceManager.GetString("CheckingSessionCookies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  (check the Log tab for details).
        /// </summary>
        public static string CheckLogTabForDetails {
            get {
                return ResourceManager.GetString("CheckLogTabForDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} method is not supported..
        /// </summary>
        public static string CheckMethodNotSupported {
            get {
                return ResourceManager.GetString("CheckMethodNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password: .
        /// </summary>
        public static string CliPasswordPromptText {
            get {
                return ResourceManager.GetString("CliPasswordPromptText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Name: .
        /// </summary>
        public static string CliUserNamePromptText {
            get {
                return ResourceManager.GetString("CliUserNamePromptText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want to remove a connection, please close MySQL Workbench..
        /// </summary>
        public static string CloseWBAdviceToDelete {
            get {
                return ResourceManager.GetString("CloseWBAdviceToDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are duplicate keys which is not allowed..
        /// </summary>
        public static string CommandLineOptionDuplicateKeysError {
            get {
                return ResourceManager.GetString("CommandLineOptionDuplicateKeysError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;{0}&apos; is invalid or not recognized..
        /// </summary>
        public static string CommandLineOptionInvalidArgumentError {
            get {
                return ResourceManager.GetString("CommandLineOptionInvalidArgumentError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keys cannot contain any the following characters: {0}..
        /// </summary>
        public static string CommandLineOptionInvalidCharactersError {
            get {
                return ResourceManager.GetString("CommandLineOptionInvalidCharactersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is invalid for the command line option &apos;{1}&apos;..
        /// </summary>
        public static string CommandLineOptionInvalidValueError {
            get {
                return ResourceManager.GetString("CommandLineOptionInvalidValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command line option &apos;{0}&apos; requires a value..
        /// </summary>
        public static string CommandLineOptionRequiresValueError {
            get {
                return ResourceManager.GetString("CommandLineOptionRequiresValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Commercial {
            get {
                object obj = ResourceManager.GetObject("Commercial", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commercial License Agreement.
        /// </summary>
        public static string CommercialLicenseCaption {
            get {
                return ResourceManager.GetString("CommercialLicenseCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commercial.
        /// </summary>
        public static string CommercialLicenseText {
            get {
                return ResourceManager.GetString("CommercialLicenseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not connect to the update server..
        /// </summary>
        public static string CommercialUpdateCheckConnectionFailedText {
            get {
                return ResourceManager.GetString("CommercialUpdateCheckConnectionFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not download product update information..
        /// </summary>
        public static string CommercialUpdateCheckFetchFailedText {
            get {
                return ResourceManager.GetString("CommercialUpdateCheckFetchFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not check for product update information. Got the following error details:
        ///
        ///{0}.
        /// </summary>
        public static string CommercialUpdateCheckFetchFailedWithErrorText {
            get {
                return ResourceManager.GetString("CommercialUpdateCheckFetchFailedWithErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New updates are available. Click the Next button to browse to Oracle Support where you can download the latest package. Use the Advanced Search function to find the MySQLInstaller package.
        ///
        ///The MySQL Configurator will be closed. Please execute the downloaded package to update your system..
        /// </summary>
        public static string CommercialUpdateCheckNewUpdatesAvailableText {
            get {
                return ResourceManager.GetString("CommercialUpdateCheckNewUpdatesAvailableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are currently no updates for any of your installed MySQL products available..
        /// </summary>
        public static string CommercialUpdateCheckNoUpdatesAvailableText {
            get {
                return ResourceManager.GetString("CommercialUpdateCheckNoUpdatesAvailableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed.
        /// </summary>
        public static string Completed {
            get {
                return ResourceManager.GetString("Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed (with errors).
        /// </summary>
        public static string CompletedWithErrors {
            get {
                return ResourceManager.GetString("CompletedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap config_logs {
            get {
                object obj = ResourceManager.GetObject("config_logs", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap config_tools {
            get {
                object obj = ResourceManager.GetObject("config_tools", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap config_win_integration {
            get {
                object obj = ResourceManager.GetObject("config_win_integration", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration directory deleted successfully.
        /// </summary>
        public static string ConfigDirDeleted {
            get {
                return ResourceManager.GetString("ConfigDirDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not open connection to database.
        /// </summary>
        public static string ConfigErrorCouldNotOpenDatabase {
            get {
                return ResourceManager.GetString("ConfigErrorCouldNotOpenDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error installing sample database. The error is:\n\t{0}.
        /// </summary>
        public static string ConfigErrorInstallingSampleDatabase {
            get {
                return ResourceManager.GetString("ConfigErrorInstallingSampleDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to configure as the connection string returns is null or empty.
        /// </summary>
        public static string ConfigErrorServerBadConnectionString {
            get {
                return ResourceManager.GetString("ConfigErrorServerBadConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to configure as the server product in our catalog is not installed.
        /// </summary>
        public static string ConfigErrorServerNotInstalled {
            get {
                return ResourceManager.GetString("ConfigErrorServerNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to configure as the server product in our catalog is not running.
        /// </summary>
        public static string ConfigErrorServerNotRunning {
            get {
                return ResourceManager.GetString("ConfigErrorServerNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error trying to delete {0}, the file seems to be in use..
        /// </summary>
        public static string ConfigFileDeleteError {
            get {
                return ResourceManager.GetString("ConfigFileDeleteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for compatible servers..
        /// </summary>
        public static string ConfigInfoCheckingCompatibleServers {
            get {
                return ResourceManager.GetString("ConfigInfoCheckingCompatibleServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking if there are any features installed that need configuration..
        /// </summary>
        public static string ConfigInfoCheckingFeaturesToConfigure {
            get {
                return ResourceManager.GetString("ConfigInfoCheckingFeaturesToConfigure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking installed servers..
        /// </summary>
        public static string ConfigInfoCheckingInstalledServers {
            get {
                return ResourceManager.GetString("ConfigInfoCheckingInstalledServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating example databases....
        /// </summary>
        public static string ConfigInfoCreatingRemovingExamplesData {
            get {
                return ResourceManager.GetString("ConfigInfoCreatingRemovingExamplesData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting connection information (provide credentials if it is needed)..
        /// </summary>
        public static string ConfigInfoGetConnectionInformation {
            get {
                return ResourceManager.GetString("ConfigInfoGetConnectionInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No sample databases were found to configure..
        /// </summary>
        public static string ConfigInfoNoSampleDbsToConfigure {
            get {
                return ResourceManager.GetString("ConfigInfoNoSampleDbsToConfigure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running Scripts.
        /// </summary>
        public static string ConfigInfoRunScripts {
            get {
                return ResourceManager.GetString("ConfigInfoRunScripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting Server instance(s).
        /// </summary>
        public static string ConfigInfoStartServers {
            get {
                return ResourceManager.GetString("ConfigInfoStartServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping Server instance(s).
        /// </summary>
        public static string ConfigInfoStopServers {
            get {
                return ResourceManager.GetString("ConfigInfoStopServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dedicated Computer.
        /// </summary>
        public static string ConfigMachineTypeDedicated {
            get {
                return ResourceManager.GetString("ConfigMachineTypeDedicated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This computer is dedicated to running the MySQL database server.  No other servers, such as web servers, will be run.  MySQL will make use of all available memory..
        /// </summary>
        public static string ConfigMachineTypeDedicateDescription {
            get {
                return ResourceManager.GetString("ConfigMachineTypeDedicateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Development Computer.
        /// </summary>
        public static string ConfigMachineTypeDeveloper {
            get {
                return ResourceManager.GetString("ConfigMachineTypeDeveloper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a development computer, and many other applications will be installed on it.  A minimal amount of memory will be used by MySQL..
        /// </summary>
        public static string ConfigMachineTypeDeveloperDescription {
            get {
                return ResourceManager.GetString("ConfigMachineTypeDeveloperDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual.
        /// </summary>
        public static string ConfigMachineTypeManual {
            get {
                return ResourceManager.GetString("ConfigMachineTypeManual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep the default configuration file values. If the values need any changes they must be manually updated by editing the configuration file..
        /// </summary>
        public static string ConfigMachineTypeManualDescription {
            get {
                return ResourceManager.GetString("ConfigMachineTypeManualDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Computer.
        /// </summary>
        public static string ConfigMachineTypeServer {
            get {
                return ResourceManager.GetString("ConfigMachineTypeServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Several server applications will be running on this computer.  Choose this option for web or application servers.  MySQL will have medium memory usage..
        /// </summary>
        public static string ConfigMachineTypeServerDescription {
            get {
                return ResourceManager.GetString("ConfigMachineTypeServerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration cancelled.
        /// </summary>
        public static string ConfigOverviewConfigurationCancelledText {
            get {
                return ResourceManager.GetString("ConfigOverviewConfigurationCancelledText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring.
        /// </summary>
        public static string ConfigOverviewConfiguringText {
            get {
                return ResourceManager.GetString("ConfigOverviewConfiguringText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Step Bullet.
        /// </summary>
        public static string ConfigStepBulletAccessibleName {
            get {
                return ResourceManager.GetString("ConfigStepBulletAccessibleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Step Caption.
        /// </summary>
        public static string ConfigStepCaptionAccessibleName {
            get {
                return ResourceManager.GetString("ConfigStepCaptionAccessibleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following configuration steps are being executed..
        /// </summary>
        public static string ConfigStepsAreExecuting {
            get {
                return ResourceManager.GetString("ConfigStepsAreExecuting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration operation has completed..
        /// </summary>
        public static string ConfigStepsFinished {
            get {
                return ResourceManager.GetString("ConfigStepsFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration step [{0}] is taking longer than expected.
        ///It is advised to not cancel the configuration and wait..
        /// </summary>
        public static string ConfigStepTakingTooLong {
            get {
                return ResourceManager.GetString("ConfigStepTakingTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no features installed that need configuration..
        /// </summary>
        public static string ConfigSuccessNoFeaturesToConfig {
            get {
                return ResourceManager.GetString("ConfigSuccessNoFeaturesToConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *WARNING*: A deprecated configuration setting is being used(&apos;{0}&apos;) and will be removed in a future release. Use any of the following keywords instead: {1}..
        /// </summary>
        public static string ConfigurationSettingDeprecatedKeyword {
            get {
                return ResourceManager.GetString("ConfigurationSettingDeprecatedKeyword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Steps.
        /// </summary>
        public static string ConfigurationSteps {
            get {
                return ResourceManager.GetString("ConfigurationSteps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration for {0} has been cancelled.
        ///You can start the configure process again by clicking Retry..
        /// </summary>
        public static string ConfigureCancelled {
            get {
                return ResourceManager.GetString("ConfigureCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration for {0} has failed.
        ///You can find more information about the failures in the &apos;Log&apos; tab..
        /// </summary>
        public static string ConfigureFailed {
            get {
                return ResourceManager.GetString("ConfigureFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to continue waiting or cancel the configuration?.
        /// </summary>
        public static string ConfigureHasTimedOutDetail {
            get {
                return ResourceManager.GetString("ConfigureHasTimedOutDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you keep waiting, you may get this message again..
        /// </summary>
        public static string ConfigureHasTimedOutSubDetail {
            get {
                return ResourceManager.GetString("ConfigureHasTimedOutSubDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} configuration is taking longer than expected.
        /// </summary>
        public static string ConfigureHasTimedOutTitle {
            get {
                return ResourceManager.GetString("ConfigureHasTimedOutTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration for {0} was successful.
        ///Click Finish to continue..
        /// </summary>
        public static string ConfigureSuccess {
            get {
                return ResourceManager.GetString("ConfigureSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid configuration dialog (null) found when a configure timeout event occurred..
        /// </summary>
        public static string ConfigureTimeOutInvalidConfigDialogError {
            get {
                return ResourceManager.GetString("ConfigureTimeOutInvalidConfigDialogError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid configuration dialog (null) found when configure timeout event occurred..
        /// </summary>
        public static string ConfigureTimeOutInvalidConfigDialogError1 {
            get {
                return ResourceManager.GetString("ConfigureTimeOutInvalidConfigDialogError1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid product found when a configure timeout event occurred..
        /// </summary>
        public static string ConfigureTimeOutInvalidProductError {
            get {
                return ResourceManager.GetString("ConfigureTimeOutInvalidProductError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid product found when a configure timeout event occurred..
        /// </summary>
        public static string ConfigureTimeOutInvalidProductError1 {
            get {
                return ResourceManager.GetString("ConfigureTimeOutInvalidProductError1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User cancelled configuration operation after configuration timeout ocurred..
        /// </summary>
        public static string ConfigureTimeOutUserCancelledText {
            get {
                return ResourceManager.GetString("ConfigureTimeOutUserCancelledText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User cancelled configuration operation after configuration timeout ocurred..
        /// </summary>
        public static string ConfigureTimeOutUserCancelledText1 {
            get {
                return ResourceManager.GetString("ConfigureTimeOutUserCancelledText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration taking too long and timed out, but user still waiting for it to finish..
        /// </summary>
        public static string ConfigureTimeOutUserWaitingText {
            get {
                return ResourceManager.GetString("ConfigureTimeOutUserWaitingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration taking too long and timed out, but the operation is still waiting for it to finish..
        /// </summary>
        public static string ConfigureTimeOutUserWaitingText1 {
            get {
                return ResourceManager.GetString("ConfigureTimeOutUserWaitingText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ConfigUserMySQL {
            get {
                object obj = ResourceManager.GetObject("ConfigUserMySQL", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ConfigUserMySQL241 {
            get {
                object obj = ResourceManager.GetObject("ConfigUserMySQL241", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ConfigUserMySQLRoot {
            get {
                object obj = ResourceManager.GetObject("ConfigUserMySQLRoot", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ConfigUserWindows24 {
            get {
                object obj = ResourceManager.GetObject("ConfigUserWindows24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel and quit MySQL Configurator?.
        /// </summary>
        public static string ConfirmCancelAndQuit {
            get {
                return ResourceManager.GetString("ConfirmCancelAndQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm Cancellation.
        /// </summary>
        public static string ConfirmCancellationTitle {
            get {
                return ResourceManager.GetString("ConfirmCancellationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel checking for a new product catalog?.
        /// </summary>
        public static string ConfirmCancelOfCatalogDownload {
            get {
                return ResourceManager.GetString("ConfirmCancelOfCatalogDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel the download and installation of prerequisites?.
        /// </summary>
        public static string ConfirmCancelRequirementInstall {
            get {
                return ResourceManager.GetString("ConfirmCancelRequirementInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue after download errors.
        /// </summary>
        public static string ConfirmContinueTitle {
            get {
                return ResourceManager.GetString("ConfirmContinueTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you absolutely sure all server data files should be removed? This action cannot be undone!.
        /// </summary>
        public static string ConfirmDataRemoval2Text {
            get {
                return ResourceManager.GetString("ConfirmDataRemoval2Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the server data files?.
        /// </summary>
        public static string ConfirmDataRemovalText {
            get {
                return ResourceManager.GetString("ConfirmDataRemovalText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm Data Removal.
        /// </summary>
        public static string ConfirmDataRemovalTitle {
            get {
                return ResourceManager.GetString("ConfirmDataRemovalTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration of {0} has not been successfully completed.  Are you sure you want to close the wizard?.
        /// </summary>
        public static string ConfirmFinishWithFailingConfig {
            get {
                return ResourceManager.GetString("ConfirmFinishWithFailingConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove all selected products?.
        /// </summary>
        public static string ConfirmRemovalText {
            get {
                return ResourceManager.GetString("ConfirmRemovalText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm Removal.
        /// </summary>
        public static string ConfirmRemovalTitle {
            get {
                return ResourceManager.GetString("ConfirmRemovalTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A {0} version ({1}) with the same upgrade code is already installed..
        /// </summary>
        public static string ConflictingLicenseInstalled {
            get {
                return ResourceManager.GetString("ConflictingLicenseInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection attempt failed..
        /// </summary>
        public static string ConnectFailedWarningTitle {
            get {
                return ResourceManager.GetString("ConnectFailedWarningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection failed..
        /// </summary>
        public static string ConnectionFailedText {
            get {
                return ResourceManager.GetString("ConnectionFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MySQL server is using SSL and requires a secure connection, but the client connection has SSL turned off..
        /// </summary>
        public static string ConnectionInsecureError {
            get {
                return ResourceManager.GetString("ConnectionInsecureError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This connection is not set to use SSL, but the MySQL server requires a secure connection..
        /// </summary>
        public static string ConnectionIsInsecureAndRequiresRsaKeyRetrievalDetail {
            get {
                return ResourceManager.GetString("ConnectionIsInsecureAndRequiresRsaKeyRetrievalDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieval of the RSA public key is not enabled for insecure connections.
        /// </summary>
        public static string ConnectionIsInsecureAndRequiresRsaKeyRetrievalError {
            get {
                return ResourceManager.GetString("ConnectionIsInsecureAndRequiresRsaKeyRetrievalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MySQL server is using SSL and it requires a secure connection from the client.
        ///This connection is explicitly turning off the use of SSL (Use SSL = No).
        ///
        ///It is advised that the connection is set to use the &quot;Preferred&quot; or &quot;Required&quot; SSL mode in order to connect to this server.
        ///
        ///If, for some reason, using SSL is not an option, the password can still be sent to the server after encrypting it with a RSA key. The client can request the public key from the server, however this could be prone to man-in-the [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ConnectionIsInsecureAndRequiresRsaKeyRetrievalMoreInfo {
            get {
                return ResourceManager.GetString("ConnectionIsInsecureAndRequiresRsaKeyRetrievalMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you trust the server to send an RSA key to encrypt the password?.
        /// </summary>
        public static string ConnectionIsInsecureAndRequiresRsaKeyRetrievalSubDetail {
            get {
                return ResourceManager.GetString("ConnectionIsInsecureAndRequiresRsaKeyRetrievalSubDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MySQL server requires a secure connection.
        /// </summary>
        public static string ConnectionIsInsecureAndRequiresRsaKeyRetrievalTitle {
            get {
                return ResourceManager.GetString("ConnectionIsInsecureAndRequiresRsaKeyRetrievalTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the password for the connection:.
        /// </summary>
        public static string ConnectionPasswordLabelText {
            get {
                return ResourceManager.GetString("ConnectionPasswordLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection passwords were migrated successfully..
        /// </summary>
        public static string ConnectionPasswordsMigratedText {
            get {
                return ResourceManager.GetString("ConnectionPasswordsMigratedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following error was thrown when trying to migrate connection passwords:.
        /// </summary>
        public static string ConnectionPasswordsNotMigratedText {
            get {
                return ResourceManager.GetString("ConnectionPasswordsNotMigratedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Password.
        /// </summary>
        public static string ConnectionPasswordWindowTitleText {
            get {
                return ResourceManager.GetString("ConnectionPasswordWindowTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} database connections were processed for migration..
        /// </summary>
        public static string ConnectionsMigratedDetail {
            get {
                return ResourceManager.GetString("ConnectionsMigratedDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following {0} connections were renamed before migrating them since Workbench connections already existed with those names:.
        /// </summary>
        public static string ConnectionsMigratedRenamedMoreInfo {
            get {
                return ResourceManager.GetString("ConnectionsMigratedRenamedMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following {0} connections were migrated to the MySQL Workbench connections file:.
        /// </summary>
        public static string ConnectionsMigratedSuccessfullyMoreInfo {
            get {
                return ResourceManager.GetString("ConnectionsMigratedSuccessfullyMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already migrated.
        /// </summary>
        public static string ConnectionsMigrationAlreadyText {
            get {
                return ResourceManager.GetString("ConnectionsMigrationAlreadyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local database connections could not be migrated..
        /// </summary>
        public static string ConnectionsMigrationErrorDetail {
            get {
                return ResourceManager.GetString("ConnectionsMigrationErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database connections were not migrated because the following error ocurred:.
        /// </summary>
        public static string ConnectionsMigrationErrorMoreInfo {
            get {
                return ResourceManager.GetString("ConnectionsMigrationErrorMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error migrating connections..
        /// </summary>
        public static string ConnectionsMigrationErrorTitle {
            get {
                return ResourceManager.GetString("ConnectionsMigrationErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indefinite, migrate manually.
        /// </summary>
        public static string ConnectionsMigrationIndefiniteText {
            get {
                return ResourceManager.GetString("ConnectionsMigrationIndefiniteText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No migration needed.
        /// </summary>
        public static string ConnectionsMigrationNotNeededText {
            get {
                return ResourceManager.GetString("ConnectionsMigrationNotNeededText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connections and passwords migrated successfully..
        /// </summary>
        public static string ConnectionsMigrationSuccessTitle {
            get {
                return ResourceManager.GetString("ConnectionsMigrationSuccessTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connections migrated successfully, but not passwords..
        /// </summary>
        public static string ConnectionsMigrationWarningTitle {
            get {
                return ResourceManager.GetString("ConnectionsMigrationWarningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following {0} connections were not migrated since identical connections already existed in the Workbench connections file:.
        /// </summary>
        public static string ConnectionsNotMigratedMoreInfo {
            get {
                return ResourceManager.GetString("ConnectionsNotMigratedMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refusing Connections.
        /// </summary>
        public static string ConnectionStatusBad {
            get {
                return ResourceManager.GetString("ConnectionStatusBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accepting Connections.
        /// </summary>
        public static string ConnectionStatusGood {
            get {
                return ResourceManager.GetString("ConnectionStatusGood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string ConnectionStatusNA {
            get {
                return ResourceManager.GetString("ConnectionStatusNA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection succeeded..
        /// </summary>
        public static string ConnectionSucceededText {
            get {
                return ResourceManager.GetString("ConnectionSucceededText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting....
        /// </summary>
        public static string ConnectionTestingText {
            get {
                return ResourceManager.GetString("ConnectionTestingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Connector_Icon {
            get {
                object obj = ResourceManager.GetObject("Connector_Icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Connector_Icon24 {
            get {
                object obj = ResourceManager.GetObject("Connector_Icon24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validated access to the internet using URL: {0}..
        /// </summary>
        public static string ConnectoToCatalogUpdateInternetAccessValidated {
            get {
                return ResourceManager.GetString("ConnectoToCatalogUpdateInternetAccessValidated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to catalog update server.
        ///
        ///If you have corrected the problem, you can click Execute to try again..
        /// </summary>
        public static string ConnectoToCatalogUpdateServerFailed {
            get {
                return ResourceManager.GetString("ConnectoToCatalogUpdateServerFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully connected to product catalog url..
        /// </summary>
        public static string ConnectoToCatalogUpdateServerSucceeded {
            get {
                return ResourceManager.GetString("ConnectoToCatalogUpdateServerSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A possible fail reason could be that your user requires a SSL connection that is not currently supported.
        ///
        ///Please check with the Administrator if you require a SSL Connection and if he can authorize your user to login without a SSL connection..
        /// </summary>
        public static string ConnectSSLFailedDetailWarning {
            get {
                return ResourceManager.GetString("ConnectSSLFailedDetailWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to the internet..
        /// </summary>
        public static string ConnectToInternetFailed {
            get {
                return ResourceManager.GetString("ConnectToInternetFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all products could be downloaded successfully. Do you still want to install the remaining products?.
        /// </summary>
        public static string ContinueAfterDownloadErrorText {
            get {
                return ResourceManager.GetString("ContinueAfterDownloadErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Installer will restart your system. Do you want to continue?.
        /// </summary>
        public static string ContinueRebootSystem {
            get {
                return ResourceManager.GetString("ContinueRebootSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Converting your MySQL {0} products to {1} products ....
        /// </summary>
        public static string ConversionProgressText {
            get {
                return ResourceManager.GetString("ConversionProgressText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Converting products from {0} to {1}.
        /// </summary>
        public static string ConvertDialogCaption {
            get {
                return ResourceManager.GetString("ConvertDialogCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Converting {0}.  Please wait....
        /// </summary>
        public static string ConvertingProductMessage {
            get {
                return ResourceManager.GetString("ConvertingProductMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installation has been cancelled..
        /// </summary>
        public static string ConvertProductsCancelled {
            get {
                return ResourceManager.GetString("ConvertProductsCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelled Installation.
        /// </summary>
        public static string ConvertProductsCancelledTitle {
            get {
                return ResourceManager.GetString("ConvertProductsCancelledTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://support.oracle.com.
        /// </summary>
        public static string ConvertProductsMissingCommercialURL {
            get {
                return ResourceManager.GetString("ConvertProductsMissingCommercialURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MySQL Configurator package you downloaded does not contain the files needed to convert your {0} products to the {1} license. Please visit {2} and download the full (non-web) MySQL Configurator bundles for {3}..
        /// </summary>
        public static string ConvertProductsMissingPrompt {
            get {
                return ResourceManager.GetString("ConvertProductsMissingPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert products.
        /// </summary>
        public static string ConvertProductsMissingPromptTitle {
            get {
                return ResourceManager.GetString("ConvertProductsMissingPromptTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://dev.mysql.com.
        /// </summary>
        public static string ConvertProductsMissingPublicURL {
            get {
                return ResourceManager.GetString("ConvertProductsMissingPublicURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thanks for installing a {0} edition of MySQL Configurator. We have detected that MySQL products under the {1} license are installed. In order to proceed with this {0} installation, these {1} products need to be converted to a {0} license.
        ///
        ///Please click [Yes] to automatically convert your {1} products to {0} products..
        /// </summary>
        public static string ConvertProductsPrompt {
            get {
                return ResourceManager.GetString("ConvertProductsPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert Products.
        /// </summary>
        public static string ConvertProductsPromptTitle {
            get {
                return ResourceManager.GetString("ConvertProductsPromptTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thanks for installing a {0} edition of MySQL Configurator. We have
        ///detected that MySQL products under the {1} license are installed. In
        ///order to proceed with this {0} installation, these {1} products
        ///need to be converted to a {0} license.
        ///
        ///Please click [Yes] to automatically convert your {1} products to
        ///{0} products.
        ///
        ///Clicking [No] will cancel this {0} installation. You may proceed
        ///using {1} installers or run this {0} installer again at a later
        ///point in time..
        /// </summary>
        public static string CoversionConfirmationText {
            get {
                return ResourceManager.GetString("CoversionConfirmationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select to enable the Select Features page where you can
        ///customize the features for the products to be installed..
        /// </summary>
        public static string CustomizeProductFeaturesCheckBoxTooltip {
            get {
                return ResourceManager.GetString("CustomizeProductFeaturesCheckBoxTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must select which products and features will be installed..
        /// </summary>
        public static string CustomSetupTypeDesc {
            get {
                return ResourceManager.GetString("CustomSetupTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade operation cannot continue because the files in the data directory are in use.
        /// </summary>
        public static string DataDirectoryInUse {
            get {
                return ResourceManager.GetString("DataDirectoryInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap dedicated_machine {
            get {
                object obj = ResourceManager.GetObject("dedicated_machine", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap dedicated_machine1 {
            get {
                object obj = ResourceManager.GetObject("dedicated_machine1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://wb.mysql.com/installer/result.php.
        /// </summary>
        public static string DefaultCollectorURL {
            get {
                return ResourceManager.GetString("DefaultCollectorURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installs all products needed for MySQL development, including:  
        ///
        ///- MySQL Server
        ///- MySQL Workbench..
        /// </summary>
        public static string DefaultSetupTypeDesc {
            get {
                return ResourceManager.GetString("DefaultSetupTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete the selected URL..
        /// </summary>
        public static string DeleteUrlTooltip {
            get {
                return ResourceManager.GetString("DeleteUrlTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details &gt;&gt;.
        /// </summary>
        public static string DetailsCollapsed {
            get {
                return ResourceManager.GetString("DetailsCollapsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details &gt;&gt;.
        /// </summary>
        public static string DetailsCollapsed1 {
            get {
                return ResourceManager.GetString("DetailsCollapsed1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details &lt;&lt;.
        /// </summary>
        public static string DetailsExpanded {
            get {
                return ResourceManager.GetString("DetailsExpanded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details &lt;&lt;.
        /// </summary>
        public static string DetailsExpanded1 {
            get {
                return ResourceManager.GetString("DetailsExpanded1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap developer_machine {
            get {
                object obj = ResourceManager.GetObject("developer_machine", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap developer_machine1 {
            get {
                object obj = ResourceManager.GetObject("developer_machine1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright © 2012, 2019, Oracle and/or it&apos;s affiliates.   Oracle is a registered trademark of Oracle Corporation and/or it&apos;s affiliates.  Other names may be trademarks of their respective owners..
        /// </summary>
        public static string DisplayedCopyrightNotice {
            get {
                return ResourceManager.GetString("DisplayedCopyrightNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Documentation_Icon {
            get {
                object obj = ResourceManager.GetObject("Documentation_Icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Documentation_Icon24 {
            get {
                object obj = ResourceManager.GetObject("Documentation_Icon24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap down_arrow {
            get {
                object obj = ResourceManager.GetObject("down_arrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to remove the temporary file &apos;{0}&apos; with message: {1}.
        /// </summary>
        public static string DownloadFailedToRemoveTempFile {
            get {
                return ResourceManager.GetString("DownloadFailedToRemoveTempFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading....
        /// </summary>
        public static string DownloadingStatus {
            get {
                return ResourceManager.GetString("DownloadingStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Space available on drive: {0}.
        /// </summary>
        public static string DriveSpaceAvailable {
            get {
                return ResourceManager.GetString("DriveSpaceAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Estimated Total Space required on drive: {0}.
        /// </summary>
        public static string DriveSpaceNeeded {
            get {
                return ResourceManager.GetString("DriveSpaceNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The URL can&apos;t be null or empty..
        /// </summary>
        public static string EmptyUrl {
            get {
                return ResourceManager.GetString("EmptyUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The URL list can&apos;t be empty..
        /// </summary>
        public static string EmptyUrlList {
            get {
                return ResourceManager.GetString("EmptyUrlList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is a problem with the data directory location. The &quot;{0}&quot; product, which is planned for installation, is set to use the same directory which is already used by &quot;{1}&quot;. The path is:
        ///
        ///{2}
        ///
        ///Do you want to select a different path? Click No to return to the feature selection..
        /// </summary>
        public static string EnterNewPathForServerDataDirText {
            get {
                return ResourceManager.GetString("EnterNewPathForServerDataDirText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap error_sign {
            get {
                object obj = ResourceManager.GetObject("error_sign", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap error_sign1 {
            get {
                object obj = ResourceManager.GetObject("error_sign1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap error_small {
            get {
                object obj = ResourceManager.GetObject("error_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error was encountered loading the product catalog..
        /// </summary>
        public static string ErrorLoadingProducts {
            get {
                return ResourceManager.GetString("ErrorLoadingProducts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string ErrorText {
            get {
                return ResourceManager.GetString("ErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] example_databases {
            get {
                object obj = ResourceManager.GetObject("example_databases", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Examples configuration controller created..
        /// </summary>
        public static string ExamplesConfigurationControllerCreatedText {
            get {
                return ResourceManager.GetString("ExamplesConfigurationControllerCreatedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} extra authentication step(s) performed that are automatic with regular browsers but not automatic for us..
        /// </summary>
        public static string ExecutedExtraAuthSteps {
            get {
                return ResourceManager.GetString("ExecutedExtraAuthSteps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can click Execute to try again..
        /// </summary>
        public static string ExecuteToTryAgain {
            get {
                return ResourceManager.GetString("ExecuteToTryAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password for the MySQL account has expired.
        ///Please enter a new password:.
        /// </summary>
        public static string ExpiredPasswordLabelText {
            get {
                return ResourceManager.GetString("ExpiredPasswordLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password Expired.
        /// </summary>
        public static string ExpiredPasswordWindowTitleText {
            get {
                return ResourceManager.GetString("ExpiredPasswordWindowTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response URL from the extra authentication step is: &apos;{0}&apos;..
        /// </summary>
        public static string ExtraAuthStepResponse {
            get {
                return ResourceManager.GetString("ExtraAuthStepResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No extra authentication steps were detected..
        /// </summary>
        public static string ExtraAuthStepsNotFound {
            get {
                return ResourceManager.GetString("ExtraAuthStepsNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap fading_divider {
            get {
                object obj = ResourceManager.GetObject("fading_divider", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap fading_divider1 {
            get {
                object obj = ResourceManager.GetObject("fading_divider1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed.
        /// </summary>
        public static string Failed {
            get {
                return ResourceManager.GetString("Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the list of running mysqld processes..
        /// </summary>
        public static string FailedToRetrieveMySqldProcesses {
            get {
                return ResourceManager.GetString("FailedToRetrieveMySqldProcesses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the list of running mysqld processes..
        /// </summary>
        public static string FailedToRetrieveMySqldProcesses1 {
            get {
                return ResourceManager.GetString("FailedToRetrieveMySqldProcesses1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to get the read-only status of the instance..
        /// </summary>
        public static string FailedToRetrieveReadOnlyStatus {
            get {
                return ResourceManager.GetString("FailedToRetrieveReadOnlyStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the value of the {0} variable..
        /// </summary>
        public static string FailedToRetrieveVariable {
            get {
                return ResourceManager.GetString("FailedToRetrieveVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Workbench failed to launch with an error (see more information for details)..
        /// </summary>
        public static string FailureToLaunchWorkbench {
            get {
                return ResourceManager.GetString("FailureToLaunchWorkbench", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is a required feature..
        /// </summary>
        public static string FeatureIsRequired {
            get {
                return ResourceManager.GetString("FeatureIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap FeatureRemoveOverlay {
            get {
                object obj = ResourceManager.GetObject("FeatureRemoveOverlay", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; does not exist..
        /// </summary>
        public static string FileDoesNotExist {
            get {
                return ResourceManager.GetString("FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User generated content has been left behind in the folder {0}. Do you want to remove these files?.
        /// </summary>
        public static string FilesLeftBehind {
            get {
                return ResourceManager.GetString("FilesLeftBehind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finding all installed packages..
        /// </summary>
        public static string FindingInstalledPackages {
            get {
                return ResourceManager.GetString("FindingInstalledPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A full product catalog already exists. Skipping merge operation..
        /// </summary>
        public static string FullManifestAlreadyExists {
            get {
                return ResourceManager.GetString("FullManifestAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installs all the products, including: 
        ///
        ///- MySQL Server, 
        ///- MySQL Workbench, 
        ///- the MySQL Connectors, 
        ///- all documention with samples..
        /// </summary>
        public static string FullSetupTypeDesc {
            get {
                return ResourceManager.GetString("FullSetupTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Button1.
        /// </summary>
        public static string GenericButton1DefaultText {
            get {
                return ResourceManager.GetString("GenericButton1DefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Button2.
        /// </summary>
        public static string GenericButton2DefaultText {
            get {
                return ResourceManager.GetString("GenericButton2DefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Button3.
        /// </summary>
        public static string GenericButton3DefaultText {
            get {
                return ResourceManager.GetString("GenericButton3DefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Error Ocurred.
        /// </summary>
        public static string GenericErrorTitle {
            get {
                return ResourceManager.GetString("GenericErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Error {0}:{1}.
        /// </summary>
        public static string GenericMySQLError {
            get {
                return ResourceManager.GetString("GenericMySQLError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clicking Cancel will abort the current configuration, click Details for more information..
        /// </summary>
        public static string GenericProductConfigCancelWarningText {
            get {
                return ResourceManager.GetString("GenericProductConfigCancelWarningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pressing Cancel will abort the current configuration, press Details for more information..
        /// </summary>
        public static string GenericProductConfigCancelWarningText1 {
            get {
                return ResourceManager.GetString("GenericProductConfigCancelWarningText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} configuration is taking a long time to complete.
        /// </summary>
        public static string GenericProductConfigDelayedText {
            get {
                return ResourceManager.GetString("GenericProductConfigDelayedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the last 10 actions in the {0} file, they may help you understand more about the service start delay reason:.
        /// </summary>
        public static string GenericProductConfigDelayLogActionsText {
            get {
                return ResourceManager.GetString("GenericProductConfigDelayLogActionsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration completion delay may be caused by a variety of factors, you may look at the product&apos;s log for more information..
        /// </summary>
        public static string GenericProductConfigTimeoutUnknownText {
            get {
                return ResourceManager.GetString("GenericProductConfigTimeoutUnknownText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GPL License Agreement.
        /// </summary>
        public static string GPLLicenseCaption {
            get {
                return ResourceManager.GetString("GPLLicenseCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GPL.
        /// </summary>
        public static string GPLLicenseText {
            get {
                return ResourceManager.GetString("GPLLicenseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap h_divider {
            get {
                object obj = ResourceManager.GetObject("h_divider", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You still have warnings with your selected options.  Are you sure you want to continue?.
        /// </summary>
        public static string HasOptionWarnings {
            get {
                return ResourceManager.GetString("HasOptionWarnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You still have warnings with your selected paths.  Are you sure you want to continue?.
        /// </summary>
        public static string HasPathWarnings {
            get {
                return ResourceManager.GetString("HasPathWarnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Help.
        /// </summary>
        public static string HelpButtonDefaultText {
            get {
                return ResourceManager.GetString("HelpButtonDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show the command line options.
        /// </summary>
        public static string HelpDescription {
            get {
                return ResourceManager.GetString("HelpDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ?|help|h.
        /// </summary>
        public static string HelpOptions {
            get {
                return ResourceManager.GetString("HelpOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide {0}.
        /// </summary>
        public static string HidePrefixText {
            get {
                return ResourceManager.GetString("HidePrefixText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide {0}.
        /// </summary>
        public static string HidePrefixText1 {
            get {
                return ResourceManager.GetString("HidePrefixText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High Severity Error.
        /// </summary>
        public static string HighSeverityError {
            get {
                return ResourceManager.GetString("HighSeverityError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap home_bottom_line {
            get {
                object obj = ResourceManager.GetObject("home_bottom_line", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last response does not contain HTML text..
        /// </summary>
        public static string HtmlCodeNotFound {
            get {
                return ResourceManager.GetString("HtmlCodeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conflicting product {0} is installed..
        /// </summary>
        public static string ImposterInstalled {
            get {
                return ResourceManager.GetString("ImposterInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: The following MySQL Server versions are not compatible with the {0} package. Although the package will install correctly, there may be problems when connecting to these servers:.
        /// </summary>
        public static string IncompatibleServersFoundOnCliWarning {
            get {
                return ResourceManager.GetString("IncompatibleServersFoundOnCliWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Although the package will install correctly, there may be problems when connecting to some servers. The following MySQL Server versions are not compatible with this package:.
        /// </summary>
        public static string IncompatibleServersFoundOnGuiWarning {
            get {
                return ResourceManager.GetString("IncompatibleServersFoundOnGuiWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information.
        /// </summary>
        public static string InformationText {
            get {
                return ResourceManager.GetString("InformationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing product requirements..
        /// </summary>
        public static string InitializingRequirements {
            get {
                return ResourceManager.GetString("InitializingRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No input tags were found in the login HTML page. The authentication will most likely fail..
        /// </summary>
        public static string InputDataNotFoundInLoginPage {
            get {
                return ResourceManager.GetString("InputDataNotFoundInLoginPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your installation appears to be damaged. You should uninstall and reinstall MySQL Configurator for Windows..
        /// </summary>
        public static string InstallationCorrupted {
            get {
                return ResourceManager.GetString("InstallationCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed MySQL Products.
        /// </summary>
        public static string InstalledMySQLProducts {
            get {
                return ResourceManager.GetString("InstalledMySQLProducts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Enterprise Firewall script could not be found..
        /// </summary>
        public static string InstallEnterpriseFirewallScriptNotFound {
            get {
                return ResourceManager.GetString("InstallEnterpriseFirewallScriptNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration saved..
        /// </summary>
        public static string InstallerConfigurationSaved {
            get {
                return ResourceManager.GetString("InstallerConfigurationSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving configuration..
        /// </summary>
        public static string InstallerConfigurationSaving {
            get {
                return ResourceManager.GetString("InstallerConfigurationSaving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration file found..
        /// </summary>
        public static string InstallerConfigurationSettingsFileFound {
            get {
                return ResourceManager.GetString("InstallerConfigurationSettingsFileFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No settings file found. Loading default configurations..
        /// </summary>
        public static string InstallerConfigurationSettingsFileNotFound {
            get {
                return ResourceManager.GetString("InstallerConfigurationSettingsFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded configurations..
        /// </summary>
        public static string InstallerConfigurationSettingsLoaded {
            get {
                return ResourceManager.GetString("InstallerConfigurationSettingsLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The instance is configured as read-only..
        /// </summary>
        public static string InstanceIsReadOnly {
            get {
                return ResourceManager.GetString("InstanceIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internet connection failed. Please try again or leave empty user name to cancel..
        /// </summary>
        public static string InternetConnectionFailedMessage {
            get {
                return ResourceManager.GetString("InternetConnectionFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internet connection found.
        /// </summary>
        public static string InternetConnectionFound {
            get {
                return ResourceManager.GetString("InternetConnectionFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internet connection not found.
        /// </summary>
        public static string InternetConnectionNotFound {
            get {
                return ResourceManager.GetString("InternetConnectionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No internet connection was found. Do you want to enable offline mode? Offline mode can later be disabled by running the &apos;--set --offline-mode=false&apos; command..
        /// </summary>
        public static string InternetConnectionRequestToEnableOfflineModeConsole {
            get {
                return ResourceManager.GetString("InternetConnectionRequestToEnableOfflineModeConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No internet connection was found. Do you want to enable offline mode? Offline mode can later be disabled from the main dashboard or in the Installer options..
        /// </summary>
        public static string InternetConnectionRequestToEnableOfflineModeUI {
            get {
                return ResourceManager.GetString("InternetConnectionRequestToEnableOfflineModeUI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validated internet connection using URL: {0}.
        /// </summary>
        public static string InternetConnectionValidatedWithUrl {
            get {
                return ResourceManager.GetString("InternetConnectionValidatedWithUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validating internet connection....
        /// </summary>
        public static string InternetConnectionValidating {
            get {
                return ResourceManager.GetString("InternetConnectionValidating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the provided byte arrays is invalid: {0} : {1}..
        /// </summary>
        public static string InvalidByteArray {
            get {
                return ResourceManager.GetString("InvalidByteArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid command line argument &apos;{0}&apos;.
        /// </summary>
        public static string InvalidCommandLineArguments {
            get {
                return ResourceManager.GetString("InvalidCommandLineArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your MySQL Configurator installation appears to be corrupted. You should reinstall..
        /// </summary>
        public static string InvalidInstallation {
            get {
                return ResourceManager.GetString("InvalidInstallation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The product catalog is in an invalid state. It is not possible to proceed with the merge operation..
        /// </summary>
        public static string InvalidProductCatalog {
            get {
                return ResourceManager.GetString("InvalidProductCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not recognized as a valid keyword..
        /// </summary>
        public static string InvalidPropertyGiven {
            get {
                return ResourceManager.GetString("InvalidPropertyGiven", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is an invalid root password..
        /// </summary>
        public static string InvalidRootPassword {
            get {
                return ResourceManager.GetString("InvalidRootPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid server template.
        /// </summary>
        public static string InvalidServerTemplate {
            get {
                return ResourceManager.GetString("InvalidServerTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is an invalid service name..
        /// </summary>
        public static string InvalidServiceName {
            get {
                return ResourceManager.GetString("InvalidServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is an invalid service name..
        /// </summary>
        public static string InvalidServiceName1 {
            get {
                return ResourceManager.GetString("InvalidServiceName1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided URL is not valid..
        /// </summary>
        public static string InvalidUrl {
            get {
                return ResourceManager.GetString("InvalidUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your product catalog was last checked on {0} at {1}..
        /// </summary>
        public static string LabelLastCatalogCheck {
            get {
                return ResourceManager.GetString("LabelLastCatalogCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not opening MySQL Workbench because the executable file ({0}) is not found..
        /// </summary>
        public static string LaunchWorkbenchCancelledExeNotFound {
            get {
                return ResourceManager.GetString("LaunchWorkbenchCancelledExeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not opening MySQL Workbench because an empty connection name was specified..
        /// </summary>
        public static string LaunchWorkbenchCancelledNoConnectionName {
            get {
                return ResourceManager.GetString("LaunchWorkbenchCancelledNoConnectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not opening MySQL Workbench because the install location is not defined..
        /// </summary>
        public static string LaunchWorkbenchCancelledNoInstallLocation {
            get {
                return ResourceManager.GetString("LaunchWorkbenchCancelledNoInstallLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not opening MySQL Workbench because no server instance was specified..
        /// </summary>
        public static string LaunchWorkbenchCancelledNoServerInstance {
            get {
                return ResourceManager.GetString("LaunchWorkbenchCancelledNoServerInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap left_arrow {
            get {
                object obj = ResourceManager.GetObject("left_arrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap left_double_arrow {
            get {
                object obj = ResourceManager.GetObject("left_double_arrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap license_light {
            get {
                object obj = ResourceManager.GetObject("license_light", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have selected for install packages with a {0} license.  You must accept the following license agreement to complete that installation..
        /// </summary>
        public static string LicenseAgreementSubcaption {
            get {
                return ResourceManager.GetString("LicenseAgreementSubcaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap link_arrow {
            get {
                object obj = ResourceManager.GetObject("link_arrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap linkpanel_divider {
            get {
                object obj = ResourceManager.GetObject("linkpanel_divider", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap linkpanel_divider1 {
            get {
                object obj = ResourceManager.GetObject("linkpanel_divider1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading product catalog..
        /// </summary>
        public static string LoadingProductCatalog {
            get {
                return ResourceManager.GetString("LoadingProductCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local IP Address Not Found! You will not be able to proceed with this type of configuration..
        /// </summary>
        public static string LocalIpAddressNotFoundMessage {
            get {
                return ResourceManager.GetString("LocalIpAddressNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for the server to start accepting connections....
        /// </summary>
        public static string LocalServerInstanceStartServerWaitUntilAcceptingConnections {
            get {
                return ResourceManager.GetString("LocalServerInstanceStartServerWaitUntilAcceptingConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Logger properties that define a log file path and name have not been set..
        /// </summary>
        public static string LogFileNotDefinedError {
            get {
                return ResourceManager.GetString("LogFileNotDefinedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log file {0} does not exist.
        /// </summary>
        public static string LogFileNotExistsErrorText {
            get {
                return ResourceManager.GetString("LogFileNotExistsErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap logo {
            get {
                object obj = ResourceManager.GetObject("logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MainLogo {
            get {
                object obj = ResourceManager.GetObject("MainLogo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MainLogo_Error {
            get {
                object obj = ResourceManager.GetObject("MainLogo_Error", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MainLogo_Input {
            get {
                object obj = ResourceManager.GetObject("MainLogo_Input", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MainLogo_Security {
            get {
                object obj = ResourceManager.GetObject("MainLogo_Security", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MainLogo_Success {
            get {
                object obj = ResourceManager.GetObject("MainLogo_Success", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MainLogo_Warn {
            get {
                object obj = ResourceManager.GetObject("MainLogo_Warn", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MainLogo1 {
            get {
                object obj = ResourceManager.GetObject("MainLogo1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Maintenance {
            get {
                object obj = ResourceManager.GetObject("Maintenance", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is a mandatory upgrade available for MySQL Configurator.
        ///To continue receiving product catalog updates, you must apply this upgrade.
        ///
        ///Do you want to apply this upgrade now?.
        /// </summary>
        public static string MandatoryUpgradeAvailableConsoleText {
            get {
                return ResourceManager.GetString("MandatoryUpgradeAvailableConsoleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To continue receiving product catalog updates, you must apply this upgrade..
        /// </summary>
        public static string MandatoryUpgradeAvailableGuiDetailText {
            get {
                return ResourceManager.GetString("MandatoryUpgradeAvailableGuiDetailText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mandatory MySQL Configurator Upgrade Available.
        /// </summary>
        public static string MandatoryUpgradeAvailableGuiTitleText {
            get {
                return ResourceManager.GetString("MandatoryUpgradeAvailableGuiTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid product catalog.
        /// </summary>
        public static string ManifestInvalidCaption {
            get {
                return ResourceManager.GetString("ManifestInvalidCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Configurator found an invalid product catalog. A valid product catalog is required for operation of the application.
        ///    The application must quit.
        ///
        ///  Please contact MySQL support for help correcting this issue.
        ///.
        /// </summary>
        public static string ManifestInvalidText {
            get {
                return ResourceManager.GetString("ManifestInvalidText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no packages to merge..
        /// </summary>
        public static string ManifestNoPackagesToMerge {
            get {
                return ResourceManager.GetString("ManifestNoPackagesToMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The downloaded product catalog was not applied as it doesn&apos;t have the required format. The new product catalog is supported by MySQL Configurator 1.4.36 or greater..
        /// </summary>
        public static string ManifestNotAppliedBecauseBadFormat {
            get {
                return ResourceManager.GetString("ManifestNotAppliedBecauseBadFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The newly downloaded product catalog was not applied because it does not contain any updates for the current product catalog..
        /// </summary>
        public static string ManifestNotAppliedBecauseOlder {
            get {
                return ResourceManager.GetString("ManifestNotAppliedBecauseOlder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The published manifest is not supported..
        /// </summary>
        public static string ManifestNotAppliedErrorTitle {
            get {
                return ResourceManager.GetString("ManifestNotAppliedErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new product catalog was not applied because it would require an Installer upgrade.
        ///    Please relaunch the Installer&apos;s graphical user interface to apply the upgrade..
        /// </summary>
        public static string ManifestNotAppliedRequireUpgrade {
            get {
                return ResourceManager.GetString("ManifestNotAppliedRequireUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load the product catalog..
        /// </summary>
        public static string ManifestNotLoadableCaption {
            get {
                return ResourceManager.GetString("ManifestNotLoadableCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest path &apos;{0}&apos; does not exist..
        /// </summary>
        public static string ManifestPathDoesNotExist {
            get {
                return ResourceManager.GetString("ManifestPathDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new manifest already exists. Skipping the manifest download..
        /// </summary>
        public static string ManifestPendingToBeProcessed {
            get {
                return ResourceManager.GetString("ManifestPendingToBeProcessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update the product catalog. Please check the log for more information..
        /// </summary>
        public static string ManifestUpdateFailed {
            get {
                return ResourceManager.GetString("ManifestUpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to update the product catalog because an upgrade was postponed by the user..
        /// </summary>
        public static string ManifestUpdateFailedByUserChoice {
            get {
                return ResourceManager.GetString("ManifestUpdateFailedByUserChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to update the product catalog because an upgrade of MySQL Configurator is in progress..
        /// </summary>
        public static string ManifestUpdateFailedUpdaterRunning {
            get {
                return ResourceManager.GetString("ManifestUpdateFailedUpdaterRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform the internet connection validation
        ///by checking the URLs specified by the user..
        /// </summary>
        public static string ManualInternetConnectionValidationTooltip {
            get {
                return ResourceManager.GetString("ManualInternetConnectionValidationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some MySQL products were not found. Please check your
        ///internet connection and restart the application to get the
        ///complete list of MySQL products automatically and enable
        ///the Maturity filter..
        /// </summary>
        public static string MaturityComboBoxFullManifestNotFound {
            get {
                return ResourceManager.GetString("MaturityComboBoxFullManifestNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 32bit.
        /// </summary>
        public static string MEB32bitFileNameSubstring {
            get {
                return ResourceManager.GetString("MEB32bitFileNameSubstring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 64bit.
        /// </summary>
        public static string MEB64bitFileNameSubstring {
            get {
                return ResourceManager.GetString("MEB64bitFileNameSubstring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please use this interface to specify the Agent user options.
        /// </summary>
        public static string MemConfigAgentOptionsCaption {
            get {
                return ResourceManager.GetString("MemConfigAgentOptionsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This user handles general monitoring tasks that do not require SUPER level privileges, lower .
        /// </summary>
        public static string MemConfigAgentOptionsGeneralUserTip {
            get {
                return ResourceManager.GetString("MemConfigAgentOptionsGeneralUserTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This user is used for statements that should be limited to a single connection, and can be run .
        /// </summary>
        public static string MemConfigAgentOptionsLimitedUserTip {
            get {
                return ResourceManager.GetString("MemConfigAgentOptionsLimitedUserTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agent name must not be blank..
        /// </summary>
        public static string MemConfigEnterpriseMonitorOptionsAgentNameTip {
            get {
                return ResourceManager.GetString("MemConfigEnterpriseMonitorOptionsAgentNameTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agent password must not be blank and must match the Re-enter box below..
        /// </summary>
        public static string MemConfigEnterpriseMonitorOptionsAgentPasswordTip {
            get {
                return ResourceManager.GetString("MemConfigEnterpriseMonitorOptionsAgentPasswordTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please supply the Enterprise Monitor options..
        /// </summary>
        public static string MemConfigEnterpriseMonitorOptionsCaption {
            get {
                return ResourceManager.GetString("MemConfigEnterpriseMonitorOptionsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host name must be an IP address..
        /// </summary>
        public static string MemConfigEnterpriseMonitorOptionsHostnameTip {
            get {
                return ResourceManager.GetString("MemConfigEnterpriseMonitorOptionsHostnameTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must supply Tomcat port number..
        /// </summary>
        public static string MemConfigEnterpriseMonitorOptionsTomcatSSLTip {
            get {
                return ResourceManager.GetString("MemConfigEnterpriseMonitorOptionsTomcatSSLTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to configure agent service..
        /// </summary>
        public static string MemConfigEventConfigureServiceError {
            get {
                return ResourceManager.GetString("MemConfigEventConfigureServiceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to configure agent service.
        /// </summary>
        public static string MemConfigEventConfigureServiceInfo {
            get {
                return ResourceManager.GetString("MemConfigEventConfigureServiceInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured agent service..
        /// </summary>
        public static string MemConfigEventConfigureServiceSuccess {
            get {
                return ResourceManager.GetString("MemConfigEventConfigureServiceSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed.
        /// </summary>
        public static string MemConfigEventConnectionVerifierFailure {
            get {
                return ResourceManager.GetString("MemConfigEventConnectionVerifierFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        public static string MemConfigEventConnectionVerifierSuccess {
            get {
                return ResourceManager.GetString("MemConfigEventConnectionVerifierSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed with error messagese:.
        /// </summary>
        public static string MemConfigEventExternalProcessFailMessagePrequelError {
            get {
                return ResourceManager.GetString("MemConfigEventExternalProcessFailMessagePrequelError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to run: .
        /// </summary>
        public static string MemConfigEventExternalProcessStartMessagePrequelInfo {
            get {
                return ResourceManager.GetString("MemConfigEventExternalProcessStartMessagePrequelInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create bootstrap.properties file..
        /// </summary>
        public static string MemConfigEventWritingBootstrapPropertiesError {
            get {
                return ResourceManager.GetString("MemConfigEventWritingBootstrapPropertiesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to create bootstrap.properties file..
        /// </summary>
        public static string MemConfigEventWritingBootstrapPropertiesInfo {
            get {
                return ResourceManager.GetString("MemConfigEventWritingBootstrapPropertiesInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created bootstrap.properties file..
        /// </summary>
        public static string MemConfigEventWritingBootstrapPropertiesSuccess {
            get {
                return ResourceManager.GetString("MemConfigEventWritingBootstrapPropertiesSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create new users.
        /// </summary>
        public static string MemConfigEventWritingNewUsersError {
            get {
                return ResourceManager.GetString("MemConfigEventWritingNewUsersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to create new users.
        /// </summary>
        public static string MemConfigEventWritingNewUsersInfo {
            get {
                return ResourceManager.GetString("MemConfigEventWritingNewUsersInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created new users.
        /// </summary>
        public static string MemConfigEventWritingNewUsersSuccess {
            get {
                return ResourceManager.GetString("MemConfigEventWritingNewUsersSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Admin password must not be blank?.
        /// </summary>
        public static string MemConfigMonitoredDBOptionsAdminPasswordTip {
            get {
                return ResourceManager.GetString("MemConfigMonitoredDBOptionsAdminPasswordTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Admin name must not be blank..
        /// </summary>
        public static string MemConfigMonitoredDBOptionsAdminUserTip {
            get {
                return ResourceManager.GetString("MemConfigMonitoredDBOptionsAdminUserTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please supply the monitored database information..
        /// </summary>
        public static string MemConfigMonitoredDBOptionsCaption {
            get {
                return ResourceManager.GetString("MemConfigMonitoredDBOptionsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must contain hostname or IP address..
        /// </summary>
        public static string MemConfigMonitoredDBOptionsHostnameTip {
            get {
                return ResourceManager.GetString("MemConfigMonitoredDBOptionsHostnameTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must supply mysql port number..
        /// </summary>
        public static string MemConfigMonitoredDBOptionsPortTip {
            get {
                return ResourceManager.GetString("MemConfigMonitoredDBOptionsPortTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select the types of monitoring to configure..
        /// </summary>
        public static string MemConfigMonitoringOptionsCaption {
            get {
                return ResourceManager.GetString("MemConfigMonitoringOptionsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A shared memory object with the name &apos;{0}&apos; already existis..
        /// </summary>
        public static string MemoryAlreadyExists {
            get {
                return ResourceManager.GetString("MemoryAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to merge manifest....
        /// </summary>
        public static string MergingManifest {
            get {
                return ResourceManager.GetString("MergingManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to merge the product catalog..
        /// </summary>
        public static string MergingProductCatalog {
            get {
                return ResourceManager.GetString("MergingProductCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connections will be migrated to use MySQL Workbench&apos;s connections file..
        /// </summary>
        public static string MigrateConnectionsToWorkbenchInfoDetail {
            get {
                return ResourceManager.GetString("MigrateConnectionsToWorkbenchInfoDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} now works with the connections file used by MySQL Workbench if it is installed.
        ///
        ///{0} will attempt to merge all existing connections with MySQL Workbench and in order to do this MySQLWorkbench must not be running.
        ///
        ///Please make sure MySQL Workbench is closed to continue with the merging operation.
        ///If you choose not to migrate connections now, you will be prompted later to perform the migration..
        /// </summary>
        public static string MigrateConnectionsToWorkbenchInfoMoreInfo {
            get {
                return ResourceManager.GetString("MigrateConnectionsToWorkbenchInfoMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to migrate connections now?.
        /// </summary>
        public static string MigrateConnectionsToWorkbenchInfoSubDetail {
            get {
                return ResourceManager.GetString("MigrateConnectionsToWorkbenchInfoSubDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database connections will be migrated.
        /// </summary>
        public static string MigrateConnectionsToWorkbenchInfoTitle {
            get {
                return ResourceManager.GetString("MigrateConnectionsToWorkbenchInfoTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Configurator has detected a product cache folder from a previous MySQL Configurator, do you want to migrate to the new product cache folder? Keep in mind that if you choose not to migrate, the previous Program Data folder for the older MySQL Configurator will be deleted and this action cannot be undone..
        /// </summary>
        public static string MigratePreviousProductCache {
            get {
                return ResourceManager.GetString("MigratePreviousProductCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap minus_sign {
            get {
                object obj = ResourceManager.GetObject("minus_sign", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap minus_sign1 {
            get {
                object obj = ResourceManager.GetObject("minus_sign1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum value for this field should be {0}.
        /// </summary>
        public static string MinValueRequired {
            get {
                return ResourceManager.GetString("MinValueRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; was not provided..
        /// </summary>
        public static string MissingParameterGenericError {
            get {
                return ResourceManager.GetString("MissingParameterGenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More information.
        /// </summary>
        public static string MoreInfoText {
            get {
                return ResourceManager.GetString("MoreInfoText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More Info.
        /// </summary>
        public static string MoreInfoText1 {
            get {
                return ResourceManager.GetString("MoreInfoText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap mos_logo_new {
            get {
                object obj = ResourceManager.GetObject("mos_logo_new", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some packages require access to your My Oracle Support account.  Please enter your credentials:.
        /// </summary>
        public static string MosAccountLoginText1 {
            get {
                return ResourceManager.GetString("MosAccountLoginText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leave user name blank to cancel..
        /// </summary>
        public static string MosAccountLoginText2 {
            get {
                return ResourceManager.GetString("MosAccountLoginText2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication failed.
        /// </summary>
        public static string MOSAuthFailed {
            get {
                return ResourceManager.GetString("MOSAuthFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication successful.
        /// </summary>
        public static string MOSAuthSuccess {
            get {
                return ResourceManager.GetString("MOSAuthSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internet Connection Failed.
        /// </summary>
        public static string MOSInternetConnectionFailed {
            get {
                return ResourceManager.GetString("MOSInternetConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid  credentials or lack of support identifiers. Support Identifiers are the &quot;contract&quot; between your organization and Oracle. They define the privileges you have to file service requests, download
        ///patches and more. These privileges are approved and set by an administrator
        ///in your organization. You need at least one support identifier in your
        ///account to get to most features..
        /// </summary>
        public static string MOSLoginFailedText {
            get {
                return ResourceManager.GetString("MOSLoginFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Credentials required.
        /// </summary>
        public static string MOSLoginPromptEmptyUserOrPassword {
            get {
                return ResourceManager.GetString("MOSLoginPromptEmptyUserOrPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login Failed !.
        /// </summary>
        public static string MOSLoginPromptFailed {
            get {
                return ResourceManager.GetString("MOSLoginPromptFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -     Verifying    -.
        /// </summary>
        public static string MOSLoginPromptVerifying {
            get {
                return ResourceManager.GetString("MOSLoginPromptVerifying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User is already authenticated..
        /// </summary>
        public static string MOSUserAlreadyAuthenticated {
            get {
                return ResourceManager.GetString("MOSUserAlreadyAuthenticated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move down the selected URL one space..
        /// </summary>
        public static string MoveDownUrlTooltip {
            get {
                return ResourceManager.GetString("MoveDownUrlTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move up the selected URL one space..
        /// </summary>
        public static string MoveUpUrlTooltip {
            get {
                return ResourceManager.GetString("MoveUpUrlTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## MySQL Server Instance Configuration File Template
        ///## ----------------------------------------------------------------------
        ///## Version 1.0.10
        ///##
        ///## &lt;-- Indicates Template comment.  These lines will not be in the output
        ///##
        ///## Replaceable things must be like:
        ///## 
        ///## # [VARIABLE_NAME]=&quot;Formula&quot;
        ///## parameter=default value
        ///##
        ///##  For example:
        ///##
        ///##  # [PORT]=&quot;port&quot;
        ///##  port=3306
        ///##
        ///## Note - In the example, the formula consists of a variable named &apos;port&apos; which must be defined before processing [rest of string was truncated]&quot;;.
        /// </summary>
        public static string my_template_5_6 {
            get {
                return ResourceManager.GetString("my_template_5_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## MySQL Server Instance Configuration File Template
        ///## ----------------------------------------------------------------------
        ///## Version 1.0.10
        ///##
        ///## &lt;-- Indicates Template comment.  These lines will not be in the output
        ///##
        ///## Replaceable things must be like:
        ///## 
        ///## # [VARIABLE_NAME]=&quot;Formula&quot;
        ///## parameter=default value
        ///##
        ///##  For example:
        ///##
        ///##  # [PORT]=&quot;port&quot;
        ///##  port=3306
        ///##
        ///## Note - In the example, the formula consists of a variable named &apos;port&apos; which must be defined before processing [rest of string was truncated]&quot;;.
        /// </summary>
        public static string my_template_5_7 {
            get {
                return ResourceManager.GetString("my_template_5_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## MySQL Server Instance Configuration File Template
        ///## ----------------------------------------------------------------------
        ///## Version 1.0.0
        ///##
        ///## &lt;-- Indicates Template comment.  These lines will not be in the output
        ///##
        ///## Replaceable things must be like:
        ///## 
        ///## # [VARIABLE_NAME]=&quot;Formula&quot;
        ///## parameter=default value
        ///##
        ///##  For example:
        ///##
        ///##  # [PORT]=&quot;port&quot;
        ///##  port=3306
        ///##
        ///## Note - In the example, the formula consists of a variable named &apos;port&apos; which must be defined before processing. [rest of string was truncated]&quot;;.
        /// </summary>
        public static string my_template_8_0 {
            get {
                return ResourceManager.GetString("my_template_8_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## MySQL Server Instance Configuration File Template
        ///## ----------------------------------------------------------------------
        ///## Version 1.0.0
        ///##
        ///## &lt;-- Indicates Template comment.  These lines will not be in the output
        ///##
        ///## Replaceable things must be like:
        ///## 
        ///## # [VARIABLE_NAME]=&quot;Formula&quot;
        ///## parameter=default value
        ///##
        ///##  For example:
        ///##
        ///##  # [PORT]=&quot;port&quot;
        ///##  port=3306
        ///##
        ///## Note - In the example, the formula consists of a variable named &apos;port&apos; which must be defined before processing.
        ///##
        ///## In additi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string my_template_8_x {
            get {
                return ResourceManager.GetString("my_template_8_x", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] MySql_Data {
            get {
                object obj = ResourceManager.GetObject("MySql_Data", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon mysql_server {
            get {
                object obj = ResourceManager.GetObject("mysql_server", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current MySQL Server configuration is performing the following actions. If you cancel the configuration you will have to do them manually:
        ///	• Creating root account.
        ///	• Doing something
        ///	• Doing something.
        /// </summary>
        public static string MySQLConfigurationActionsInfoText {
            get {
                return ResourceManager.GetString("MySQLConfigurationActionsInfoText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MySQL developer community..
        /// </summary>
        public static string MySQLDevZoneDescription {
            get {
                return ResourceManager.GetString("MySQLDevZoneDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://dev.mysql.com.
        /// </summary>
        public static string MySQLDevZoneURL {
            get {
                return ResourceManager.GetString("MySQLDevZoneURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View the latest MySQL documentation..
        /// </summary>
        public static string MySQLDocumentationDescription {
            get {
                return ResourceManager.GetString("MySQLDocumentationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://dev.mysql.com/doc/.
        /// </summary>
        public static string MySQLDocumentationURL {
            get {
                return ResourceManager.GetString("MySQLDocumentationURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL error log.
        /// </summary>
        public static string MySQLErrorLogText {
            get {
                return ResourceManager.GetString("MySQLErrorLogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL general log.
        /// </summary>
        public static string MySQLGeneralLogText {
            get {
                return ResourceManager.GetString("MySQLGeneralLogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MySQLInstallerAbout {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerAbout", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Configurator.
        /// </summary>
        public static string MySQLInstallerCaption {
            get {
                return ResourceManager.GetString("MySQLInstallerCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MySQLInstallerConfig_Done {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerConfig_Done", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MySQLInstallerConfig_Done1 {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerConfig_Done1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon MySQLInstallerConfig_DoneIcon {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerConfig_DoneIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MySQLInstallerConfig_Error {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerConfig_Error", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MySQLInstallerConfig_Error1 {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerConfig_Error1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon MySQLInstallerConfig_ErrorIcon {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerConfig_ErrorIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon MySQLInstallerConfig_InProgress {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerConfig_InProgress", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MySQLInstallerLogo {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerLogo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MySQLInstallerSettings {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerSettings", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap MySQLInstallerUpdateAvailable {
            get {
                object obj = ResourceManager.GetObject("MySQLInstallerUpdateAvailable", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully executed the MySQLInstallerUpdater.exe..
        /// </summary>
        public static string MySQLInstallerUpdaterExecuted {
            get {
                return ResourceManager.GetString("MySQLInstallerUpdaterExecuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to execute MySQLInstallerUpdater.exe..
        /// </summary>
        public static string MySQLInstallerUpdaterExecuting {
            get {
                return ResourceManager.GetString("MySQLInstallerUpdaterExecuting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn about all MySQL products..
        /// </summary>
        public static string MySQLProductsDescription {
            get {
                return ResourceManager.GetString("MySQLProductsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://www.mysql.com/products/.
        /// </summary>
        public static string MySQLProductsURL {
            get {
                return ResourceManager.GetString("MySQLProductsURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information about this and older releases..
        /// </summary>
        public static string MySQLReleaseNotesDescription {
            get {
                return ResourceManager.GetString("MySQLReleaseNotesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot consist of only digits..
        /// </summary>
        public static string MySqlSchemaTableNameAllDigitsError {
            get {
                return ResourceManager.GetString("MySqlSchemaTableNameAllDigitsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot be empty or consist of only white space characters..
        /// </summary>
        public static string MySqlSchemaTableNameEmptyOrWhiteSpaceError {
            get {
                return ResourceManager.GetString("MySqlSchemaTableNameEmptyOrWhiteSpaceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot end with white space characters..
        /// </summary>
        public static string MySqlSchemaTableNameEndsWithWhiteSpaceError {
            get {
                return ResourceManager.GetString("MySqlSchemaTableNameEndsWithWhiteSpaceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot exceed the maximum allowed length of {0} characters..
        /// </summary>
        public static string MySqlSchemaTableNameExceedsMaxLengthError {
            get {
                return ResourceManager.GetString("MySqlSchemaTableNameExceedsMaxLengthError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script executed successfully..
        /// </summary>
        public static string MySqlServerInstanceInfoExecuteScriptExecutionSuccess {
            get {
                return ResourceManager.GetString("MySqlServerInstanceInfoExecuteScriptExecutionSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect to {0} at port {1}..
        /// </summary>
        public static string MySqlServerInstanceInfoExecuteScriptsCannotConnectError {
            get {
                return ResourceManager.GetString("MySqlServerInstanceInfoExecuteScriptsCannotConnectError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following error ocurred attempting to execute script:{1}{0}{1}.
        /// </summary>
        public static string MySqlServerInstanceInfoExecuteScriptsExecutionError {
            get {
                return ResourceManager.GetString("MySqlServerInstanceInfoExecuteScriptsExecutionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing script:.
        /// </summary>
        public static string MySqlServerInstanceInfoExecutingScript {
            get {
                return ResourceManager.GetString("MySqlServerInstanceInfoExecutingScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The host name or IP address is not well formed..
        /// </summary>
        public static string MySqlServerInstanceInvalidHostOrIpError {
            get {
                return ResourceManager.GetString("MySqlServerInstanceInvalidHostOrIpError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host name or IP address is required..
        /// </summary>
        public static string MySqlServerInstanceRequiredHostOrIpError {
            get {
                return ResourceManager.GetString("MySqlServerInstanceRequiredHostOrIpError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port number is outside valid range of {0} and {1}..
        /// </summary>
        public static string MySqlServerInvalidPortRange {
            get {
                return ResourceManager.GetString("MySqlServerInvalidPortRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password does not meet the minimum length requirement of 4 characters..
        /// </summary>
        public static string MySqlServerPasswordNotGoodEnough {
            get {
                return ResourceManager.GetString("MySqlServerPasswordNotGoodEnough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password is required..
        /// </summary>
        public static string MySqlServerPasswordRequired {
            get {
                return ResourceManager.GetString("MySqlServerPasswordRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified port is already in use..
        /// </summary>
        public static string MySqlServerPortInUse {
            get {
                return ResourceManager.GetString("MySqlServerPortInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value is not valid..
        /// </summary>
        public static string MySqlServerPortNumberInvalid {
            get {
                return ResourceManager.GetString("MySqlServerPortNumberInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port number is required.
        /// </summary>
        public static string MySqlServerPortNumberRequired {
            get {
                return ResourceManager.GetString("MySqlServerPortNumberRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a valid user name..
        /// </summary>
        public static string MySqlServerUsernameInvalid {
            get {
                return ResourceManager.GetString("MySqlServerUsernameInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name &quot;root&quot; is reserved and cannot be used..
        /// </summary>
        public static string MySqlServerUserNameInvalidRoot {
            get {
                return ResourceManager.GetString("MySqlServerUserNameInvalidRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name must not exceed 32 characters..
        /// </summary>
        public static string MySqlServerUsernameMaxLengthExceeded {
            get {
                return ResourceManager.GetString("MySqlServerUsernameMaxLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name is required..
        /// </summary>
        public static string MySqlServerUsernameRequired {
            get {
                return ResourceManager.GetString("MySqlServerUsernameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} service is taking longer than expected to start.
        /// </summary>
        public static string MySQLServiceStartDelayedText {
            get {
                return ResourceManager.GetString("MySQLServiceStartDelayedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Server seems to be still writing to the InnoDB log file, you are advised to wait..
        /// </summary>
        public static string MySQLServiceStartDelayInnoDBLogText {
            get {
                return ResourceManager.GetString("MySQLServiceStartDelayInnoDBLogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service start delay may be caused by a variety of factors, like slow disk access or installing on a Virtual Machine. You are advised to wait..
        /// </summary>
        public static string MySQLServiceStartDelayUnknownText {
            get {
                return ResourceManager.GetString("MySQLServiceStartDelayUnknownText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help to get you started..
        /// </summary>
        public static string MySQLTutorialsDescription {
            get {
                return ResourceManager.GetString("MySQLTutorialsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://dev.mysql.com/tech-resources/articles/mysql_intro.html.
        /// </summary>
        public static string MySQLTutorialsURL {
            get {
                return ResourceManager.GetString("MySQLTutorialsURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://www.mysql.com/.
        /// </summary>
        public static string MySQLURL {
            get {
                return ResourceManager.GetString("MySQLURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name is required to establish a connection..
        /// </summary>
        public static string MySqlUserNameRequiredError {
            get {
                return ResourceManager.GetString("MySqlUserNameRequiredError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Watch the latest online webinars..
        /// </summary>
        public static string MySQLWebinarsDescription {
            get {
                return ResourceManager.GetString("MySQLWebinarsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://www.mysql.com/news-and-events/web-seminars/index.html.
        /// </summary>
        public static string MySQLWebinarsURL {
            get {
                return ResourceManager.GetString("MySQLWebinarsURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More information about MySQL..
        /// </summary>
        public static string MySQLWhitePappersDescription {
            get {
                return ResourceManager.GetString("MySQLWhitePappersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://www.mysql.com/why-mysql/white-papers/.
        /// </summary>
        public static string MySQLWhitePappersURL {
            get {
                return ResourceManager.GetString("MySQLWhitePappersURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;No.
        /// </summary>
        public static string NegativeConfirmationText {
            get {
                return ResourceManager.GetString("NegativeConfirmationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;No.
        /// </summary>
        public static string NegativeConfirmationText1 {
            get {
                return ResourceManager.GetString("NegativeConfirmationText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The standalone MySQL Fabric product is installed. The selected version of MySQL Utilities contains a previous version of the MySQL Fabric tool. A more recent release of MySQL Utilities is available that does not contain a previous version of MySQL Fabric..
        /// </summary>
        public static string NewFabricPackageInstalled {
            get {
                return ResourceManager.GetString("NewFabricPackageInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} new products have been found..
        /// </summary>
        public static string NewProductsFound {
            get {
                return ResourceManager.GetString("NewProductsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Next &gt;.
        /// </summary>
        public static string NextButtonDefaultText {
            get {
                return ResourceManager.GetString("NextButtonDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Next &gt;.
        /// </summary>
        public static string NextButtonDefaultText1 {
            get {
                return ResourceManager.GetString("NextButtonDefaultText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Execute .
        /// </summary>
        public static string NextButtonExecuteText {
            get {
                return ResourceManager.GetString("NextButtonExecuteText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Execute.
        /// </summary>
        public static string NextButtonExecuteText1 {
            get {
                return ResourceManager.GetString("NextButtonExecuteText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Finish.
        /// </summary>
        public static string NextButtonFinishText {
            get {
                return ResourceManager.GetString("NextButtonFinishText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string NoButtonText {
            get {
                return ResourceManager.GetString("NoButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No compatible servers were found.  You&apos;ll need to cancel this wizard and install one..
        /// </summary>
        public static string NoCompatibleServers {
            get {
                return ResourceManager.GetString("NoCompatibleServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration file was not found.  Please reinstall a MySQL Configurator bundle..
        /// </summary>
        public static string NoConfigFileFound {
            get {
                return ResourceManager.GetString("NoConfigFileFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No data directory for this sever installation was found..
        /// </summary>
        public static string NoDataDirectoryFoundText {
            get {
                return ResourceManager.GetString("NoDataDirectoryFoundText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No connection was detected, local IP addresses could not be loaded..
        /// </summary>
        public static string NoNetworkConnectionNoIpAddressesLoadedText {
            get {
                return ResourceManager.GetString("NoNetworkConnectionNoIpAddressesLoadedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Configurator did not find packages in the current bundle suitable for installation..
        /// </summary>
        public static string NoPackagesMatchingSetupTypeDetailText {
            get {
                return ResourceManager.GetString("NoPackagesMatchingSetupTypeDetailText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The packages included in the current bundle that match the following were not found:
        ///  * The selected setup type: {0}
        ///  * The operating system architecture: {1}
        ///  * The MySQL Configurator license type: {2}
        ///.
        /// </summary>
        public static string NoPackagesMatchingSetupTypeMoreInfoText {
            get {
                return ResourceManager.GetString("NoPackagesMatchingSetupTypeMoreInfoText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No packages found.
        /// </summary>
        public static string NoPackagesMatchingSetupTypeTitleText {
            get {
                return ResourceManager.GetString("NoPackagesMatchingSetupTypeTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be used as a boolean value..
        /// </summary>
        public static string NotProperValueForBool {
            get {
                return ResourceManager.GetString("NotProperValueForBool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be used as an integer value..
        /// </summary>
        public static string NotProperValueForInt {
            get {
                return ResourceManager.GetString("NotProperValueForInt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a proper value for type {1}.
        /// </summary>
        public static string NotProperValueForType {
            get {
                return ResourceManager.GetString("NotProperValueForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be used as an unsigned integer value..
        /// </summary>
        public static string NotProperValueForUInt {
            get {
                return ResourceManager.GetString("NotProperValueForUInt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no product upgrades available.  If you believe this to be in error, you can go back to the previous screen and check for an updated product catalog..
        /// </summary>
        public static string NoUpgradeableProducts {
            get {
                return ResourceManager.GetString("NoUpgradeableProducts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None of your products have upgrades available. If you believe this is wrong, you can use the Catalog button to check for a product catalog update..
        /// </summary>
        public static string NoUpgradesCanRefreshCatalog {
            get {
                return ResourceManager.GetString("NoUpgradesCanRefreshCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offline mode is currently enabled. Skipping operation..
        /// </summary>
        public static string OfflineModeEnabled {
            get {
                return ResourceManager.GetString("OfflineModeEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ok_sign {
            get {
                object obj = ResourceManager.GetObject("ok_sign", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;OK.
        /// </summary>
        public static string OKButtonDefaultText {
            get {
                return ResourceManager.GetString("OKButtonDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;OK.
        /// </summary>
        public static string OKButtonDefaultText1 {
            get {
                return ResourceManager.GetString("OKButtonDefaultText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string OkButtonDefaultText2 {
            get {
                return ResourceManager.GetString("OkButtonDefaultText2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press OK to continue or cancel to go back and change it..
        /// </summary>
        public static string OkToContinue {
            get {
                return ResourceManager.GetString("OkToContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old Password:.
        /// </summary>
        public static string OldPasswordLabelText {
            get {
                return ResourceManager.GetString("OldPasswordLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no updates available to the MySQL product catalog..
        /// </summary>
        public static string OnLatestCatalog {
            get {
                return ResourceManager.GetString("OnLatestCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is only one upgrade available for the selected product..
        /// </summary>
        public static string OnlyOneUpgradeAvailable {
            get {
                return ResourceManager.GetString("OnlyOneUpgradeAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Windows Firewall port for network access.
        /// </summary>
        public static string OpenFirewallPort {
            get {
                return ResourceManager.GetString("OpenFirewallPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Windows Firewall ports for network access.
        /// </summary>
        public static string OpenFirewallPorts {
            get {
                return ResourceManager.GetString("OpenFirewallPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an optional upgrade available for MySQL Configurator.
        ///You will continue receiving product catalog updates if you do not apply the upgrade.
        ///
        ///Do you want to apply this upgrade now?.
        /// </summary>
        public static string OptionalUpgradeAvailableConsoleText {
            get {
                return ResourceManager.GetString("OptionalUpgradeAvailableConsoleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You  will continue receiving product catalog updates if you do not apply the upgrade..
        /// </summary>
        public static string OptionalUpgradeAvailableGuiDetailText {
            get {
                return ResourceManager.GetString("OptionalUpgradeAvailableGuiDetailText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional MySQL Configurator Upgrade Available.
        /// </summary>
        public static string OptionalUpgradeAvailableGuiTitleText {
            get {
                return ResourceManager.GetString("OptionalUpgradeAvailableGuiTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading necessary packages....
        /// </summary>
        public static string OverallStatusDownloading {
            get {
                return ResourceManager.GetString("OverallStatusDownloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing requested packages. Please wait....
        /// </summary>
        public static string OverallStatusInstalling {
            get {
                return ResourceManager.GetString("OverallStatusInstalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap OverviewSelection {
            get {
                object obj = ResourceManager.GetObject("OverviewSelection", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package has already been queued..
        /// </summary>
        public static string PackageAlreadyQueued {
            get {
                return ResourceManager.GetString("PackageAlreadyQueued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has failing requirements.
        /// </summary>
        public static string PackageHasFailingRequirements {
            get {
                return ResourceManager.GetString("PackageHasFailingRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (available on this system).
        /// </summary>
        public static string PackagesAlreadyInstalled {
            get {
                return ResourceManager.GetString("PackagesAlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (available in this package).
        /// </summary>
        public static string PackagesAvailable {
            get {
                return ResourceManager.GetString("PackagesAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (available for commercial download).
        /// </summary>
        public static string PackagesAvailableForCommercialDownload {
            get {
                return ResourceManager.GetString("PackagesAvailableForCommercialDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (available for download).
        /// </summary>
        public static string PackagesAvailableForDownload {
            get {
                return ResourceManager.GetString("PackagesAvailableForDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The packages included in the current bundle are the following:.
        /// </summary>
        public static string PackagesIncludedInCurrentBundleText {
            get {
                return ResourceManager.GetString("PackagesIncludedInCurrentBundleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to parse {0} as a number..
        /// </summary>
        public static string ParseAsNumberFailed {
            get {
                return ResourceManager.GetString("ParseAsNumberFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a {0} Login.
        /// </summary>
        public static string PasswordDialogLargeTitle {
            get {
                return ResourceManager.GetString("PasswordDialogLargeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password cannot be empty and is required..
        /// </summary>
        public static string PasswordDialogRequiredError {
            get {
                return ResourceManager.GetString("PasswordDialogRequiredError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value given for password ({1}) for {0} is not valid..
        /// </summary>
        public static string PasswordInvalid {
            get {
                return ResourceManager.GetString("PasswordInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value given for password ({1}) for {0} is not valid..
        /// </summary>
        public static string PasswordInvalid1 {
            get {
                return ResourceManager.GetString("PasswordInvalid1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password:.
        /// </summary>
        public static string PasswordLabelText {
            get {
                return ResourceManager.GetString("PasswordLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password does not meet the minimum length requirement of 4 characters..
        /// </summary>
        public static string PasswordNotGoodEnough {
            get {
                return ResourceManager.GetString("PasswordNotGoodEnough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error resetting password..
        /// </summary>
        public static string PasswordResetErrorDetail {
            get {
                return ResourceManager.GetString("PasswordResetErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error ocurred trying to reset the password for the current user.
        ///Please select your MySQL connection again to retry..
        /// </summary>
        public static string PasswordResetErrorDetailText {
            get {
                return ResourceManager.GetString("PasswordResetErrorDetailText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password Reset Error.
        /// </summary>
        public static string PasswordResetErrorTitleText {
            get {
                return ResourceManager.GetString("PasswordResetErrorTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The passwords do not match..
        /// </summary>
        public static string PasswordsDoNotMatch {
            get {
                return ResourceManager.GetString("PasswordsDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading password&apos;s vault file..
        /// </summary>
        public static string PasswordsFileLoadError {
            get {
                return ResourceManager.GetString("PasswordsFileLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error saving password&apos;s vault file..
        /// </summary>
        public static string PasswordsFileSaveError {
            get {
                return ResourceManager.GetString("PasswordsFileSaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new password and its confirmation do not match. Please enter them again and make sure they match..
        /// </summary>
        public static string PasswordsMismatchErrorText {
            get {
                return ResourceManager.GetString("PasswordsMismatchErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected path is already being used by a pending installation or change..
        /// </summary>
        public static string PathAlreadyUsed {
            get {
                return ResourceManager.GetString("PathAlreadyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected path is already being used by a pending installation or change..
        /// </summary>
        public static string PathAlreadyUsed1 {
            get {
                return ResourceManager.GetString("PathAlreadyUsed1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path &apos;{0}&apos; does not exist..
        /// </summary>
        public static string PathDoesNotExist {
            get {
                return ResourceManager.GetString("PathDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected path already exists..
        /// </summary>
        public static string PathExistsWarning {
            get {
                return ResourceManager.GetString("PathExistsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected path already exists..
        /// </summary>
        public static string PathExistsWarning1 {
            get {
                return ResourceManager.GetString("PathExistsWarning1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path contains invalid characters..
        /// </summary>
        public static string PathInvalidBadCharactersError {
            get {
                return ResourceManager.GetString("PathInvalidBadCharactersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drive does not exist..
        /// </summary>
        public static string PathInvalidDriveNotFoundError {
            get {
                return ResourceManager.GetString("PathInvalidDriveNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path cannot end with a \&quot;.\&quot;. character..
        /// </summary>
        public static string PathInvalidEndsInDotError {
            get {
                return ResourceManager.GetString("PathInvalidEndsInDotError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected path is not valid..
        /// </summary>
        public static string PathInvalidError {
            get {
                return ResourceManager.GetString("PathInvalidError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected path is not valid..
        /// </summary>
        public static string PathInvalidError1 {
            get {
                return ResourceManager.GetString("PathInvalidError1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path does not conform to an absolute path starting with \&quot;&lt;drive letter&gt;:\\.\&quot;.
        /// </summary>
        public static string PathInvalidFormatError {
            get {
                return ResourceManager.GetString("PathInvalidFormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum length for a path is three characters..
        /// </summary>
        public static string PathInvalidMinimumLengthError {
            get {
                return ResourceManager.GetString("PathInvalidMinimumLengthError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path is not an absolute path..
        /// </summary>
        public static string PathInvalidNotAbsoluteError {
            get {
                return ResourceManager.GetString("PathInvalidNotAbsoluteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the drives in this machine. Check that you have the correct permissions..
        /// </summary>
        public static string PathInvalidUnableToGetDrivesError {
            get {
                return ResourceManager.GetString("PathInvalidUnableToGetDrivesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response has a non-OK status: {0}. Cannot assemble a payload..
        /// </summary>
        public static string PayloadAssembleFailed {
            get {
                return ResourceManager.GetString("PayloadAssembleFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pending for user input.
        /// </summary>
        public static string PendingForUserInputStatusLabelText {
            get {
                return ResourceManager.GetString("PendingForUserInputStatusLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preparing new payload for extra POST to URL &apos;{0}&apos;..
        /// </summary>
        public static string PerformExtrasPostRequest {
            get {
                return ResourceManager.GetString("PerformExtrasPostRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performing an initial GET request to the {0} URL....
        /// </summary>
        public static string PerformGetRequest {
            get {
                return ResourceManager.GetString("PerformGetRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending a POST request to authenticate into MOS using URL: &apos;{0}&apos;....
        /// </summary>
        public static string PerformPostRequest {
            get {
                return ResourceManager.GetString("PerformPostRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A named pipe with the name &apos;{0}&apos; already exists..
        /// </summary>
        public static string PipeAlreadyExists {
            get {
                return ResourceManager.GetString("PipeAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} name cannot contain back slashes (&apos;\&apos;)..
        /// </summary>
        public static string PipeOrSharedMemoryNameBackSlashesError {
            get {
                return ResourceManager.GetString("PipeOrSharedMemoryNameBackSlashesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entire {0} name string cannot be more than 256 characters long..
        /// </summary>
        public static string PipeOrSharedMemoryNameLengthError {
            get {
                return ResourceManager.GetString("PipeOrSharedMemoryNameLengthError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} name is required, it cannot be null, empty or contain only white spaces..
        /// </summary>
        public static string PipeOrSharedMemoryNameRequiredError {
            get {
                return ResourceManager.GetString("PipeOrSharedMemoryNameRequiredError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap plus_sign {
            get {
                object obj = ResourceManager.GetObject("plus_sign", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap plus_sign1 {
            get {
                object obj = ResourceManager.GetObject("plus_sign1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port {0} is not currently available..
        /// </summary>
        public static string PortNotAvailable {
            get {
                return ResourceManager.GetString("PortNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port {0} is not currently available..
        /// </summary>
        public static string PortNotAvailable1 {
            get {
                return ResourceManager.GetString("PortNotAvailable1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Yes.
        /// </summary>
        public static string PositiveConfirmationText {
            get {
                return ResourceManager.GetString("PositiveConfirmationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Yes.
        /// </summary>
        public static string PositiveConfirmationText1 {
            get {
                return ResourceManager.GetString("PositiveConfirmationText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process for {0} is not running..
        /// </summary>
        public static string ProcessNotRunningText {
            get {
                return ResourceManager.GetString("ProcessNotRunningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing the registry key {0}. The error was: {1}..
        /// </summary>
        public static string ProcessRegistryKeyFailed {
            get {
                return ResourceManager.GetString("ProcessRegistryKeyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dowloading the product catalog is taking longer than expected. Do you wish to continue waiting?.
        /// </summary>
        public static string ProductCatalogDownloadDelay {
            get {
                return ResourceManager.GetString("ProductCatalogDownloadDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping download of the product catalog..
        /// </summary>
        public static string ProductCatalogDownloadSkipped {
            get {
                return ResourceManager.GetString("ProductCatalogDownloadSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded product catalog..
        /// </summary>
        public static string ProductCatalogLoaded {
            get {
                return ResourceManager.GetString("ProductCatalogLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading product catalog..
        /// </summary>
        public static string ProductCatalogLoading {
            get {
                return ResourceManager.GetString("ProductCatalogLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product catalog loading failed. Exiting now..
        /// </summary>
        public static string ProductCatalogLoadingFailed {
            get {
                return ResourceManager.GetString("ProductCatalogLoadingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new product catalog has been merged with the existing product catalog..
        /// </summary>
        public static string ProductCatalogMerged {
            get {
                return ResourceManager.GetString("ProductCatalogMerged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No packages found to merge..
        /// </summary>
        public static string ProductCatalogNotMerged {
            get {
                return ResourceManager.GetString("ProductCatalogNotMerged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The product catalog has not yet been loaded. Skipping merge operation..
        /// </summary>
        public static string ProductCatalogNotYetLoaded {
            get {
                return ResourceManager.GetString("ProductCatalogNotYetLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product catalog update cancelled..
        /// </summary>
        public static string ProductCatalogUpdateCancelled {
            get {
                return ResourceManager.GetString("ProductCatalogUpdateCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The proxy server must be provided..
        /// </summary>
        public static string ProxyEmptyServerName {
            get {
                return ResourceManager.GetString("ProxyEmptyServerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text could not be converted to a port number..
        /// </summary>
        public static string ProxyInvalidPortNumber {
            get {
                return ResourceManager.GetString("ProxyInvalidPortNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide a valid port number in the range of 0 to 65536..
        /// </summary>
        public static string ProxyOutOfRangePortNumber {
            get {
                return ResourceManager.GetString("ProxyOutOfRangePortNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get the proxy details. Please ensure that the proxy is set up correctly in your system settings..
        /// </summary>
        public static string ProxyRetrievalFailed {
            get {
                return ResourceManager.GetString("ProxyRetrievalFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap question_mark {
            get {
                object obj = ResourceManager.GetObject("question_mark", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready to remove.
        /// </summary>
        public static string ReadyToRemoveStatusLabelText {
            get {
                return ResourceManager.GetString("ReadyToRemoveStatusLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some products, including MySQL Configurator, might not work properly until you restart your system..
        /// </summary>
        public static string RebootWarning {
            get {
                return ResourceManager.GetString("RebootWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refreshing package requirements.
        /// </summary>
        public static string RefreshingRequirementsData {
            get {
                return ResourceManager.GetString("RefreshingRequirementsData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No registry key was provided..
        /// </summary>
        public static string RegistryKeyMissing {
            get {
                return ResourceManager.GetString("RegistryKeyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No matching property with the specified Value Name was found for {0}..
        /// </summary>
        public static string RegistryValueNameMissing {
            get {
                return ResourceManager.GetString("RegistryValueNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid download found for product {0}.
        /// </summary>
        public static string RemoteFileNotFound {
            get {
                return ResourceManager.GetString("RemoteFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstallation done.
        /// </summary>
        public static string RemovalFinishedTitle {
            get {
                return ResourceManager.GetString("RemovalFinishedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon Remove {
            get {
                object obj = ResourceManager.GetObject("Remove", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Data Folder?.
        /// </summary>
        public static string RemoveDataFolderCaption {
            get {
                return ResourceManager.GetString("RemoveDataFolderCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove data folder found at &apos;{0}&apos;?.
        /// </summary>
        public static string RemoveDataFolderText {
            get {
                return ResourceManager.GetString("RemoveDataFolderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The removal for some products has failed or was cancelled by the user.
        ///You can find more information about the failures in the &apos;Log&apos; tab..
        /// </summary>
        public static string RemoveFailed {
            get {
                return ResourceManager.GetString("RemoveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove User Generated Files.
        /// </summary>
        public static string RemoveInstallFolderCaption {
            get {
                return ResourceManager.GetString("RemoveInstallFolderCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the configuration folder.
        /// </summary>
        public static string RemoveOldRouterConfigurationStep {
            get {
                return ResourceManager.GetString("RemoveOldRouterConfigurationStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing MySQL Router Windows service.
        /// </summary>
        public static string RemoveOldService {
            get {
                return ResourceManager.GetString("RemoveOldService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An older version of MySQL Utilities that contains MySQL Fabric was detected. When this installation completes, the machine will have two versions of MySQL Fabric installed. Please manually uninstall the combined MySQL Utilities and MySQL Fabric product to avoid any conflicts..
        /// </summary>
        public static string RemovePreviousUtilitiesAndFabric {
            get {
                return ResourceManager.GetString("RemovePreviousUtilitiesAndFabric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel removing products?.
        /// </summary>
        public static string RemoveProductsWizardCancelConfirmationText {
            get {
                return ResourceManager.GetString("RemoveProductsWizardCancelConfirmationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove configuration folder found at &quot;{0}&quot; (it may contain data)?.
        /// </summary>
        public static string RemoveRouterConfigFolderText {
            get {
                return ResourceManager.GetString("RemoveRouterConfigFolderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove configuration folder.
        /// </summary>
        public static string RemoveRouterConfigFolderTitle {
            get {
                return ResourceManager.GetString("RemoveRouterConfigFolderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Steps.
        /// </summary>
        public static string RemoveSteps {
            get {
                return ResourceManager.GetString("RemoveSteps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration removal operation has completed..
        /// </summary>
        public static string RemoveStepsFinished {
            get {
                return ResourceManager.GetString("RemoveStepsFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration removal operation was successful.
        ///Click Finish to continue..
        /// </summary>
        public static string RemoveSuccess {
            get {
                return ResourceManager.GetString("RemoveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration removal operation was successful, however, some errors were identified that may require manual intervention. Please review the log for more details.
        ///Click Finish to continue..
        /// </summary>
        public static string RemoveSuccessWithErrors {
            get {
                return ResourceManager.GetString("RemoveSuccessWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the server configuration file..
        /// </summary>
        public static string RemovingConfigurationFileText {
            get {
                return ResourceManager.GetString("RemovingConfigurationFileText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the server data directory..
        /// </summary>
        public static string RemovingDataDirectoryText {
            get {
                return ResourceManager.GetString("RemovingDataDirectoryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the Firewall rule created for port {0}..
        /// </summary>
        public static string RemovingFirewallRuleText {
            get {
                return ResourceManager.GetString("RemovingFirewallRuleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the old router configuration..
        /// </summary>
        public static string RemovingOldRouterConfigurationText {
            get {
                return ResourceManager.GetString("RemovingOldRouterConfigurationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the Windows service created for this router installation..
        /// </summary>
        public static string RemovingOldRouterServiceText {
            get {
                return ResourceManager.GetString("RemovingOldRouterServiceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the sandbox InnoDB Cluster..
        /// </summary>
        public static string RemovingSandboxInnoDbClusterText {
            get {
                return ResourceManager.GetString("RemovingSandboxInnoDbClusterText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting the existing service..
        /// </summary>
        public static string RemovingServiceText {
            get {
                return ResourceManager.GetString("RemovingServiceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the Windows service created for this server installation..
        /// </summary>
        public static string RemovingWindowsServiceText {
            get {
                return ResourceManager.GetString("RemovingWindowsServiceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided URL already exists..
        /// </summary>
        public static string RepeatedUrl {
            get {
                return ResourceManager.GetString("RepeatedUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to recreate the {0} file....
        /// </summary>
        public static string RepositoryFileAttemptingToRecreate {
            get {
                return ResourceManager.GetString("RepositoryFileAttemptingToRecreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load repository XML file..
        /// </summary>
        public static string RepositoryFileLoadingErrorDetail {
            get {
                return ResourceManager.GetString("RepositoryFileLoadingErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XML file could not be loaded, but it does exist. Possible causes include: the file is malformed, the file was tampered with, or the file is empty. MySQL Workbench maintains the file and can perhaps repair or recreate it.
        ///
        ///To attempt a repair of the file:
        ///
        ///1. Close this program.
        ///2. Start MySQL Workbench.
        ///3. If MySQL Workbench starts and no error occurs, close MySQL Workbench and proceed to the next step. Otherwise, use the onscreen instructions in MySQL Workbench (if any) to troubleshoot or contact [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RepositoryFileLoadingErrorMoreInfo {
            get {
                return ResourceManager.GetString("RepositoryFileLoadingErrorMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Workbench maintains the file and can perhaps repair or recreate it..
        /// </summary>
        public static string RepositoryFileMaintainedByWorkbench {
            get {
                return ResourceManager.GetString("RepositoryFileMaintainedByWorkbench", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Workbench maintains the {0} file. Start MySQL Workbench to determine if the file can be repaired or recreated..
        /// </summary>
        public static string RepositoryFileMaintainedByWorkbenchSuggestion {
            get {
                return ResourceManager.GetString("RepositoryFileMaintainedByWorkbenchSuggestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load the {0} file. The file may be empty or malformed..
        /// </summary>
        public static string RepositoryFileMaybeEmptyOrMalformed {
            get {
                return ResourceManager.GetString("RepositoryFileMaybeEmptyOrMalformed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository XML file could not be loaded and it may be corrupt..
        /// </summary>
        public static string RepositoryFileRecreateDetail {
            get {
                return ResourceManager.GetString("RepositoryFileRecreateDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully recreated the {0} file, proceeding to reload it..
        /// </summary>
        public static string RepositoryFileRecreatedNowReloading {
            get {
                return ResourceManager.GetString("RepositoryFileRecreatedNowReloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to recreate the XML file from scratch?.
        /// </summary>
        public static string RepositoryFileRecreateSubDetail {
            get {
                return ResourceManager.GetString("RepositoryFileRecreateSubDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recreate file.
        /// </summary>
        public static string RepositoryFileRecreateTitle {
            get {
                return ResourceManager.GetString("RepositoryFileRecreateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to recreate repository XML file..
        /// </summary>
        public static string RepositoryFileRecreatingErrorDetail {
            get {
                return ResourceManager.GetString("RepositoryFileRecreatingErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can retry the loading of the XML file (up to {0} time{1}).
        ///If you choose not to retry or the number of retries hits the limit, you will be given the option to attempt to re-create the XML file from scratch, since it may be corrupt.
        ///
        ///Error message:
        ///{2}.
        /// </summary>
        public static string RepositoryFileRetryMoreInfo {
            get {
                return ResourceManager.GetString("RepositoryFileRetryMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to retry loading the file?.
        /// </summary>
        public static string RepositoryFileRetrySubDetail {
            get {
                return ResourceManager.GetString("RepositoryFileRetrySubDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry?.
        /// </summary>
        public static string RepositoryFileRetryTitle {
            get {
                return ResourceManager.GetString("RepositoryFileRetryTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to save repository XML file..
        /// </summary>
        public static string RepositoryFileSavingErrorDetail {
            get {
                return ResourceManager.GetString("RepositoryFileSavingErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading {0}.
        /// </summary>
        public static string RequirementCheckDownloadingFile {
            get {
                return ResourceManager.GetString("RequirementCheckDownloadingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occured during installation. Please manually install the prerequisite and restart the installer. Click on this message to open a browser window for manual installation..
        /// </summary>
        public static string RequirementCheckError {
            get {
                return ResourceManager.GetString("RequirementCheckError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing prerequisite....
        /// </summary>
        public static string RequirementCheckInstalling {
            get {
                return ResourceManager.GetString("RequirementCheckInstalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no additional requirements to be installed. Please click Next to continue with the product installation..
        /// </summary>
        public static string RequirementCheckNoRequirements {
            get {
                return ResourceManager.GetString("RequirementCheckNoRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following requirements must be installed before the selected products can be installed. If you don&apos;t want a particular requirement then go back and deselect the product that requires it..
        /// </summary>
        public static string RequirementCheckWithRequirements {
            get {
                return ResourceManager.GetString("RequirementCheckWithRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a manual requirement that has been satisfied..
        /// </summary>
        public static string RequirementManualIsMet {
            get {
                return ResourceManager.GetString("RequirementManualIsMet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a manual requirement.  You can attempt to resolve the requirement using the information provided. When done, you can press the Check button to see if the requirment has been met..
        /// </summary>
        public static string RequirementManualIsNotMet {
            get {
                return ResourceManager.GetString("RequirementManualIsNotMet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All required prerequisites are met. Continue by clicking on the Next button..
        /// </summary>
        public static string RequirementsCheckAllMetText {
            get {
                return ResourceManager.GetString("RequirementsCheckAllMetText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package &quot;{0}&quot; must be installed now. Click on the Execute button to open a website which allows you to download and install the package. Once done come back here and re-check the requirements by clicking the Re-Check button.
        ///
        ///If you are asked to restart your computer then decline and finish the main installation first. Restart your computer after this is done..
        /// </summary>
        public static string RequirementsCheckCurrentTaskText {
            get {
                return ResourceManager.GetString("RequirementsCheckCurrentTaskText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Product &quot;{0}&quot; requires &quot;{1}&quot; but it was not detected on this computer. &quot;{1}&quot; requires manual installation and must be installed prior to installing &quot;{0}&quot;. By clicking &apos;Execute&apos;, &quot;{0}&quot; will be removed from the list of products to install.  Once the &quot;{1}&quot; has been met, please run the MySQL Configurator again and you will be able to complete installation..
        /// </summary>
        public static string RequirementsCheckManualTaskText {
            get {
                return ResourceManager.GetString("RequirementsCheckManualTaskText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Product &quot;{0}&quot; requires &quot;{1}&quot; but it was not detected on this computer.
        ///&quot;{1}&quot; requires manual installation and must be installed prior to installing &quot;{0}&quot;..
        /// </summary>
        public static string RequirementsCheckManualTooltip {
            get {
                return ResourceManager.GetString("RequirementsCheckManualTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-Check.
        /// </summary>
        public static string RequirementsCheckRecheckButtonText {
            get {
                return ResourceManager.GetString("RequirementsCheckRecheckButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make no attempt to install third-party software while MySQL Configurator is resolving requirements..
        /// </summary>
        public static string RequirementsNoManualDuringAutoDetail {
            get {
                return ResourceManager.GetString("RequirementsNoManualDuringAutoDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When MySQL Configurator completes the last automatic requirement, you can attempt to resolve manual items..
        /// </summary>
        public static string RequirementsNoManualDuringAutoSubDetail {
            get {
                return ResourceManager.GetString("RequirementsNoManualDuringAutoSubDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Those products with missing requirements will not be installed or upgraded..
        /// </summary>
        public static string RequirementsProceedWithFailingDetail {
            get {
                return ResourceManager.GetString("RequirementsProceedWithFailingDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to continue?.
        /// </summary>
        public static string RequirementsProceedWithFailingSubDetail {
            get {
                return ResourceManager.GetString("RequirementsProceedWithFailingSubDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more product requirements have not been satisfied.
        /// </summary>
        public static string RequirementsProceedWithFailingTitle {
            get {
                return ResourceManager.GetString("RequirementsProceedWithFailingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requirement is still failing..
        /// </summary>
        public static string RequirementStillFailing {
            get {
                return ResourceManager.GetString("RequirementStillFailing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap resource_links_light {
            get {
                object obj = ResourceManager.GetObject("resource_links_light", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ResourcesBanner {
            get {
                object obj = ResourceManager.GetObject("ResourcesBanner", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response has a status of {0}..
        /// </summary>
        public static string ResponseStatus {
            get {
                return ResourceManager.GetString("ResponseStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry ({0}).
        /// </summary>
        public static string RetryDownload {
            get {
                return ResourceManager.GetString("RetryDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Revert {
            get {
                object obj = ResourceManager.GetObject("Revert", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Revert1 {
            get {
                object obj = ResourceManager.GetObject("Revert1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Revert2 {
            get {
                object obj = ResourceManager.GetObject("Revert2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap right_arrow {
            get {
                object obj = ResourceManager.GetObject("right_arrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap right_double_arrow {
            get {
                object obj = ResourceManager.GetObject("right_double_arrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All rights just the same as the root user..
        /// </summary>
        public static string RootRoleDescription {
            get {
                return ResourceManager.GetString("RootRoleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is not an InnoDB Cluster seed (read/write) instance.
        /// </summary>
        public static string RouterConfigNotSeedInstanceError {
            get {
                return ResourceManager.GetString("RouterConfigNotSeedInstanceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Router Configuration.
        /// </summary>
        public static string RouterConfigurationTitle {
            get {
                return ResourceManager.GetString("RouterConfigurationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating MySQL Router configuration files.
        /// </summary>
        public static string RouterConfigureRouter {
            get {
                return ResourceManager.GetString("RouterConfigureRouter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing MySQL Router Windows service.
        /// </summary>
        public static string RouterInstallService {
            get {
                return ResourceManager.GetString("RouterInstallService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Router configuration finished. Writting results to the log..
        /// </summary>
        public static string RouterReportResults {
            get {
                return ResourceManager.GetString("RouterReportResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No MySQL Router Windows service is present, nothing to remove..
        /// </summary>
        public static string RouterWindowsServiceNotFound {
            get {
                return ResourceManager.GetString("RouterWindowsServiceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirement rule not found.  Installation could be corrupted.  .
        /// </summary>
        public static string RuleNotFound {
            get {
                return ResourceManager.GetString("RuleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package rules file does not exist..
        /// </summary>
        public static string RulesFileDoesNotExist {
            get {
                return ResourceManager.GetString("RulesFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running.
        /// </summary>
        public static string RunningText {
            get {
                return ResourceManager.GetString("RunningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Port and the X Protocol Port cannot be the same..
        /// </summary>
        public static string SameCSPortXPort {
            get {
                return ResourceManager.GetString("SameCSPortXPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All connections failed..
        /// </summary>
        public static string SamplesAllConnectionsFailed {
            get {
                return ResourceManager.GetString("SamplesAllConnectionsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All connections succeeded..
        /// </summary>
        public static string SamplesAllConnectionsSucceeded {
            get {
                return ResourceManager.GetString("SamplesAllConnectionsSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all connections succeeded. Some instances may be configured as read-only..
        /// </summary>
        public static string SamplesSomeConnectionsSucceeded {
            get {
                return ResourceManager.GetString("SamplesSomeConnectionsSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saved {0} configuration file..
        /// </summary>
        public static string SavedConfigurationFile {
            get {
                return ResourceManager.GetString("SavedConfigurationFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving {0} configuration file....
        /// </summary>
        public static string SavingConfigurationFile {
            get {
                return ResourceManager.GetString("SavingConfigurationFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to delete the {0} scheduled task. Please remove it manually..
        /// </summary>
        public static string ScheduledTaskRemoveFailed {
            get {
                return ResourceManager.GetString("ScheduledTaskRemoveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} scheduled task has been successfully deleted..
        /// </summary>
        public static string ScheduledTaskRemoveSucceeded {
            get {
                return ResourceManager.GetString("ScheduledTaskRemoveSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap selection_light {
            get {
                object obj = ResourceManager.GetObject("selection_light", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Upgrade.
        /// </summary>
        public static string SelectUpgrade {
            get {
                return ResourceManager.GetString("SelectUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap server_config_networking {
            get {
                object obj = ResourceManager.GetObject("server_config_networking", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap server_config_networking1 {
            get {
                object obj = ResourceManager.GetObject("server_config_networking1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap server_config_security {
            get {
                object obj = ResourceManager.GetObject("server_config_security", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap server_config_security1 {
            get {
                object obj = ResourceManager.GetObject("server_config_security1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap server_config_windows {
            get {
                object obj = ResourceManager.GetObject("server_config_windows", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap server_config_windows1 {
            get {
                object obj = ResourceManager.GetObject("server_config_windows1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap server_confirm {
            get {
                object obj = ResourceManager.GetObject("server_confirm", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap server_confirm1 {
            get {
                object obj = ResourceManager.GetObject("server_confirm1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Server_Icon {
            get {
                object obj = ResourceManager.GetObject("Server_Icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Server_Icon24 {
            get {
                object obj = ResourceManager.GetObject("Server_Icon24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap server_machine {
            get {
                object obj = ResourceManager.GetObject("server_machine", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap server_machine1 {
            get {
                object obj = ResourceManager.GetObject("server_machine1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Server_Reflection {
            get {
                object obj = ResourceManager.GetObject("Server_Reflection", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Server_Reflection1 {
            get {
                object obj = ResourceManager.GetObject("Server_Reflection1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjusting process.
        /// </summary>
        public static string ServerAdjustProcessStep {
            get {
                return ResourceManager.GetString("ServerAdjustProcessStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjusting Windows service.
        /// </summary>
        public static string ServerAdjustServiceStep {
            get {
                return ResourceManager.GetString("ServerAdjustServiceStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying security settings.
        /// </summary>
        public static string ServerApplySecurityStep {
            get {
                return ResourceManager.GetString("ServerApplySecurityStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ServerCategoryIcon {
            get {
                object obj = ResourceManager.GetObject("ServerCategoryIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No account name was provided..
        /// </summary>
        public static string ServerConfigAccountNameMissing {
            get {
                return ResourceManager.GetString("ServerConfigAccountNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add a duplicate user..
        /// </summary>
        public static string ServerConfigAddedDuplicateUser {
            get {
                return ResourceManager.GetString("ServerConfigAddedDuplicateUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user root@{0} already exists and may not be added again..
        /// </summary>
        public static string ServerConfigAddedExistingRootUserText {
            get {
                return ResourceManager.GetString("ServerConfigAddedExistingRootUserText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add root@{0} as a new user..
        /// </summary>
        public static string ServerConfigAddedExistingRootUserTitle {
            get {
                return ResourceManager.GetString("ServerConfigAddedExistingRootUserTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding new service.
        /// </summary>
        public static string ServerConfigAddingService {
            get {
                return ResourceManager.GetString("ServerConfigAddingService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to create the directory for the backup data file..
        /// </summary>
        public static string ServerConfigBackupDatabaseBackupDirectoryError {
            get {
                return ResourceManager.GetString("ServerConfigBackupDatabaseBackupDirectoryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running mysqldump tool to backup the database....
        /// </summary>
        public static string ServerConfigBackupDatabaseDumpRunning {
            get {
                return ResourceManager.GetString("ServerConfigBackupDatabaseDumpRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished backing up database with mysqldump tool..
        /// </summary>
        public static string ServerConfigBackupDatabaseDumpRunSuccess {
            get {
                return ResourceManager.GetString("ServerConfigBackupDatabaseDumpRunSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to start MySQL Server in order to run the mysqldump tool..
        /// </summary>
        public static string ServerConfigBackupDatabaseServerStartError {
            get {
                return ResourceManager.GetString("ServerConfigBackupDatabaseServerStartError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting MySQL Server in order to run the mysqldump tool..
        /// </summary>
        public static string ServerConfigBackupDatabaseStartServer {
            get {
                return ResourceManager.GetString("ServerConfigBackupDatabaseStartServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backing up MySQL database.
        /// </summary>
        public static string ServerConfigBackupDatabaseStep {
            get {
                return ResourceManager.GetString("ServerConfigBackupDatabaseStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set the correct permissions to access the log files..
        /// </summary>
        public static string ServerConfigCheckAccessToLogsFailed {
            get {
                return ResourceManager.GetString("ServerConfigCheckAccessToLogsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking access to the server logs....
        /// </summary>
        public static string ServerConfigCheckingAccessToLogs {
            get {
                return ResourceManager.GetString("ServerConfigCheckingAccessToLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please type a valid cluster name.
        /// </summary>
        public static string ServerConfigClusterNameInvalid {
            get {
                return ResourceManager.GetString("ServerConfigClusterNameInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of a cluster name must not exceed 40 characters..
        /// </summary>
        public static string ServerConfigClusterNameMaxLengthExceeded {
            get {
                return ResourceManager.GetString("ServerConfigClusterNameMaxLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cluster name is required..
        /// </summary>
        public static string ServerConfigClusterNameRequired {
            get {
                return ResourceManager.GetString("ServerConfigClusterNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to convert inherited permissions to explicit permissions..
        /// </summary>
        public static string ServerConfigConvertToExplicitPermissionsFailed {
            get {
                return ResourceManager.GetString("ServerConfigConvertToExplicitPermissionsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inherited permissions have been converted to explicit permissions..
        /// </summary>
        public static string ServerConfigConvertToExplicitPermissionsSuccess {
            get {
                return ResourceManager.GetString("ServerConfigConvertToExplicitPermissionsSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to convert rule &apos;{0}&apos; into an NT account..
        /// </summary>
        public static string ServerConfigConvertToNTAccountFailed {
            get {
                return ResourceManager.GetString("ServerConfigConvertToNTAccountFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to obtain SID for the &apos;{0}&apos; NT account..
        /// </summary>
        public static string ServerConfigCouldNotObtainSid {
            get {
                return ResourceManager.GetString("ServerConfigCouldNotObtainSid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a temporary user account for connecting with new authentication plugin during the step that updates security settings that runs later on (to avoid updating the root user account at this early stage where intermediate configuration steps might fail)....
        /// </summary>
        public static string ServerConfigCreatingTemporaryUser {
            get {
                return ResourceManager.GetString("ServerConfigCreatingTemporaryUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to create the temporary user account..
        /// </summary>
        public static string ServerConfigCreatingTemporaryUserError {
            get {
                return ResourceManager.GetString("ServerConfigCreatingTemporaryUserError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created temporary {0} user account to use for updating security settings in a later step..
        /// </summary>
        public static string ServerConfigCreatingTemporaryUserSuccess {
            get {
                return ResourceManager.GetString("ServerConfigCreatingTemporaryUserSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect user name or password..
        /// </summary>
        public static string ServerConfigCustomUserInvalidCredentials {
            get {
                return ResourceManager.GetString("ServerConfigCustomUserInvalidCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user doesn&apos;t have sufficent file permissions to the data directory..
        /// </summary>
        public static string ServerConfigCustomUserInvalidPermissions {
            get {
                return ResourceManager.GetString("ServerConfigCustomUserInvalidPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user doesn&apos;t have the &quot;Log on as a service&quot; permission, you need to assign this using the &quot;Local Security Policy&quot; tool under the options &quot;Local Policies&quot; and &quot;User Rights Assignment&quot;..
        /// </summary>
        public static string ServerConfigCustomUserInvalidRights {
            get {
                return ResourceManager.GetString("ServerConfigCustomUserInvalidRights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown error occured while validating the service account. Consider choosing a different service account user type. Please examine the logs for more information..
        /// </summary>
        public static string ServerConfigCustomUserUnknowError {
            get {
                return ResourceManager.GetString("ServerConfigCustomUserUnknowError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data directory does not exist..
        /// </summary>
        public static string ServerConfigDataDirectoryDoesNotExist {
            get {
                return ResourceManager.GetString("ServerConfigDataDirectoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting existing service....
        /// </summary>
        public static string ServerConfigDeletingExistingService {
            get {
                return ResourceManager.GetString("ServerConfigDeletingExistingService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting temporary user account {0}....
        /// </summary>
        public static string ServerConfigDeletingTemporaryUser {
            get {
                return ResourceManager.GetString("ServerConfigDeletingTemporaryUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to delete the temporary user account..
        /// </summary>
        public static string ServerConfigDeletingTemporaryUserError {
            get {
                return ResourceManager.GetString("ServerConfigDeletingTemporaryUserError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleted temporary user account {0} successfully....
        /// </summary>
        public static string ServerConfigDeletingTemporaryUserSuccess {
            get {
                return ResourceManager.GetString("ServerConfigDeletingTemporaryUserSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected Duplicate.
        /// </summary>
        public static string ServerConfigDuplicateTitle {
            get {
                return ResourceManager.GetString("ServerConfigDuplicateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This edit would create a duplicate user.
        /// </summary>
        public static string ServerConfigEditedDuplicateUser {
            get {
                return ResourceManager.GetString("ServerConfigEditedDuplicateUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty or blank passwords are considered insecure.
        ///Provide a more complex password for stronger security..
        /// </summary>
        public static string ServerConfigEmptyOrBlankPasswordWarning {
            get {
                return ResourceManager.GetString("ServerConfigEmptyOrBlankPasswordWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty or blank passwords are considered insecure..
        /// </summary>
        public static string ServerConfigEmptyOrBlankPasswordWarning1 {
            get {
                return ResourceManager.GetString("ServerConfigEmptyOrBlankPasswordWarning1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No security tokens were provided..
        /// </summary>
        public static string ServerConfigEmptySecurityTokens {
            get {
                return ResourceManager.GetString("ServerConfigEmptySecurityTokens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Enterprise Firewall is not currently supported when setting up InnoDB Cluster..
        /// </summary>
        public static string ServerConfigEnterpriseFirewallNotSupportedWithInnoDbCluster {
            get {
                return ResourceManager.GetString("ServerConfigEnterpriseFirewallNotSupportedWithInnoDbCluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred trying to add new users to the MySQL database (see log)..
        /// </summary>
        public static string ServerConfigEventAddNewUsersError {
            get {
                return ResourceManager.GetString("ServerConfigEventAddNewUsersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to Add New MySQL Users.
        /// </summary>
        public static string ServerConfigEventAddNewUsersInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventAddNewUsersInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added new users to the MySQL database successfully..
        /// </summary>
        public static string ServerConfigEventAddNewUsersSuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventAddNewUsersSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to configure MySQL Enterprise Firewall.  The error is:.
        /// </summary>
        public static string ServerConfigEventConfigureEnterpriseFirewallError {
            get {
                return ResourceManager.GetString("ServerConfigEventConfigureEnterpriseFirewallError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to configure MySQL Enterprise Firewall.
        /// </summary>
        public static string ServerConfigEventConfigureEnterpriseFirewallInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventConfigureEnterpriseFirewallInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured MySQL Enterprise Firewall.
        /// </summary>
        public static string ServerConfigEventConfigureEnterpriseFirewallSuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventConfigureEnterpriseFirewallSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to configure service..
        /// </summary>
        public static string ServerConfigEventConfigureServiceError {
            get {
                return ResourceManager.GetString("ServerConfigEventConfigureServiceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to configure service..
        /// </summary>
        public static string ServerConfigEventConfigureServiceInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventConfigureServiceInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured service..
        /// </summary>
        public static string ServerConfigEventConfigureServiceSuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventConfigureServiceSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product configuration controller finished configuration..
        /// </summary>
        public static string ServerConfigEventFinished {
            get {
                return ResourceManager.GetString("ServerConfigEventFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add the Windows Firewall rule..
        /// </summary>
        public static string ServerConfigEventFirewallSettingFailed {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding a Windows Firewall rule for {0} on port {1}..
        /// </summary>
        public static string ServerConfigEventFirewallSettingInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to {0} a Windows Firewall rule with command: netsh.exe {1}.
        /// </summary>
        public static string ServerConfigEventFirewallSettingNetshCmd {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingNetshCmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred running netsh.exe {0}:.
        /// </summary>
        public static string ServerConfigEventFirewallSettingNetshCmdResults {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingNetshCmdResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The netsh.exe process did not return any error. Review the application log to see if there is a trace of the error..
        /// </summary>
        public static string ServerConfigEventFirewallSettingNetshCmdUnknownError {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingNetshCmdUnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attempt to {0} a Windows Firewall rule failed..
        /// </summary>
        public static string ServerConfigEventFirewallSettingsTip {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingsTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully added the Windows Firewall rule..
        /// </summary>
        public static string ServerConfigEventFirewallSettingSucceeded {
            get {
                return ResourceManager.GetString("ServerConfigEventFirewallSettingSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while creating user..
        /// </summary>
        public static string ServerConfigEventProcessingUserError {
            get {
                return ResourceManager.GetString("ServerConfigEventProcessingUserError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to process template..
        /// </summary>
        public static string ServerConfigEventProcessTemplateError {
            get {
                return ResourceManager.GetString("ServerConfigEventProcessTemplateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to process template..
        /// </summary>
        public static string ServerConfigEventProcessTemplateInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventProcessTemplateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processed template..
        /// </summary>
        public static string ServerConfigEventProcessTemplateSuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventProcessTemplateSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to update security settings. {0}.
        /// </summary>
        public static string ServerConfigEventSecuritySettingsError {
            get {
                return ResourceManager.GetString("ServerConfigEventSecuritySettingsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to update security settings..
        /// </summary>
        public static string ServerConfigEventSecuritySettingsInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventSecuritySettingsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated security settings..
        /// </summary>
        public static string ServerConfigEventSecuritySettingsSuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventSecuritySettingsSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update permissions for the data folder and related server files..
        /// </summary>
        public static string ServerConfigEventServerSecurityFailed {
            get {
                return ResourceManager.GetString("ServerConfigEventServerSecurityFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to update the permissions for the data folder and related server files....
        /// </summary>
        public static string ServerConfigEventServerSecurityInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventServerSecurityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Permissions for the data folder and related server files are updated correctly..
        /// </summary>
        public static string ServerConfigEventServerSecuritySuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventServerSecuritySuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to verify command-line client shortcut..
        /// </summary>
        public static string ServerConfigEventShortcutError {
            get {
                return ResourceManager.GetString("ServerConfigEventShortcutError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to verify command-line client shortcut..
        /// </summary>
        public static string ServerConfigEventShortcutInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventShortcutInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verified command-line client shortcut..
        /// </summary>
        public static string ServerConfigEventShortcutSucceeded {
            get {
                return ResourceManager.GetString("ServerConfigEventShortcutSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start service {0}..
        /// </summary>
        public static string ServerConfigEventStartServiceError {
            get {
                return ResourceManager.GetString("ServerConfigEventStartServiceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to start service {0}....
        /// </summary>
        public static string ServerConfigEventStartServiceInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventStartServiceInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully started service {0}..
        /// </summary>
        public static string ServerConfigEventStartServiceSuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventStartServiceSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find a valid template..
        /// </summary>
        public static string ServerConfigEventValidTemplateError {
            get {
                return ResourceManager.GetString("ServerConfigEventValidTemplateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking for valid template.
        /// </summary>
        public static string ServerConfigEventValidTemplateInfo {
            get {
                return ResourceManager.GetString("ServerConfigEventValidTemplateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found valid template..
        /// </summary>
        public static string ServerConfigEventValidTemplateSuccess {
            get {
                return ResourceManager.GetString("ServerConfigEventValidTemplateSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get the authorization rules for: {0}..
        /// </summary>
        public static string ServerConfigFailedToGetAuthorizationRules {
            get {
                return ResourceManager.GetString("ServerConfigFailedToGetAuthorizationRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error when attempting to retrieve the local {0}..
        /// </summary>
        public static string ServerConfigFailedToRetrieveLocalPrincipals {
            get {
                return ResourceManager.GetString("ServerConfigFailedToRetrieveLocalPrincipals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the value of the super_read_only variable..
        /// </summary>
        public static string ServerConfigGetSuperReadOnlyVariableValueFailed {
            get {
                return ResourceManager.GetString("ServerConfigGetSuperReadOnlyVariableValueFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to grant full control permissions to: {0}..
        /// </summary>
        public static string ServerConfigGrantedFullControlFailed {
            get {
                return ResourceManager.GetString("ServerConfigGrantedFullControlFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full control permissions granted to: {0}..
        /// </summary>
        public static string ServerConfigGrantedFullControlSuccess {
            get {
                return ResourceManager.GetString("ServerConfigGrantedFullControlSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Granted permissions to the data directory..
        /// </summary>
        public static string ServerConfigGrantedPermissionsToDataDirectory {
            get {
                return ResourceManager.GetString("ServerConfigGrantedPermissionsToDataDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Granted permissions to access the &apos;{0}&apos; log file..
        /// </summary>
        public static string ServerConfigGrantedPermissionsToLogFile {
            get {
                return ResourceManager.GetString("ServerConfigGrantedPermissionsToLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to grant the required filesystem permissions to the &apos;{0}&apos; account..
        /// </summary>
        public static string ServerConfigGrantingPermissionsToAccount {
            get {
                return ResourceManager.GetString("ServerConfigGrantingPermissionsToAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found existing data directory, no need to initialize the database..
        /// </summary>
        public static string ServerConfigInitializeDatabaseDataDirExistsText {
            get {
                return ResourceManager.GetString("ServerConfigInitializeDatabaseDataDirExistsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting the data directory from a previous (failed) configuration....
        /// </summary>
        public static string ServerConfigInitializeDatabaseDeletingDataDirText {
            get {
                return ResourceManager.GetString("ServerConfigInitializeDatabaseDeletingDataDirText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database initialization failed..
        /// </summary>
        public static string ServerConfigInitializeDatabaseFailedText {
            get {
                return ResourceManager.GetString("ServerConfigInitializeDatabaseFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initialize is only compatible for MySQL Server 5.7.7 or higher, no need to initialize the database for this version ({0})..
        /// </summary>
        public static string ServerConfigInitializeDatabaseIncompatibleVersionText {
            get {
                return ResourceManager.GetString("ServerConfigInitializeDatabaseIncompatibleVersionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to run MySQL Server with --initialize-insecure option....
        /// </summary>
        public static string ServerConfigInitializeDatabaseRunningInitializeInsecureText {
            get {
                return ResourceManager.GetString("ServerConfigInitializeDatabaseRunningInitializeInsecureText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} intialized the database successfully..
        /// </summary>
        public static string ServerConfigInitializeDatabaseSuccessText {
            get {
                return ResourceManager.GetString("ServerConfigInitializeDatabaseSuccessText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MySQL server instance is currently running. Cannot proceed with the operation..
        /// </summary>
        public static string ServerConfigInstanceRunning {
            get {
                return ResourceManager.GetString("ServerConfigInstanceRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please type a valid Server ID.
        /// </summary>
        public static string ServerConfigInvalidServerId {
            get {
                return ResourceManager.GetString("ServerConfigInvalidServerId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more of the given security tokens is not valid. Please verify the list entered:.
        /// </summary>
        public static string ServerConfigInvalidWindowsSecurityTokens {
            get {
                return ResourceManager.GetString("ServerConfigInvalidWindowsSecurityTokens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected local group no longer exists. Please refresh the list\n and select an existing local group..
        /// </summary>
        public static string ServerConfigLocalGroupDoesNotExist {
            get {
                return ResourceManager.GetString("ServerConfigLocalGroupDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local instance is no longer part of a production InnoDB Cluster..
        /// </summary>
        public static string ServerConfigLocalInstanceNotPartOfInnoDbCluster {
            get {
                return ResourceManager.GetString("ServerConfigLocalInstanceNotPartOfInnoDbCluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local instance has switched roles within the production InnoDB Cluster. The connection details will be updated..
        /// </summary>
        public static string ServerConfigLocalInstanceSwitchedRoles {
            get {
                return ResourceManager.GetString("ServerConfigLocalInstanceSwitchedRoles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a slow query log file....
        /// </summary>
        public static string ServerConfigLoggingSlowLogFilesTitle {
            get {
                return ResourceManager.GetString("ServerConfigLoggingSlowLogFilesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No log path was provided..
        /// </summary>
        public static string ServerConfigLogPathMissing {
            get {
                return ResourceManager.GetString("ServerConfigLogPathMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Table names are stored in lowercase on disk and name comparisons are not case-sensitive. MySQL converts all table names to lowercase on storage and lookup..
        /// </summary>
        public static string ServerConfigLowerCaseTableNamesSupported {
            get {
                return ResourceManager.GetString("ServerConfigLowerCaseTableNamesSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature is disabled because the required resources are missing..
        /// </summary>
        public static string ServerConfigMissingResources {
            get {
                return ResourceManager.GetString("ServerConfigMissingResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running mysql_upgrade tool failed.  Please examine the log file for more details..
        /// </summary>
        public static string ServerConfigMySqlUpgradeRunError {
            get {
                return ResourceManager.GetString("ServerConfigMySqlUpgradeRunError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running mysql_upgrade tool....
        /// </summary>
        public static string ServerConfigMySqlUpgradeRunning {
            get {
                return ResourceManager.GetString("ServerConfigMySqlUpgradeRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished running mysql_upgrade tool..
        /// </summary>
        public static string ServerConfigMySqlUpgradeRunSuccess {
            get {
                return ResourceManager.GetString("ServerConfigMySqlUpgradeRunSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to start MySQL Server in order to run the mysql_upgrade tool..
        /// </summary>
        public static string ServerConfigMySqlUpgradeServerStartError {
            get {
                return ResourceManager.GetString("ServerConfigMySqlUpgradeServerStartError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutting down MySQL Server so that any changes made to the system tables take effect in the next start..
        /// </summary>
        public static string ServerConfigMySqlUpgradeShutdownServer {
            get {
                return ResourceManager.GetString("ServerConfigMySqlUpgradeShutdownServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting MySQL Server in order to run the mysql_upgrade tool..
        /// </summary>
        public static string ServerConfigMySqlUpgradeStartServer {
            get {
                return ResourceManager.GetString("ServerConfigMySqlUpgradeStartServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No name was assigned to the rule..
        /// </summary>
        public static string ServerConfigNameMissingForRule {
            get {
                return ResourceManager.GetString("ServerConfigNameMissingForRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a directory to obtain the base permissions from..
        /// </summary>
        public static string ServerConfigNoValidBaseDirectoryFound {
            get {
                return ResourceManager.GetString("ServerConfigNoValidBaseDirectoryFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value was not assigned to the data directory..
        /// </summary>
        public static string ServerConfigNoValueAssignedToDataDirectory {
            get {
                return ResourceManager.GetString("ServerConfigNoValueAssignedToDataDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided list view item has not been initialized..
        /// </summary>
        public static string ServerConfigNullListView {
            get {
                return ResourceManager.GetString("ServerConfigNullListView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified port is already in use..
        /// </summary>
        public static string ServerConfigPortInUse {
            get {
                return ResourceManager.GetString("ServerConfigPortInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Table and database names are stored on disk using the letter case specified in the CREATE TABLE or CREATE DATABASE statement, but MySQL converts them to lowercase on lookup..
        /// </summary>
        public static string ServerConfigPreserveGivenCaseSupported {
            get {
                return ResourceManager.GetString("ServerConfigPreserveGivenCaseSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully started process for {0}..
        /// </summary>
        public static string ServerConfigProcessStartedSuccessfullyText {
            get {
                return ResourceManager.GetString("ServerConfigProcessStartedSuccessfullyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start process for {0}..
        /// </summary>
        public static string ServerConfigProcessStartFailedText {
            get {
                return ResourceManager.GetString("ServerConfigProcessStartFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting process for {0}....
        /// </summary>
        public static string ServerConfigProcessStartingText {
            get {
                return ResourceManager.GetString("ServerConfigProcessStartingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to remove access to the data directory for the {0} {1}..
        /// </summary>
        public static string ServerConfigRemovedAccessFailed {
            get {
                return ResourceManager.GetString("ServerConfigRemovedAccessFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to the data directory is removed for the {0} {1}..
        /// </summary>
        public static string ServerConfigRemovedAccessSuccess {
            get {
                return ResourceManager.GetString("ServerConfigRemovedAccessSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reverting the InnoDB extended settings..
        /// </summary>
        public static string ServerConfigResetingInnoDbExtendedSettings {
            get {
                return ResourceManager.GetString("ServerConfigResetingInnoDbExtendedSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating the server ID is not supported during InnoDB Cluster reconfiguration..
        /// </summary>
        public static string ServerConfigServerIdDuringInnoDbClusterReconfigurationNotSupported {
            get {
                return ResourceManager.GetString("ServerConfigServerIdDuringInnoDbClusterReconfigurationNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported..
        /// </summary>
        public static string ServerConfigServerIdDuringInnoDbClusterReconfigurationSupported {
            get {
                return ResourceManager.GetString("ServerConfigServerIdDuringInnoDbClusterReconfigurationSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please type an empty, 0 or positive value..
        /// </summary>
        public static string ServerConfigServerIdError {
            get {
                return ResourceManager.GetString("ServerConfigServerIdError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New service added.
        /// </summary>
        public static string ServerConfigServiceAdded {
            get {
                return ResourceManager.GetString("ServerConfigServiceAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing service updated.
        /// </summary>
        public static string ServerConfigServiceUpdated {
            get {
                return ResourceManager.GetString("ServerConfigServiceUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set the instance as writable. Retrying the configuration is recommended. If the retry attempt continues to fail, set the super_read_only variable to OFF explicitly before retrying..
        /// </summary>
        public static string ServerConfigSetInstanceAsWritableFail {
            get {
                return ResourceManager.GetString("ServerConfigSetInstanceAsWritableFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The instance is already configured as writable. No action needed..
        /// </summary>
        public static string ServerConfigSetInstanceAsWritableNotRequired {
            get {
                return ResourceManager.GetString("ServerConfigSetInstanceAsWritableNotRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The instance has been configured to be writable..
        /// </summary>
        public static string ServerConfigSetInstanceAsWritableSuccess {
            get {
                return ResourceManager.GetString("ServerConfigSetInstanceAsWritableSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the SID for the &apos;{0}&apos; principal..
        /// </summary>
        public static string ServerConfigSidRetrievalFailure {
            get {
                return ResourceManager.GetString("ServerConfigSidRetrievalFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL failed to start because of the following error(s):.
        /// </summary>
        public static string ServerConfigStartServerFailedWithErrors {
            get {
                return ResourceManager.GetString("ServerConfigStartServerFailedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL failed to start due to an unknown cause. Review the logs and the validity of the values in the options file for more details..
        /// </summary>
        public static string ServerConfigStartServerFailedWIthUnknownError {
            get {
                return ResourceManager.GetString("ServerConfigStartServerFailedWIthUnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade of system tables did not complete successfully. Check for errors in the log..
        /// </summary>
        public static string ServerConfigStartUpgradeFailed {
            get {
                return ResourceManager.GetString("ServerConfigStartUpgradeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server did not start successfully. Check for errors in the log..
        /// </summary>
        public static string ServerConfigStartUpgradeNotAcceptingConnections {
            get {
                return ResourceManager.GetString("ServerConfigStartUpgradeNotAcceptingConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is suggested to specify a Server ID if binary logging is enabled..
        /// </summary>
        public static string ServerConfigSuggestServerId {
            get {
                return ResourceManager.GetString("ServerConfigSuggestServerId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating the Table Names Case is not supported during reconfigurations or for server versions lower than 8.0..
        /// </summary>
        public static string ServerConfigTableNamesNotSupported {
            get {
                return ResourceManager.GetString("ServerConfigTableNamesNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to generate the MySQL Enterprise Firewall plugin uninstall script..
        /// </summary>
        public static string ServerConfigUnableToGenerateUnistallFirewallScript {
            get {
                return ResourceManager.GetString("ServerConfigUnableToGenerateUnistallFirewallScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unspecified error.
        /// </summary>
        public static string ServerConfigUnspecifiedError {
            get {
                return ResourceManager.GetString("ServerConfigUnspecifiedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating existing service....
        /// </summary>
        public static string ServerConfigUpdatingExistingService {
            get {
                return ResourceManager.GetString("ServerConfigUpdatingExistingService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrading the system tables was skipped in a previous MySQL Server upgrade, skipping it again is not allowed..
        /// </summary>
        public static string ServerConfigUpgradePageSkipUpgradeNotAllowed {
            get {
                return ResourceManager.GetString("ServerConfigUpgradePageSkipUpgradeNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to access the Active Directory of the domain. Confirm that.
        /// </summary>
        public static string ServerConfigUserFriendlyUnspecifiedError {
            get {
                return ResourceManager.GetString("ServerConfigUserFriendlyUnspecifiedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must enter a user name..
        /// </summary>
        public static string ServerConfigUserNameBlank {
            get {
                return ResourceManager.GetString("ServerConfigUserNameBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The root user account is reserved and.
        /// </summary>
        public static string ServerConfigUserNameIsRoot {
            get {
                return ResourceManager.GetString("ServerConfigUserNameIsRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to {0} after {1} attempts..
        /// </summary>
        public static string ServerConfigWaitingForSuccesfulConnectionFailedText {
            get {
                return ResourceManager.GetString("ServerConfigWaitingForSuccesfulConnectionFailedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry {0}: Attempting to connect to {1} with user {2} with {3} password....
        /// </summary>
        public static string ServerConfigWaitingForSuccesfulConnectionRetryText {
            get {
                return ResourceManager.GetString("ServerConfigWaitingForSuccesfulConnectionRetryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting {0} seconds before the next connection attempt....
        /// </summary>
        public static string ServerConfigWaitingForSuccesfulConnectionRetryWaitText {
            get {
                return ResourceManager.GetString("ServerConfigWaitingForSuccesfulConnectionRetryWaitText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully connected to {0}..
        /// </summary>
        public static string ServerConfigWaitingForSuccesfulConnectionSuccessText {
            get {
                return ResourceManager.GetString("ServerConfigWaitingForSuccesfulConnectionSuccessText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting until a connection to {0} can be established (with a maximum of {1} attempts)....
        /// </summary>
        public static string ServerConfigWaitingForSuccesfulConnectionText {
            get {
                return ResourceManager.GetString("ServerConfigWaitingForSuccesfulConnectionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user or group name could not be found..
        /// </summary>
        public static string ServerConfigWindowsUserOrGroupNotFound {
            get {
                return ResourceManager.GetString("ServerConfigWindowsUserOrGroupNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating user accounts.
        /// </summary>
        public static string ServerCreateUsersStep {
            get {
                return ResourceManager.GetString("ServerCreateUsersStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the server configuration file.
        /// </summary>
        public static string ServerDeleteConfigurationFileStep {
            get {
                return ResourceManager.GetString("ServerDeleteConfigurationFileStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the data directory.
        /// </summary>
        public static string ServerDeleteDataDirectoryStep {
            get {
                return ResourceManager.GetString("ServerDeleteDataDirectoryStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing the MySQL Windows service.
        /// </summary>
        public static string ServerDeleteServiceStep {
            get {
                return ResourceManager.GetString("ServerDeleteServiceStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server does not support automatic persistent global settings. Restarting server to persist settings..
        /// </summary>
        public static string ServerDoesNotSupportPersistSetGlobalSettings {
            get {
                return ResourceManager.GetString("ServerDoesNotSupportPersistSetGlobalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating MySQL Enterprise Firewall plugin.
        /// </summary>
        public static string ServerEnableEnterpriseFirewallStep {
            get {
                return ResourceManager.GetString("ServerEnableEnterpriseFirewallStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing database (may take a long time).
        /// </summary>
        public static string ServerInitializeDatabaseStep {
            get {
                return ResourceManager.GetString("ServerInitializeDatabaseStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when trying to retrieve the group replication member role:.
        /// </summary>
        public static string ServerInstanceGetGroupReplicationMemberRoleError {
            get {
                return ResourceManager.GetString("ServerInstanceGetGroupReplicationMemberRoleError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following error occurred when trying to retrieve the group replication member role:.
        /// </summary>
        public static string ServerInstanceGetGroupReplicationMemberRoleError1 {
            get {
                return ResourceManager.GetString("ServerInstanceGetGroupReplicationMemberRoleError1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following error occurred when trying to retrieve the server ID:.
        /// </summary>
        public static string ServerInstanceGetServerIdError {
            get {
                return ResourceManager.GetString("ServerInstanceGetServerIdError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following error occurred when trying to retrieve the server version number:.
        /// </summary>
        public static string ServerInstanceGetServerVersionError {
            get {
                return ResourceManager.GetString("ServerInstanceGetServerVersionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the value of {0}..
        /// </summary>
        public static string ServerInstanceGetVariableFail {
            get {
                return ResourceManager.GetString("ServerInstanceGetVariableFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script executed successfully..
        /// </summary>
        public static string ServerInstanceInfoExecuteScriptExecutionSuccess {
            get {
                return ResourceManager.GetString("ServerInstanceInfoExecuteScriptExecutionSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing script:.
        /// </summary>
        public static string ServerInstanceInfoExecutingScript {
            get {
                return ResourceManager.GetString("ServerInstanceInfoExecutingScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to reset the persistence of variable {0}..
        /// </summary>
        public static string ServerInstanceResetPersistenceFail {
            get {
                return ResourceManager.GetString("ServerInstanceResetPersistenceFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set the variable {0}..
        /// </summary>
        public static string ServerInstanceSetVariableFail {
            get {
                return ResourceManager.GetString("ServerInstanceSetVariableFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Server instance is still running. Retrying count {0}....
        /// </summary>
        public static string ServerInstanceStillRunningRetryText {
            get {
                return ResourceManager.GetString("ServerInstanceStillRunningRetryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL service stopped successfully....
        /// </summary>
        public static string ServerInstanceStoppedWindowsServiceText {
            get {
                return ResourceManager.GetString("ServerInstanceStoppedWindowsServiceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found Windows service for the server instance. Stopping MySQL service....
        /// </summary>
        public static string ServerInstanceStoppingWindowsServiceText {
            get {
                return ResourceManager.GetString("ServerInstanceStoppingWindowsServiceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installs only MySQL Server for Windows..
        /// </summary>
        public static string ServerOnlySetupTypeDesc {
            get {
                return ResourceManager.GetString("ServerOnlySetupTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preparing authentication plugin change.
        /// </summary>
        public static string ServerPrepareAuthenticationPluginChangeStep {
            get {
                return ResourceManager.GetString("ServerPrepareAuthenticationPluginChangeStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check and Upgrade Database.
        /// </summary>
        public static string ServerReconfigCheckAndUpgradeDatabase {
            get {
                return ResourceManager.GetString("ServerReconfigCheckAndUpgradeDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recreate Sandbox InnoDB Cluster.
        /// </summary>
        public static string ServerReconfigRecreateSandboxCluster {
            get {
                return ResourceManager.GetString("ServerReconfigRecreateSandboxCluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing Windows Firewall rules.
        /// </summary>
        public static string ServerRemoveFirewallRulesStep {
            get {
                return ResourceManager.GetString("ServerRemoveFirewallRulesStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing InnoDB Cluster Setup.
        /// </summary>
        public static string ServerRemovePageReconfigurationTitle {
            get {
                return ResourceManager.GetString("ServerRemovePageReconfigurationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Data.
        /// </summary>
        public static string ServerRemovePageRemoveTitle {
            get {
                return ResourceManager.GetString("ServerRemovePageRemoveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restarting the server..
        /// </summary>
        public static string ServerRestartProcessStep {
            get {
                return ResourceManager.GetString("ServerRestartProcessStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No service exists for this server installation..
        /// </summary>
        public static string ServerServiceNotFoundText {
            get {
                return ResourceManager.GetString("ServerServiceNotFoundText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing mysqladmin shutdown to do a clean shutdown..
        /// </summary>
        public static string ServerShutdownMySqlAdminShutDown {
            get {
                return ResourceManager.GetString("ServerShutdownMySqlAdminShutDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error trying to perform a clean shutdown..
        /// </summary>
        public static string ServerShutdownMySqlAdminShutDownError {
            get {
                return ResourceManager.GetString("ServerShutdownMySqlAdminShutDownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully performed a clean shutdown..
        /// </summary>
        public static string ServerShutdownMySqlAdminShutDownSuccess {
            get {
                return ResourceManager.GetString("ServerShutdownMySqlAdminShutDownSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting innodb_fast_shutdown to do a clean shutdown (a full purge and a change buffer merge before shutting down)..
        /// </summary>
        public static string ServerShutdownSettingInnoDbFastShutdown {
            get {
                return ResourceManager.GetString("ServerShutdownSettingInnoDbFastShutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error trying to set innodb_fast_shutdown to do a clean shutdown..
        /// </summary>
        public static string ServerShutdownSettingInnoDbFastShutdownError {
            get {
                return ResourceManager.GetString("ServerShutdownSettingInnoDbFastShutdownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully set innodb_fast_shutdown to do a clean shutdown..
        /// </summary>
        public static string ServerShutdownSettingInnoDbFastShutdownSuccess {
            get {
                return ResourceManager.GetString("ServerShutdownSettingInnoDbFastShutdownSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the server and upgrading system tables (may take a long time).
        /// </summary>
        public static string ServerStartAndUpgradeProcessStep {
            get {
                return ResourceManager.GetString("ServerStartAndUpgradeProcessStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: The system tables upgrade was skipped after upgrading MySQL Server. The server will be started now with the --upgrade=MINIMAL option, but then each time the server is started it will attempt to upgrade the system tables, unless you modify the {0} to add --upgrade=MINIMAL to bypass the upgrade..
        /// </summary>
        public static string ServerStartingWithMinimalUpgradeWarning {
            get {
                return ResourceManager.GetString("ServerStartingWithMinimalUpgradeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the server while skipping system tables upgrade (not recommended).
        /// </summary>
        public static string ServerStartMinimalUpgradeStep {
            get {
                return ResourceManager.GetString("ServerStartMinimalUpgradeStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the server.
        /// </summary>
        public static string ServerStartProcessStep {
            get {
                return ResourceManager.GetString("ServerStartProcessStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping the server.
        /// </summary>
        public static string ServerStopProcessStep {
            get {
                return ResourceManager.GetString("ServerStopProcessStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating permissions for the data folder and related server files.
        /// </summary>
        public static string ServerUpdateServerFilePermissions {
            get {
                return ResourceManager.GetString("ServerUpdateServerFilePermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data folder and related server files have already been updated..
        /// </summary>
        public static string ServerUpdateServerFilePermissionsNotNeeded {
            get {
                return ResourceManager.GetString("ServerUpdateServerFilePermissionsNotNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating the Start menu link.
        /// </summary>
        public static string ServerUpdateStartMenuLinkStep {
            get {
                return ResourceManager.GetString("ServerUpdateStartMenuLinkStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating Windows Firewall rules.
        /// </summary>
        public static string ServerUpdateWindowsFirewallStep {
            get {
                return ResourceManager.GetString("ServerUpdateWindowsFirewallStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking and upgrading system tables (may take a long time).
        /// </summary>
        public static string ServerUpgradeStep {
            get {
                return ResourceManager.GetString("ServerUpgradeStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A default anonymous user account exists that takes precedence over any user account created with a &apos;%&apos; host wildcard..
        /// </summary>
        public static string ServerUserAnonymousAccountWithAllHostsWarning {
            get {
                return ResourceManager.GetString("ServerUserAnonymousAccountWithAllHostsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A default anonymous user account exists that takes precedence over any user account created with a &apos;%&apos; host wildcard..
        /// </summary>
        public static string ServerUserAnonymousAccountWithAllHostsWarning1 {
            get {
                return ResourceManager.GetString("ServerUserAnonymousAccountWithAllHostsWarning1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid server authentication type: .
        /// </summary>
        public static string ServerUserInvalidAuthenticationType {
            get {
                return ResourceManager.GetString("ServerUserInvalidAuthenticationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown value given for user block: .
        /// </summary>
        public static string ServerUserInvalidUserBlock {
            get {
                return ResourceManager.GetString("ServerUserInvalidUserBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An authentication plugin must be specified for new users..
        /// </summary>
        public static string ServerUserMissingAuthenticationPlugin {
            get {
                return ResourceManager.GetString("ServerUserMissingAuthenticationPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name must be given for new users..
        /// </summary>
        public static string ServerUserMissingUserName {
            get {
                return ResourceManager.GetString("ServerUserMissingUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A role must be specified for each new user added..
        /// </summary>
        public static string ServerUserMissingUserRole {
            get {
                return ResourceManager.GetString("ServerUserMissingUserRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows authorization requires a token list..
        /// </summary>
        public static string ServerUserMissingWindowsTokensList {
            get {
                return ResourceManager.GetString("ServerUserMissingWindowsTokensList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find role: .
        /// </summary>
        public static string ServerUserRoleNotFound {
            get {
                return ResourceManager.GetString("ServerUserRoleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing configuration file.
        /// </summary>
        public static string ServerWriteConfigFileStep {
            get {
                return ResourceManager.GetString("ServerWriteConfigFileStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete the service. Please delete it manually..
        /// </summary>
        public static string ServiceManualRemoveRequiredText {
            get {
                return ResourceManager.GetString("ServiceManualRemoveRequiredText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The existing service will be removed after the reboot..
        /// </summary>
        public static string ServiceRemoveAfterRebootText {
            get {
                return ResourceManager.GetString("ServiceRemoveAfterRebootText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The existing service has been deleted..
        /// </summary>
        public static string ServiceRemovedText {
            get {
                return ResourceManager.GetString("ServiceRemovedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting the instance as writable.
        /// </summary>
        public static string SetLocalInstanceAsWritableStep {
            get {
                return ResourceManager.GetString("SetLocalInstanceAsWritableStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap settings {
            get {
                object obj = ResourceManager.GetObject("settings", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting up product configuration controller for new installation..
        /// </summary>
        public static string SettingUpNewInstallation {
            get {
                return ResourceManager.GetString("SettingUpNewInstallation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting up product configuration controller for reconfiguration..
        /// </summary>
        public static string SettingUpReconfiguration {
            get {
                return ResourceManager.GetString("SettingUpReconfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting up product configuration controller for upgrade..
        /// </summary>
        public static string SettingUpUpgrade {
            get {
                return ResourceManager.GetString("SettingUpUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An option to select the {0} setup type..
        /// </summary>
        public static string SetupTypeAccessibleDescription {
            get {
                return ResourceManager.GetString("SetupTypeAccessibleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A label displaying a short description about the {0} setup type..
        /// </summary>
        public static string SetupTypeLabelAccessibleDescription {
            get {
                return ResourceManager.GetString("SetupTypeLabelAccessibleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Short Description.
        /// </summary>
        public static string SetupTypeLabelAccessibleName {
            get {
                return ResourceManager.GetString("SetupTypeLabelAccessibleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show {0}.
        /// </summary>
        public static string ShowPrefixText {
            get {
                return ResourceManager.GetString("ShowPrefixText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show {0}.
        /// </summary>
        public static string ShowPrefixText1 {
            get {
                return ResourceManager.GetString("ShowPrefixText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap SidebarBackground {
            get {
                object obj = ResourceManager.GetObject("SidebarBackground", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid SID instance was provided..
        /// </summary>
        public static string SidNotProvided {
            get {
                return ResourceManager.GetString("SidNotProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t set a value if the singleton is already instantiated..
        /// </summary>
        public static string SingletonPropertySetError {
            get {
                return ResourceManager.GetString("SingletonPropertySetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to win32.
        /// </summary>
        public static string Standard32bitFileNameSubstring {
            get {
                return ResourceManager.GetString("Standard32bitFileNameSubstring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to winx64.
        /// </summary>
        public static string Standard64bitFileNameSubstring {
            get {
                return ResourceManager.GetString("Standard64bitFileNameSubstring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process for {0}, with ID {1}, was run successfully and exited with code {2}..
        /// </summary>
        public static string StartedAndExitedProcessSuccessfullyText {
            get {
                return ResourceManager.GetString("StartedAndExitedProcessSuccessfullyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process for {0}, with ID {1}, has been started successfully and is running..
        /// </summary>
        public static string StartedAndRunningProcessSuccessfullyText {
            get {
                return ResourceManager.GetString("StartedAndRunningProcessSuccessfullyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StartedProcessErrorText.
        /// </summary>
        public static string StartedProcessErrorText {
            get {
                return ResourceManager.GetString("StartedProcessErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting process with command: {0} {1}....
        /// </summary>
        public static string StartingProcessDetailsText {
            get {
                return ResourceManager.GetString("StartingProcessDetailsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the server and attempting a connection....
        /// </summary>
        public static string StartingServerAndTestingConnection {
            get {
                return ResourceManager.GetString("StartingServerAndTestingConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to start the MySQL Server instance..
        /// </summary>
        public static string StartingServerInstanceErrorText {
            get {
                return ResourceManager.GetString("StartingServerInstanceErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start value is greater than end value.
        /// </summary>
        public static string StartValueGreaterThanEndValueExceptionText {
            get {
                return ResourceManager.GetString("StartValueGreaterThanEndValueExceptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing....
        /// </summary>
        public static string StatusInstalling {
            get {
                return ResourceManager.GetString("StatusInstalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} %.
        /// </summary>
        public static string StatusPercentage {
            get {
                return ResourceManager.GetString("StatusPercentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped as this is not required..
        /// </summary>
        public static string StepSkipped {
            get {
                return ResourceManager.GetString("StepSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Killed process for {0}, with ID {1}..
        /// </summary>
        public static string StoppedProcessText {
            get {
                return ResourceManager.GetString("StoppedProcessText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopped.
        /// </summary>
        public static string StoppedText {
            get {
                return ResourceManager.GetString("StoppedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Killing process for {0}, with ID {1}....
        /// </summary>
        public static string StoppingProcessText {
            get {
                return ResourceManager.GetString("StoppingProcessText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to stop the MySQL Server instance:.
        /// </summary>
        public static string StoppingServerInstanceErrorText {
            get {
                return ResourceManager.GetString("StoppingServerInstanceErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping MySQL Server instance....
        /// </summary>
        public static string StoppingServerInstanceText {
            get {
                return ResourceManager.GetString("StoppingServerInstanceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to by another mysqld process. Please use a tool such as mysqladmin to shutdown any server.
        /// </summary>
        public static string String {
            get {
                return ResourceManager.GetString("String", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please visit {0} to download the latest release of the MySQL Configurator or restart the application and skip update checks to continue using the current software..
        /// </summary>
        public static string String1 {
            get {
                return ResourceManager.GetString("String1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INFORMATION_SCHEMA tables (which with large numbers of databases and tables can.
        /// </summary>
        public static string String10 {
            get {
                return ResourceManager.GetString("String10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to become costly), or any custom SQL that is used to monitor application specific statistics..
        /// </summary>
        public static string String11 {
            get {
                return ResourceManager.GetString("String11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you are manually managing this user, it should have at least the SELECT and SHOW.
        /// </summary>
        public static string String12 {
            get {
                return ResourceManager.GetString("String12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DATABASES privileges globally..
        /// </summary>
        public static string String13 {
            get {
                return ResourceManager.GetString("String13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup files will be dumped to &quot;{0}&quot;..
        /// </summary>
        public static string String14 {
            get {
                return ResourceManager.GetString("String14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide a more complex password for stronger security..
        /// </summary>
        public static string String15 {
            get {
                return ResourceManager.GetString("String15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.
        /// </summary>
        public static string String16 {
            get {
                return ResourceManager.GetString("String16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1}.
        /// </summary>
        public static string String17 {
            get {
                return ResourceManager.GetString("String17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can add or delete a Windows Firewall rule manually by following the instructions at this URL:.
        /// </summary>
        public static string String18 {
            get {
                return ResourceManager.GetString("String18", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://windows.microsoft.com/en-US/windows-vista/Allow-a-program-to-communicate-through-Windows-Firewall.
        /// </summary>
        public static string String19 {
            get {
                return ResourceManager.GetString("String19", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to instances targeting the same data directory..
        /// </summary>
        public static string String2 {
            get {
                return ResourceManager.GetString("String2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.
        /// </summary>
        public static string String20 {
            get {
                return ResourceManager.GetString("String20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: When working with domains, ensure the current Windows user account can access.
        /// </summary>
        public static string String21 {
            get {
                return ResourceManager.GetString("String21", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the Active Directory. Otherwise, select the &quot;Validate Active Directory users with&quot;.
        /// </summary>
        public static string String22 {
            get {
                return ResourceManager.GetString("String22", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to check box and provide credentials for a valid user account..
        /// </summary>
        public static string String23 {
            get {
                return ResourceManager.GetString("String23", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: There may be some errors thrown by MySQL Server, the mysql_upgrade tool is going to be run next to attempt to fix database incompatibilities..
        /// </summary>
        public static string String24 {
            get {
                return ResourceManager.GetString("String24", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the domain exists, is available, and the credentials are correct..
        /// </summary>
        public static string String25 {
            get {
                return ResourceManager.GetString("String25", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cannot be used for the cluster user..
        /// </summary>
        public static string String26 {
            get {
                return ResourceManager.GetString("String26", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FOR THE BEST RESULTS: Run mysqld.exe --upgrade=FORCE on the command line to upgrade the system tables manually..
        /// </summary>
        public static string String27 {
            get {
                return ResourceManager.GetString("String27", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.
        /// </summary>
        public static string String28 {
            get {
                return ResourceManager.GetString("String28", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to privileged users will be used in favor of a SUPER user, unless higher privileges are required -.
        /// </summary>
        public static string String3 {
            get {
                return ResourceManager.GetString("String3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in which case we temporarily log in as the SUPER privileged user, and then fall back to the.
        /// </summary>
        public static string String4 {
            get {
                return ResourceManager.GetString("String4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to general user..
        /// </summary>
        public static string String5 {
            get {
                return ResourceManager.GetString("String5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you are manually managing this user, it should have at least the PROCESS, REPLICATION.
        /// </summary>
        public static string String6 {
            get {
                return ResourceManager.GetString("String6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLIENT, SELECT and SHOW DATABASES privileges globally..
        /// </summary>
        public static string String7 {
            get {
                return ResourceManager.GetString("String7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to within only global SELECT privileges..
        /// </summary>
        public static string String8 {
            get {
                return ResourceManager.GetString("String8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Examples of these kinds of statements include getting database metadata from.
        /// </summary>
        public static string String9 {
            get {
                return ResourceManager.GetString("String9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        public static string SuccessText {
            get {
                return ResourceManager.GetString("SuccessText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter TEnum must be an Enum.
        /// </summary>
        public static string TEnumNotEnumTypeException {
            get {
                return ResourceManager.GetString("TEnumNotEnumTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This product cannot be installed because another product ({0})
        ///is already installed or is selected for installation that cannot be installed at the same time.
        ///Uninstall {0} in order to allow installing this product..
        /// </summary>
        public static string TooltipProductCannotBeInstalled {
            get {
                return ResourceManager.GetString("TooltipProductCannotBeInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try again.
        /// </summary>
        public static string TryAgainLink {
            get {
                return ResourceManager.GetString("TryAgainLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try again.
        /// </summary>
        public static string TryAgainLink1 {
            get {
                return ResourceManager.GetString("TryAgainLink1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Tutorials_Icon {
            get {
                object obj = ResourceManager.GetObject("Tutorials_Icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Tutorials_Icon24 {
            get {
                object obj = ResourceManager.GetObject("Tutorials_Icon24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to remove connection..
        /// </summary>
        public static string UnableToDeleteConnectionErrorDetail {
            get {
                return ResourceManager.GetString("UnableToDeleteConnectionErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting connections is not allowed while MySQL Workbench is running..
        /// </summary>
        public static string UnableToDeleteConnectionsWhenWBRunning {
            get {
                return ResourceManager.GetString("UnableToDeleteConnectionsWhenWBRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find the MySQL Configurator directory..
        /// </summary>
        public static string UnableToFindConfiguratorDirectory {
            get {
                return ResourceManager.GetString("UnableToFindConfiguratorDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find the server configuration file..
        /// </summary>
        public static string UnableToFindIniDirectory {
            get {
                return ResourceManager.GetString("UnableToFindIniDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find the MySQL Configurator&apos;s installation directory..
        /// </summary>
        public static string UnableToFindInstallerDirectory {
            get {
                return ResourceManager.GetString("UnableToFindInstallerDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find the MySQL Configurator&apos;s installation directory..
        /// </summary>
        public static string UnableToFindInstallerDirectory1 {
            get {
                return ResourceManager.GetString("UnableToFindInstallerDirectory1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to launch MySQL Shell. Unable to locate the installation directory..
        /// </summary>
        public static string UnableToLocateShell {
            get {
                return ResourceManager.GetString("UnableToLocateShell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to launch MySQL Workbench.  Unable to locate the installation directory..
        /// </summary>
        public static string UnableToLocateWorkbench {
            get {
                return ResourceManager.GetString("UnableToLocateWorkbench", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to merge existing connections with MySQL Workbench..
        /// </summary>
        public static string UnableToMergeConnectionsErrorDetail {
            get {
                return ResourceManager.GetString("UnableToMergeConnectionsErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} now works with the connections file used by MySQL Workbench if it is installed.
        ///
        ///{0} attempted to merge all existing connections with MySQL Workbench but is unable to do that if MySQLWorkbench is running.
        ///
        ///Please close MySQL Workbench and restart {0} to perform the merge..
        /// </summary>
        public static string UnableToMergeConnectionsErrorMoreInfo {
            get {
                return ResourceManager.GetString("UnableToMergeConnectionsErrorMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. ({0}) The installer will now close..
        /// </summary>
        public static string UnhandledException {
            get {
                return ResourceManager.GetString("UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled Exception.
        /// </summary>
        public static string UnhandledExceptionText {
            get {
                return ResourceManager.GetString("UnhandledExceptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Copyright (c) 2016, 2020, Oracle and/or its affiliates.
        ///# Uninstall firewall tables, functions and procedures.
        ///USE mysql;
        ///DELIMITER //
        ///CREATE PROCEDURE uninstall_enterprise_firewall()
        ///BEGIN
        ///set @m1 = (SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = &apos;MYSQL_FIREWALL_USERS&apos;);
        ///set @m2 = (SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = &apos;MYSQL_FIREWALL_WHITELIST&apos;);
        ///set @m3 = (SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = &apos;MYSQL_FIREWALL&apos;);
        ///I [rest of string was truncated]&quot;;.
        /// </summary>
        public static string UninstallEnterpriseFirewall {
            get {
                return ResourceManager.GetString("UninstallEnterpriseFirewall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling product.
        /// </summary>
        public static string UninstallProductStep {
            get {
                return ResourceManager.GetString("UninstallProductStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing product {0}.
        /// </summary>
        public static string UninstallProductStep1 {
            get {
                return ResourceManager.GetString("UninstallProductStep1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No known reason..
        /// </summary>
        public static string UnknownReason {
            get {
                return ResourceManager.GetString("UnknownReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string UnknownText {
            get {
                return ResourceManager.GetString("UnknownText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap up_arrow {
            get {
                object obj = ResourceManager.GetObject("up_arrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an update available to the MySQL  Installer.  Do you want to download and install it now?.
        /// </summary>
        public static string UpdateAvailable {
            get {
                return ResourceManager.GetString("UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update?.
        /// </summary>
        public static string UpdateCaption {
            get {
                return ResourceManager.GetString("UpdateCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel updating your product catalog?.
        /// </summary>
        public static string UpdateCatalogWizardCancelUpdateDetailText {
            get {
                return ResourceManager.GetString("UpdateCatalogWizardCancelUpdateDetailText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout expired during update check..
        /// </summary>
        public static string UpdateCheckTimeoutExceeded {
            get {
                return ResourceManager.GetString("UpdateCheckTimeoutExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We have downloaded and updated the MySQL product catalog..
        /// </summary>
        public static string UpdatedCatalog {
            get {
                return ResourceManager.GetString("UpdatedCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an error downloading the product catalog. Please check your connection and try again later.
        ///The error was: {0}
        ///
        ///You can still continue by clicking &apos;Next &gt;&apos;..
        /// </summary>
        public static string UpdatePageDownloadFailed {
            get {
                return ResourceManager.GetString("UpdatePageDownloadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is complete.  Please click &apos;Next &gt;&apos; to continue..
        /// </summary>
        public static string UpdatePageDownloadSucceeded {
            get {
                return ResourceManager.GetString("UpdatePageDownloadSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap UpdateProducts {
            get {
                object obj = ResourceManager.GetObject("UpdateProducts", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully updated product catalog..
        /// </summary>
        public static string UpdateProductsSuccessful {
            get {
                return ResourceManager.GetString("UpdateProductsSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your existing MySQL Configurator version is incompatible with the most recent products. You will need to upgrade to get further updates to your software.
        ///Please visit {0} to download the latest release of the MySQL Configurator or restart the application and skip update checks to continue using the current software..
        /// </summary>
        public static string UpdateRequired {
            get {
                return ResourceManager.GetString("UpdateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Required.
        /// </summary>
        public static string UpdateRequiredCaption {
            get {
                return ResourceManager.GetString("UpdateRequiredCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates are available for one or more of your installed MySQL products. Would you like to upgrade them now?.
        /// </summary>
        public static string UpdatesAreAvailable {
            get {
                return ResourceManager.GetString("UpdatesAreAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates Available.
        /// </summary>
        public static string UpdatesAreAvailableCaption {
            get {
                return ResourceManager.GetString("UpdatesAreAvailableCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to update the product catalog..
        /// </summary>
        public static string UpdatingProductCatalog {
            get {
                return ResourceManager.GetString("UpdatingProductCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to update the list of products..
        /// </summary>
        public static string UpdatingProductList {
            get {
                return ResourceManager.GetString("UpdatingProductList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap upgrade_logo {
            get {
                object obj = ResourceManager.GetObject("upgrade_logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap UpgradeAvailable {
            get {
                object obj = ResourceManager.GetObject("UpgradeAvailable", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to apply this upgrade now?.
        /// </summary>
        public static string UpgradeAvailableGuiSubDetailText {
            get {
                return ResourceManager.GetString("UpgradeAvailableGuiSubDetailText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installed version of MySQL Utilities includes the MySQL Fabric tool. MySQL Fabric is now a stand-alone product and must be installed separately. This update does not include MySQL Fabric..
        /// </summary>
        public static string UpgradePreviousUtilitiesAndFabric {
            get {
                return ResourceManager.GetString("UpgradePreviousUtilitiesAndFabric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade.
        /// </summary>
        public static string UpgradeText {
            get {
                return ResourceManager.GetString("UpgradeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No URL was provided..
        /// </summary>
        public static string UrlNotProvided {
            get {
                return ResourceManager.GetString("UrlNotProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;RoleDefinitions xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; version=&quot;1&quot; format=&quot;1&quot;&gt;
        ///  &lt;Privileges&gt;
        ///    &lt;Privilege name=&quot;SELECT&quot; column=&quot;Select_priv&quot; description=&quot;The SELECT privilege enables you to select rows from tables in a database. SELECT statements require the SELECT privilege only if they actually retrieve rows from a table. Some SELECT statements do not access tables and can be executed without permission  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string user_roles {
            get {
                return ResourceManager.GetString("user_roles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name cannot be empty or just contain whitespaces..
        /// </summary>
        public static string UsernameEmptyOrWhiteSpace {
            get {
                return ResourceManager.GetString("UsernameEmptyOrWhiteSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The passwords do not match..
        /// </summary>
        public static string UsernamePasswordConfirmationPasswordDoNotMatch {
            get {
                return ResourceManager.GetString("UsernamePasswordConfirmationPasswordDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password does not meet the minimum length requirement of 4 characters..
        /// </summary>
        public static string UsernamePasswordConfirmationPasswordNotGoodEnough {
            get {
                return ResourceManager.GetString("UsernamePasswordConfirmationPasswordNotGoodEnough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current user does not have the required permission to query environment variables..
        /// </summary>
        public static string UserNotAllowedToQueryEnvVariables {
            get {
                return ResourceManager.GetString("UserNotAllowedToQueryEnvVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking if full manifest exists..
        /// </summary>
        public static string ValidatingManifestExists {
            get {
                return ResourceManager.GetString("ValidatingManifestExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation Error.
        /// </summary>
        public static string ValidationErrorTitle {
            get {
                return ResourceManager.GetString("ValidationErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to extract the version number for the {0} variable. Format of the version entry must be of type: &lt;var_name&gt;=&quot;&lt;version_number&gt;&quot;..
        /// </summary>
        public static string VersionProcessingFailed {
            get {
                return ResourceManager.GetString("VersionProcessingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap VerticalMiddleDivider {
            get {
                object obj = ResourceManager.GetObject("VerticalMiddleDivider", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Wait.
        /// </summary>
        public static string WaitButtonDefaultText {
            get {
                return ResourceManager.GetString("WaitButtonDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Wait.
        /// </summary>
        public static string WaitButtonDefaultText1 {
            get {
                return ResourceManager.GetString("WaitButtonDefaultText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait while the MySQL Configurator processes the current operation..
        /// </summary>
        public static string WaitScreenText {
            get {
                return ResourceManager.GetString("WaitScreenText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap warning_sign {
            get {
                object obj = ResourceManager.GetObject("warning_sign", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon warning_sign_icon {
            get {
                object obj = ResourceManager.GetObject("warning_sign_icon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon warning_sign_icon1 {
            get {
                object obj = ResourceManager.GetObject("warning_sign_icon1", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap warning_sign1 {
            get {
                object obj = ResourceManager.GetObject("warning_sign1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap warning_sign2 {
            get {
                object obj = ResourceManager.GetObject("warning_sign2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string WarningsText {
            get {
                return ResourceManager.GetString("WarningsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string WarningText {
            get {
                return ResourceManager.GetString("WarningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string WarningText1 {
            get {
                return ResourceManager.GetString("WarningText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap WelcomeMaintenance {
            get {
                object obj = ResourceManager.GetObject("WelcomeMaintenance", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap WelcomeMaintenance1 {
            get {
                object obj = ResourceManager.GetObject("WelcomeMaintenance1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn more about MySQL products and better understand how you can benefit the most..
        /// </summary>
        public static string WelcomePageAboutDescriptionText {
            get {
                return ResourceManager.GetString("WelcomePageAboutDescriptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About MySQL.
        /// </summary>
        public static string WelcomePageAboutLinkText {
            get {
                return ResourceManager.GetString("WelcomePageAboutLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Guide you through the installation and configuration of your MySQL products..
        /// </summary>
        public static string WelcomePageInstallDescriptionText {
            get {
                return ResourceManager.GetString("WelcomePageInstallDescriptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install MySQL Products.
        /// </summary>
        public static string WelcomePageInstallLinkText {
            get {
                return ResourceManager.GetString("WelcomePageInstallLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add additional MySQL products or make changes to the features of already installed products..
        /// </summary>
        public static string WelcomePageModifyDescriptionText {
            get {
                return ResourceManager.GetString("WelcomePageModifyDescriptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove individual MySQL products from your machine. Also select this item to remove all MySQL products..
        /// </summary>
        public static string WelcomePageRemoveDescriptionText {
            get {
                return ResourceManager.GetString("WelcomePageRemoveDescriptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove MySQL Products.
        /// </summary>
        public static string WelcomePageRemoveLinkText {
            get {
                return ResourceManager.GetString("WelcomePageRemoveLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get more information on how to install MySQL and configure it to run efficiently on your computer..
        /// </summary>
        public static string WelcomePageResourcesDescriptionText {
            get {
                return ResourceManager.GetString("WelcomePageResourcesDescriptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run this check to see if new maintenance releases are available and to install them..
        /// </summary>
        public static string WelcomePageUpdateCheckDescriptionText {
            get {
                return ResourceManager.GetString("WelcomePageUpdateCheckDescriptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for Updates.
        /// </summary>
        public static string WelcomePageUpdateCheckLinkText {
            get {
                return ResourceManager.GetString("WelcomePageUpdateCheckLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select this action item to update the installed MySQL products on this machine to the latest version..
        /// </summary>
        public static string WelcomePageUpdateProductsDescriptionText {
            get {
                return ResourceManager.GetString("WelcomePageUpdateProductsDescriptionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Updates.
        /// </summary>
        public static string WelcomePageUpdateProductsLinkText {
            get {
                return ResourceManager.GetString("WelcomePageUpdateProductsLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap WelcomeRoundedButton {
            get {
                object obj = ResourceManager.GetObject("WelcomeRoundedButton", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap wex_product_catalog {
            get {
                object obj = ResourceManager.GetObject("wex_product_catalog", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is running already..
        /// </summary>
        public static string WindowsServiceAlreadyRunning {
            get {
                return ResourceManager.GetString("WindowsServiceAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows service name cannot contain characters from the ASCII character set that are less than decimal value 32..
        /// </summary>
        public static string WindowsServiceNameContainsInvalidCharactersError {
            get {
                return ResourceManager.GetString("WindowsServiceNameContainsInvalidCharactersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows service name cannot contain forward or backward slashes (&apos;/&apos; or &apos;\&apos;)..
        /// </summary>
        public static string WindowsServiceNameContainsSlashesError {
            get {
                return ResourceManager.GetString("WindowsServiceNameContainsSlashesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows service name is already used..
        /// </summary>
        public static string WindowsServiceNameInUseError {
            get {
                return ResourceManager.GetString("WindowsServiceNameInUseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows service name cannot be null or have zero length..
        /// </summary>
        public static string WindowsServiceNameNullOrEmptyError {
            get {
                return ResourceManager.GetString("WindowsServiceNameNullOrEmptyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} service has not yet been deleted..
        /// </summary>
        public static string WindowsServiceNotYetDeleted {
            get {
                return ResourceManager.GetString("WindowsServiceNotYetDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} service was started successfully..
        /// </summary>
        public static string WindowsServiceStarted {
            get {
                return ResourceManager.GetString("WindowsServiceStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} service failed to start..
        /// </summary>
        public static string WindowsServiceStartFailed {
            get {
                return ResourceManager.GetString("WindowsServiceStartFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to start the {0} service....
        /// </summary>
        public static string WindowsServiceStarting {
            get {
                return ResourceManager.GetString("WindowsServiceStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is stopped or paused, so it can be started..
        /// </summary>
        public static string WindowsServiceStoppedOrPaused {
            get {
                return ResourceManager.GetString("WindowsServiceStoppedOrPaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for the {0} service to be deleted. Retry count {1}..
        /// </summary>
        public static string WindowsServiceWaitingToBeDeleted {
            get {
                return ResourceManager.GetString("WindowsServiceWaitingToBeDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is being paused. Waiting until the status changes....
        /// </summary>
        public static string WindowsServiceWaitingToPause {
            get {
                return ResourceManager.GetString("WindowsServiceWaitingToPause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is being started. Waiting until the status changes....
        /// </summary>
        public static string WindowsServiceWaitingToStart {
            get {
                return ResourceManager.GetString("WindowsServiceWaitingToStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} is being stopped. Waiting until the status changes....
        /// </summary>
        public static string WindowsServiceWaitingToStop {
            get {
                return ResourceManager.GetString("WindowsServiceWaitingToStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap WizardSelection {
            get {
                object obj = ResourceManager.GetObject("WizardSelection", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No WMI query was provided..
        /// </summary>
        public static string WmiQueryMissing {
            get {
                return ResourceManager.GetString("WmiQueryMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resources and information about MySQL Workbench..
        /// </summary>
        public static string WorkBenchDescription {
            get {
                return ResourceManager.GetString("WorkBenchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://wb.mysql.com/.
        /// </summary>
        public static string WorkBenchURL {
            get {
                return ResourceManager.GetString("WorkBenchURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string YesButtonText {
            get {
                return ResourceManager.GetString("YesButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Y]es or [N]o?:  .
        /// </summary>
        public static string YesOrNoForConsoleText {
            get {
                return ResourceManager.GetString("YesOrNoForConsoleText", resourceCulture);
            }
        }
    }
}
